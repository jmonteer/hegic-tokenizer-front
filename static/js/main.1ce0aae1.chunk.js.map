{"version":3,"sources":["context/Wallet.js","contracts/useContract.js","utils.js","context/App.js","components/yourOptions/optionItem.js","components/yourOptions/optionsList.js","components/yourOptions/index.js","components/yourNFTOptions/NFTItem.js","components/yourNFTOptions/NFTList.js","components/yourNFTOptions/index.js","components/dashboard.js","components/header.js","components/intro.js","components/footer.js","connectors.js","components/statusMsg/index.js","App.js","hooks.js","serviceWorker.js","index.js"],"names":["WalletContext","createContext","context","balances","allowances","poolConditions","profits","connect","disconnect","AGGREGATORV3INTERFACE_ABI","getContract","address","ABI","library","account","ethers","Contract","getSigner","useContract","withSignerIfPossible","useWeb3React","useMemo","undefined","error","console","useHegicETHOptionsContract","HEGIC_OPTIONS_ETH_ABI","useHegicWBTCOptionsContract","HEGIC_OPTIONS_WBTC_ABI","useHegicETHOptionsNFTContract","HEGIC_ETH_OPTIONS_NFT_ABI","useHegicWBTCOptionsNFTContract","HEGIC_WBTC_OPTIONS_NFT_ABI","truncateEtherValue","str","maxDecimalDigits","includes","parts","split","slice","formatBN","bn","utils","commify","formatEther","toString","timeToMaturity","expiration","seconds","toNumber","Date","getTime","days","Math","floor","hrs","AppContext","statusMsgTitle","statusMsg","updateStatusMsg","updateAndWait","updateData","reload","OptionItem","props","app","useContext","wbtcOptions","wbtcNFTOptions","ethNFTOptions","id","decimals","provider","asset","optionType","nftProvider","amount","formatUnits","strike","tokenize","a","tokenizeOption","txRequest","scope","href","onClick","UncontrolledTooltip","placement","target","OptionsList","wallet","chainId","useState","rows","setRows","useEffect","updateRows","options","Promise","all","hegic","value","map","o","key","index","holder","state","optionItems","length","push","style","textAlign","width","Table","color","fontSize","YourOptions","Card","body","padding","NFTItem","ethOptions","ethusdPriceProvider","wbtcusdPriceProvider","tokenId","optionsProvider","priceProvider","underlyingOptionParams","setUnderlyingOptionParams","setAmount","setStrike","setExpiration","isValid","setIsValid","destinationAddress","setDestinationAddress","currentProfit","setCurrentProfit","currentPrice","setCurrentPrice","optionId","setOptionId","setOptionType","transferButtonDisabled","setTransferButtonDisabled","exerciseButtonDisabled","setExerciseButtonDisabled","retrieveOptionParams","getCurrentProfit","isAddress","latestRoundData","then","x","answer","cp","profit","log","lockedAmount","getUnderlyingOptionParams","uop","getUnderlyingOptionId","transferOwnership","transfer","transferToken","transferFrom","detokenize","burn","detokenizeOption","exercise","exerciseOption","modal","setModal","toggle","Modal","isOpen","ModalHeader","ModalBody","Row","Col","paddingLeft","InputGroup","md","size","InputGroupAddon","addonType","InputGroupText","Input","disabled","paddingRight","marginTop","cursor","UncontrolledCollapse","toggler","placeholder","onChange","event","Button","className","margin","height","offset","ModalFooter","NFTList","nft","YourNFTOptions","Dashboard","Container","minHeight","paddingBottom","paddingTop","marginBottom","Header","active","nftETHOptions","nftWBTCOptions","updateMyOptions","myOptions","alreadyInOptionIds","optionProviders","op","filter","filters","Create","queryFilter","events","args","option","nftOptionProviders","nop","filter2","Detokenized","events2","setValue","updateMyNFTOptions","myNFTOptions","np","balanceOf","ownedTokens","tokenOfOwnerByIndex","getBalance","balance","ETHBalance","Wallet","sm","display","justifyContent","zIndex","fontFamily","fontWeight","Badge","HEGICBalance","len","substring","truncateAddress","Navbar","backgroundColor","borderBottom","Intro","lineHeight","textTransform","letterSpacing","background","borderImageSource","borderImageSlice","borderStyle","boxSizing","borderRadius","borderImageWidth","Footer","position","flexDirection","verticalAlign","injected","InjectedConnector","supportedChainIds","StatusMsg","Toast","ToastHeader","icon","Spinner","ToastBody","getLibrary","connector","providers","Web3Provider","App","BigNumber","from","setETHBalance","setHEGICBalance","HEGICAllowance","setHEGICAllowance","setMyOptions","myNFT","setMyNFT","setStatusMsg","setStatusMsgTitle","setReload","activate","deactivate","activatingConnector","setActivatingConnector","suppress","ethereum","window","on","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","tried","setTried","isAuthorized","catch","useEagerConnect","title","message","hash","wait","Provider","backgroundImage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","src","data-site","defer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+3nCAEMA,EAAgBC,wBAClB,CACIC,QAAS,GACTC,SAAU,GACVC,WAAY,GACZC,eAAgB,GAChBC,QAAS,GACTC,QAAS,aACTC,WAAY,e,gDCAdC,G,YAA4B,CAAC,CAAC,OAAS,GAAG,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,QAAQ,KAAO,GAAG,KAAO,UAAU,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,WAAW,KAAO,WAAW,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,UAAU,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,SAAS,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,SAAS,KAAO,kBAAkB,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,UAAU,KAAO,UAAU,CAAC,aAAe,SAAS,KAAO,SAAS,KAAO,UAAU,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,WAAW,CAAC,aAAe,SAAS,KAAO,kBAAkB,KAAO,WAAW,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,gBAAkB,OAAO,KAAO,cAuB1xC,SAASC,EAAYC,EAASC,EAAKC,EAASC,GACxC,OAAO,IAAIC,SAAOC,SAASL,EAASC,EAAKC,EAAQI,UAAUH,IAG/D,SAASI,EAAYP,EAASC,GAAmC,IAA9BO,IAA6B,2DACjCC,cAArBP,EADsD,EACtDA,QAASC,EAD6C,EAC7CA,QAEjB,OAAOO,mBAAQ,WACb,IAAKV,IAAYC,IAAQC,EAAS,OAAO,KACzC,IACE,OAAOH,EAAYC,EAASC,EAAKC,EAASM,GAAwBL,EAAUA,OAAUQ,GACtF,MAAOC,GAEP,OADAC,QAAQD,MAAM,yBAA0BA,GACjC,QAER,CAACZ,EAASC,EAAKC,EAASM,EAAsBL,IAG5C,SAASW,IACd,OAAOP,EAlCyB,6CAkCcQ,KAGzC,SAASC,IACd,OAAOT,EAvC0B,6CAuCcU,KAG1C,SAASC,IACd,OAAOX,EA7C6B,6CA6CcY,KAG7C,SAASC,IACd,OAAOb,EAhD8B,6CAgDcc,KC9DrD,IAAMC,EAAqB,SAACC,EAAKC,GAC7B,GAAID,EAAIE,SAAS,KAAM,CACvB,IAAMC,EAAQH,EAAII,MAAM,KACxB,OAAOD,EAAM,GAAK,IAAMA,EAAM,GAAGE,MAAM,EAAGJ,GAE1C,OAAOD,GAGLM,EAAW,SAACC,GACd,OAAO1B,SAAO2B,MAAMC,QAAQ5B,SAAO2B,MAAME,YAAYH,EAAGI,cAQtDC,EAAiB,SAACC,GACpB,IAAIA,EAAY,OAAO,EACvB,IAAIC,EAAUD,EAAWE,YAAa,IAAIC,MAAOC,UAAU,IACrDC,EAAOC,KAAKC,MAAMN,EAAO,OAC/BA,GAAiB,KAALI,EAAU,GACtB,IAAMG,EAAQF,KAAKC,MAAMN,EAAU,MAEnC,OADAA,GAAgB,KAAJO,EACLH,EAAK,KAAKG,EAAI,K,SCxBnBC,EAAavD,wBAAc,CAC7BwD,eAAgB,GAChBC,UAAW,GACXC,gBAAiB,aACjBC,cAAe,aACfC,WAAY,aACZC,QAAQ,ICsCGC,MAtCf,SAAoBC,GAChB,IAAMC,EAAMC,qBAAWV,GAEf1C,EADOoD,qBAAWlE,GACCE,QAAnBY,QACFqD,EAAcxC,IACdyC,EAAiBrC,IACjBsC,EAAgBxC,IAEhByC,EAAKN,EAAMM,GACXC,EAAWP,EAAMQ,UAAYL,EAAYxD,QAAU,EAAI,GACvD8D,EAAQT,EAAMQ,UAAYL,EAAYxD,QAAU,OAAS,MACzD+D,EAAiC,GAApBV,EAAMU,WAAkB,MAAQ,OAC7CC,EAAcX,EAAMQ,UAAYL,EAAYxD,QAAUyD,EAAiBC,EAEvEO,EAAS7D,SAAO2B,MAAMmC,YAAYb,EAAMY,OAAQL,GAChDO,EAAS/D,SAAO2B,MAAMmC,YAAYb,EAAMc,OAAQ,GAEhDC,EAAQ,uCAAG,WAAOT,GAAP,eAAAU,EAAA,sEACWL,EAAYM,eAAeX,EAAIxD,GAD1C,cACPoE,EADO,gBAEPjB,EAAIL,cAAcK,EAAIN,gBAAiBuB,EAAW,YAF3C,OAGbjB,EAAIJ,aAHS,2CAAH,sDAMd,OACA,4BACI,wBAAIsB,MAAM,OAAOV,EAAM,IAAIH,EAAG,KAC9B,4BAAKI,GACL,4BAAKE,GACL,gCAAME,GACN,4BAAKhC,EAAekB,EAAMjB,aAC1B,4BAAI,uBAAGqC,KAAK,IAAId,GAAG,eAAee,QAAO,sBAAE,sBAAAL,EAAA,sEAAkBD,EAAST,GAA3B,oFAAvC,YACJ,kBAACgB,EAAA,EAAD,CAAqBC,UAAU,QAAQC,OAAO,gBAA9C,qFCuBOC,MAzDf,WAEI,IAAMC,EAASxB,qBAAWlE,GAFP,EAGmB0F,EAAOxF,QAH1B,KAGXY,QAHW,EAGFD,QAHE,EAGO8E,QAEFC,mBAAS,KALd,mBAKZC,EALY,KAKNC,EALM,KAQnBC,qBAAU,WACNC,MACD,CAACN,EAAOO,UAEX,IAAMD,EAAU,uCAAG,4BAAAhB,EAAA,sEACWkB,QAAQC,IAAIT,EAAOO,QAAQG,MAAMC,MAAMC,IAA3B,uCAA+B,WAAOC,GAAP,SAAAvB,EAAA,+EAEjE,kBAAC,EAAD,CACCwB,IAAKD,EAAEE,MAAM,IAAIF,EAAE/B,SACnBF,GAAIiC,EAAEE,MACNC,OAAQH,EAAEG,OACV9B,OAAQ2B,EAAE3B,OACVJ,SAAU+B,EAAE/B,SACZM,OAAQyB,EAAEzB,OACV/B,WAAYwD,EAAExD,WACd2B,WAAY6B,EAAE7B,WACdiC,MAAOJ,EAAEI,SAXuD,2CAA/B,wDADvB,OAgBU,IAfnBC,EADS,QAgBAC,QACXD,EAAYE,KACR,wBAAIN,IAAI,iBAAiBO,MAAO,CAACC,UAAU,SAAUC,MAAM,SACvD,4BACI,mDAKhBnB,EAAQc,GAzBO,2CAAH,qDA4BhB,OAAQ,kBAACM,EAAA,EAAD,CAAOH,MAAO,CAACI,MAAO,QAASC,SAAS,SAC5C,+BACI,4BACI,iCACA,oCACA,oCACA,sCACA,wCACA,0CAGR,+BACKvB,KC3CEwB,MAVf,WACI,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACR,MAAO,CAACS,QAAQ,SACvB,kDACA,iFACA,kBAAC,EAAD,Q,sFCiPGC,MAlPf,SAAiBzD,GACb,IAAMC,EAAMC,qBAAWV,GAEhB1C,EADQoD,qBAAWlE,GACDE,QAAlBY,QACDsD,EAAiBrC,IACjBsC,EAAgBxC,IAChBsC,EAAcxC,IACd+F,EAAajG,IACbkG,ENgEDzG,EAnEc,6CAmEcT,GM/D3BmH,EN2DD1G,EA9De,6CA8DcT,GMxD5BoH,GADK7D,EAAMM,GACDN,EAAM6D,SAEhBtD,EAAWP,EAAMQ,UAAYJ,EAAezD,QAAU,EAAI,GAC1D8D,EAAQT,EAAMQ,UAAYJ,EAAezD,QAAU,OAAS,MAC5DgE,EAAcX,EAAMQ,UAAYJ,EAAezD,QAAUyD,EAAiBC,EAC1EyD,EAAkB9D,EAAMQ,UAAYJ,EAAezD,QAAUwD,EAAcuD,EAC3EK,EAAgB/D,EAAMQ,UAAYJ,EAAezD,QAAWiH,EAAuBD,EAlBrE,EAoBwC/B,qBApBxC,mBAoBboC,EApBa,KAoBWC,EApBX,OAqBQrC,qBArBR,mBAqBbhB,EArBa,KAqBLsD,EArBK,OAsBQtC,qBAtBR,mBAsBbd,EAtBa,KAsBLqD,EAtBK,QAuBgBvC,qBAvBhB,qBAuBb7C,GAvBa,MAuBDqF,GAvBC,SAwBUxC,oBAAS,GAxBnB,qBAwBbyC,GAxBa,MAwBJC,GAxBI,SAyBgC1C,mBAAS,IAzBzC,qBAyBb2C,GAzBa,MAyBOC,GAzBP,SA0BsB5C,mBAAS,GA1B/B,qBA0Bb6C,GA1Ba,MA0BEC,GA1BF,SA2BoB9C,mBAAS,GA3B7B,qBA2Bb+C,GA3Ba,MA2BCC,GA3BD,SA4BYhD,mBAAS,GA5BrB,qBA4BbiD,GA5Ba,MA4BHC,GA5BG,SA6BgBlD,mBAAS,GA7BzB,qBA6BblB,GA7Ba,MA6BDqE,GA7BC,SA8BwCnD,oBAAS,GA9BjD,qBA8BboD,GA9Ba,MA8BWC,GA9BX,SA+BwCrD,oBAAS,GA/BjD,qBA+BbsD,GA/Ba,MA+BWC,GA/BX,MAiCpBpD,qBAAU,WACNqD,GAAqBpF,EAAM6D,WAC5B,IAEH9B,qBAAU,WACNsD,OACD,CAACrB,IAEJjC,qBAAU,WACNkD,IAA2BlI,SAAO2B,MAAM4G,UAAUf,OACnD,CAACA,KAEJ,IAAMc,GAAgB,uCAAG,oCAAArE,EAAA,0DAClBgD,EADkB,wBAEXlD,EAASkD,EAAuBlD,OAAO7B,WACvC2B,EAAS7D,SAAO2B,MAAMmC,YAAYmD,EAAuBpD,OAAQL,GAHtD,SAIAwD,EAAcwB,kBAAkBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAAOzG,cAJnD,OAIX0G,EAJW,OAKXjF,EAAkD,GAArCsD,EAAuBtD,WAAkB,MAAQ,OACpEkE,GAAgBe,GAChBZ,GAAcrE,GACVkF,EAAS,EACbpI,QAAQqI,IAAI,aAAcnF,GACT,QAAdA,EACCkF,GAAWD,EAAG7E,GAAQ6E,EAAI/E,EACL,OAAdF,IACPkF,GAAU9E,EAAS6E,GAAIA,EAAG/E,GAG3BgF,EAAS,IAAGA,EAAS,GAErBA,EAAS5B,EAAuB8B,eAC/BF,EAAS5B,EAAuB8B,cAEpCpB,GAAiBkB,GACjBT,GAAqC,GAAVS,GAAiD,GAAhC5B,EAAuBrB,OAtBlD,4CAAH,qDA0BhByC,GAAoB,uCAAG,4BAAApE,EAAA,sEACPL,EAAYoF,0BAA0BlC,GAD/B,cACnBmC,EADmB,OAEzB/B,EAA0B+B,GAC1B9B,EAAUnH,SAAO2B,MAAMmC,YAAYmF,EAAIpF,OAAQL,IAHtB,KAIzBuE,GAJyB,SAIPnE,EAAYsF,sBAAsBpC,GAAS2B,MAAK,SAAAC,GAAC,OAAEA,EAAExG,cAJ9C,kCAKzBkF,EAAUpH,SAAO2B,MAAMmC,YAAYmF,EAAIlF,OAAQ,IAC/CsD,GAAc4B,EAAIjH,YAClBuF,GAAW0B,EAAItD,QAAU/B,EAAYhE,SAPZ,4CAAH,qDAUpBuJ,GAAiB,uCAAG,8BAAAlF,EAAA,sEACCL,EAAYsF,sBAAsBpC,GADnC,cAChBgB,EADgB,gBAEEf,EAAgBqC,SAAStB,EAAUlE,EAAYhE,SAFjD,cAEhBuE,EAFgB,gBAGhBjB,EAAIL,cAAcK,EAAIN,gBAAiBuB,EAAW,sBAHlC,2CAAH,qDAOjBkF,GAAa,uCAAG,4BAAApF,EAAA,sEACML,EAAY0F,aAAavJ,EAASyH,GAAoBV,GAD5D,cACZ3C,EADY,gBAEZjB,EAAIL,cAAcK,EAAIN,gBAAiBuB,EAAW,kBAFtC,2CAAH,qDAMboF,GAAU,uCAAG,WAAOC,GAAP,eAAAvF,EAAA,sEACSL,EAAY6F,iBAAiB3C,EAAS0C,GAD/C,cACTrF,EADS,gBAETjB,EAAIL,cAAcK,EAAIN,gBAAiBuB,EAAW,qBAFzC,2CAAH,sDAMVuF,GAAQ,uCAAG,4BAAAzF,EAAA,sEACWL,EAAY+F,eAAe7C,GADtC,cACP3C,EADO,gBAEPjB,EAAIL,cAAcK,EAAIN,gBAAiBuB,EAAW,mBAF3C,2CAAH,qDApGM,GAyGMU,oBAAS,GAzGf,qBAyGb+E,GAzGa,MAyGNC,GAzGM,MA2GdC,GAAS,WACXD,IAAUD,KAGd,OACA,4BACI,wBAAIxF,MAAM,OAAOV,EAAM,IAAIoE,GAAS,KACpC,4BAAKnE,IACL,4BAAKE,GACL,gCAAME,GACN,4BAAK/B,GAAaD,EAAeC,IAAa,MAE1CsF,GACK,4BAAI,uBAAGjD,KAAK,IAAIC,QAASwF,IAArB,WAEJ,4BAAI,uBAAGzF,KAAK,IAAIC,QAAO,sBAAE,sBAAAL,EAAA,sEAAkBkF,GAAkBrC,GAApC,oFAArB,uBAGb,kBAACiD,EAAA,EAAD,CAAOC,OAAQJ,GAAOE,OAAQA,IAC1B,kBAACG,EAAA,EAAD,CAAaH,OAAQA,IAAQ,uDAC7B,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,CAAKnE,MAAO,CAACqE,YAAY,SACrB,4CAEJ,kBAACF,EAAA,EAAD,KACA,kBAACG,EAAA,EAAD,CAAYtE,MAAO,CAACC,UAAU,WAC1B,kBAACmE,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAK,GAAIxE,MAAO,CAACS,QAAQ,MAAO4D,YAAY,SAC9C,kBAACI,EAAA,EAAD,CAAiBC,UAAU,WACvB,kBAACC,EAAA,EAAD,CAAgB3E,MAAO,CAACK,SAAS,OAAQH,MAAM,SAA/C,OAEJ,kBAAC0E,EAAA,EAAD,CAAO5E,MAAO,CAACK,SAAS,OAAQH,MAAM,QAASZ,MAAO5B,EAAM,IAAIoE,GAAS,IAAK+C,UAAQ,KAG9F,kBAACT,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAK,GAAIxE,MAAO,CAACS,QAAQ,QAC3B,kBAACgE,EAAA,EAAD,CAAiBC,UAAU,WACvB,kBAACC,EAAA,EAAD,CAAgB3E,MAAO,CAACK,SAAS,OAAQH,MAAM,SAA/C,SAEJ,kBAAC0E,EAAA,EAAD,CAAO5E,MAAO,CAACK,SAAS,OAAQH,MAAM,QAASZ,MAAOzB,EAAQgH,UAAQ,KAE9E,kBAACT,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAK,GAAIxE,MAAO,CAACS,QAAQ,QAC3B,kBAACgE,EAAA,EAAD,CAAiBC,UAAU,WACvB,kBAACC,EAAA,EAAD,CAAgB3E,MAAO,CAACK,SAAS,OAAQH,MAAM,SAA/C,iBAEJ,kBAAC0E,EAAA,EAAD,CAAO5E,MAAO,CAACK,SAAS,OAAQH,MAAM,QAASZ,MAAOvB,EAAQ8G,UAAQ,KAE9E,kBAACT,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAK,GAAIxE,MAAO,CAACS,QAAQ,MAAOqE,aAAa,SAC/C,kBAACL,EAAA,EAAD,CAAiBC,UAAU,WACvB,kBAACC,EAAA,EAAD,CAAgB3E,MAAO,CAACK,SAAS,OAAQH,MAAM,SAA/C,eAEJ,kBAAC0E,EAAA,EAAD,CAAO5E,MAAO,CAACK,SAAS,OAAQH,MAAM,QAASZ,MAAO3B,GAAYkH,UAAQ,SAO9F,kBAACV,EAAA,EAAD,CAAKnE,MAAO,CAAC+E,UAAU,SACnB,kBAACX,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,CAAKnE,MAAO,CAACqE,YAAY,OAAQW,OAAO,WAAYzH,GAAG,mBACnD,qDAEJ,kBAAC0H,EAAA,EAAD,CAAsBC,QAAQ,oBAC1B,kBAACZ,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAiBC,UAAU,WACvB,kBAACC,EAAA,EAAD,kBAEA,kBAACC,EAAA,EAAD,CAAOO,YAAY,6CAA6C7F,MAAOkC,GAAoB4D,SAAU,SAACC,GAAD,OAAW5D,GAAsB4D,EAAM5G,OAAOa,UACvJ,kBAACmF,EAAA,EAAD,CAAiBC,UAAU,UACvB,kBAACY,EAAA,EAAD,CAAQC,UAAU,eAAcvF,MAAO,CAACwF,OAAO,KAAMX,SAAU5C,GAAwB3D,QAAO,sBAAE,sBAAAL,EAAA,+EAAYoF,MAAZ,4CAAhG,iBAMpB,kBAACc,EAAA,EAAD,CAAKnE,MAAO,CAAC+E,UAAU,SACnB,kBAACX,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,CAAKnE,MAAO,CAACqE,YAAY,OAAQW,OAAO,WAAYzH,GAAG,mBAAmB,qDAC1E,kBAAC0H,EAAA,EAAD,CAAsBC,QAAQ,oBAC1B,kBAACf,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAK,GAAIxE,MAAO,CAACS,QAAQ,MAAO4D,YAAY,SACtD,kBAACI,EAAA,EAAD,CAAiBC,UAAU,WACnB,kBAACC,EAAA,EAAD,CAAgB3E,MAAO,CAACK,SAAS,OAAQH,MAAM,SAAUxC,EAAzD,iBAEJ,kBAACkH,EAAA,EAAD,CAAO5E,MAAO,CAACK,SAAS,OAAQH,MAAM,QAASZ,MAAOsC,GAAa,IAAKiD,UAAQ,KAEpF,kBAACT,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAK,GAAIxE,MAAO,CAACS,QAAQ,QAC/B,kBAACgE,EAAA,EAAD,CAAiBC,UAAU,WACvB,kBAACC,EAAA,EAAD,CAAgB3E,MAAO,CAACK,SAAS,OAAQH,MAAM,SAA/C,eAEJ,kBAAC0E,EAAA,EAAD,CAAO5E,MAAO,CAACK,SAAS,OAAQH,MAAM,QAASZ,MAAOvD,EAAeC,IAAa6I,UAAQ,KAE9F,kBAACT,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAK,GAAIxE,MAAO,CAACS,QAAQ,QAC/B,kBAACgE,EAAA,EAAD,CAAiBC,UAAU,WACvB,kBAACC,EAAA,EAAD,CAAgB3E,MAAO,CAACK,SAAS,OAAQH,MAAM,SAA/C,QAA8DxC,EAA9D,MAEJ,kBAACkH,EAAA,EAAD,CAAO5E,MAAO,CAACK,SAAS,OAAQH,MAAM,QAASZ,MAAOoC,GAAemD,UAAQ,KAEjF,kBAACT,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAK,GAAIxE,MAAO,CAACS,QAAQ,MAAOqE,aAAa,SACnD,kBAACQ,EAAA,EAAD,CAAQC,UAAU,eAAehI,GAAG,iBAAiByC,MAAO,CAACyF,OAAO,OAAQvF,MAAM,QAAS2E,SAAY1C,GAAwB7D,QAAO,sBAAE,sBAAAL,EAAA,sEAAkByF,KAAlB,oFAAxI,iBAMpB,kBAACS,EAAA,EAAD,CAAKnE,MAAO,CAAC+E,UAAU,SACnB,kBAACX,EAAA,EAAD,KACA,kBAACD,EAAA,EAAD,CAAKnE,MAAO,CAACqE,YAAY,OAAQW,OAAO,WAAYzH,GAAG,qBAAqB,uDAC5E,kBAAC0H,EAAA,EAAD,CAAsBC,QAAQ,sBAC1B,0BAAMlF,MAAO,CAACK,SAAS,SAAvB,iJAGO,6BACP,kBAAC8D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAK,IACX,kBAACc,EAAA,EAAD,CAAQC,UAAU,cAAcjH,QAAO,sBAAE,sBAAAL,EAAA,sEAAkBsF,IAAW,GAA7B,oFAAzC,eAEJ,kBAACa,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAK,EAAGkB,OAAQ,IACtB,kBAACJ,EAAA,EAAD,CAAQC,UAAU,sBAAuBjH,QAAO,sBAAE,sBAAAL,EAAA,sEAAkBsF,IAAW,GAA7B,oFAAlD,mCAQpB,kBAACoC,EAAA,EAAD,KACI,kBAACL,EAAA,EAAD,CAAQC,UAAU,mBAAmBjH,QAASwF,IAA9C,aC3LD8B,MAnDf,WAEI,IAAMjH,EAASxB,qBAAWlE,GAFX,EAGuB0F,EAAOxF,QAH9B,KAGPY,QAHO,EAGED,QAHF,EAGW8E,QAEFC,mBAAS,KALlB,mBAKRC,EALQ,KAKFC,EALE,KAQfC,qBAAU,WACNC,MACD,CAACN,EAAOO,UAEX,IAAMD,EAAU,uCAAG,4BAAAhB,EAAA,sEACWkB,QAAQC,IAAIT,EAAOO,QAAQ2G,IAAIvG,MAAMC,IAAzB,uCAA6B,WAAOC,GAAP,SAAAvB,EAAA,+EAE/D,kBAAC,EAAD,CACCwB,IAAKD,EAAEE,MAAM,IAAIF,EAAE/B,SACnBF,GAAIiC,EAAEE,MACNjC,SAAU+B,EAAE/B,SACZqD,QAAStB,EAAEsB,WANmD,2CAA7B,wDADvB,OAWU,IAVnBjB,EADS,QAWAC,QACXD,EAAYE,KACR,wBAAIN,IAAI,eAAeO,MAAO,CAACC,UAAU,SAAUC,MAAM,SACrD,4BACI,mDAIhBnB,EAAQc,GAnBO,2CAAH,qDAsBhB,OAAQ,kBAACM,EAAA,EAAD,CAAOH,MAAO,CAACI,MAAO,QAASC,SAAS,SAC5C,+BACI,4BACI,iCACA,oCACA,oCACA,sCACA,wCACA,0CAGR,+BACKvB,KCnCEgH,MAZf,WACI,OACI,kBAACvF,EAAA,EAAD,CAAMC,MAAI,EAACR,MAAO,CAACS,QAAQ,SACvB,gDACA,4EAGA,kBAAC,EAAD,QCoBGsF,MAvBf,WASE,OACE,kBAACC,EAAA,EAAD,CAAWhG,MAAO,CAACiG,UAAU,OAAQC,cAAc,OAAQnB,UAAU,QAASoB,WAAW,OAAQC,aAAa,UAC5G,kBAACjC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAM,GAAIxE,MAAO,CAACS,QAAQ,SAClC,kBAAC,EAAD,OAEF,kBAAC2D,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAM,GAAIxE,MAAO,CAACS,QAAQ,SAClC,kBAAC,EAAD,U,2BC8FK4F,OA9Gf,SAAgBpJ,GACZ,IAAMC,EAAMC,qBAAWV,GACjBkC,EAASxB,qBAAWlE,GAFP,EAG2B0F,EAAOxF,QAA7CY,EAHW,EAGXA,QAASD,EAHE,EAGFA,QAAS8E,EAHP,EAGOA,QAAS0H,EAHhB,EAGgBA,OAE7BC,EAAgBzL,IAChB0L,EAAiBxL,IACjB2F,EAAajG,IACb0C,EAAcxC,IAEd6L,EAAe,uCAAG,8CAAAxI,EAAA,sDACdyI,EAAY,GACZC,EAAqB,GAErBC,EAAkB,CAACjG,EAAYvD,GAJjB,IAAAa,EAAA,sCAAAA,EAAA,6DAKV4I,EALU,KAMVC,EAASD,EAAGE,QAAQC,OAAO,KAAMjN,GANvB,SAOK8M,EAAGI,YAAYH,GAPpB,cAOVI,EAPU,gBAQV/H,QAAQC,IAAI8H,EAAO3H,IAAP,uCAAW,WAAOmD,GAAP,eAAAzE,EAAA,sEACJ4I,EAAG3H,QAAQwD,EAAEyE,KAAK5J,IADd,OACnB6J,EADmB,OAEzB3M,QAAQqI,IAAI,eAAgBsE,EAAOpL,WAAWE,YAC9CzB,QAAQqI,IAAI,SAAS,IAAI3G,MAAOC,UAAU,KAC1C3B,QAAQqI,IAAI,KAAMJ,EAAEyE,KAAK5J,GAAGrB,WAAY,WAAYkL,EAAOpL,WAAWE,aAAc,IAAIC,MAAOC,UAAU,KACtGgL,EAAOzH,QAAU5F,IAAY4M,EAAmBtL,SAASqH,EAAEyE,KAAK5J,GAAGrB,aAA+B,GAAhBkL,EAAOxH,OAAcwH,EAAOpL,WAAWE,aAAc,IAAIC,MAAOC,UAAU,MAC3JsK,EAAU3G,KAAV,aAAgBL,MAAOgD,EAAEyE,KAAK5J,GAAGrB,WAAYuB,SAAUoJ,EAAGjN,SAAawN,IACvET,EAAmB5G,KAAK2C,EAAEyE,KAAK5J,GAAGrB,aAPb,2CAAX,wDARF,gDAKJ0K,EALI,8GAqBdS,EAAqB,CAACd,EAAeC,GArBvB,IAAAvI,EAAA,sCAAAA,EAAA,6DAsBVqJ,EAtBU,KAuBVC,EAAUD,EAAIP,QAAQS,YAAYzN,EAAS,MAvBjC,SAwBMuN,EAAIL,YAAYM,GAxBtB,cAwBVE,EAxBU,gBAyBVtI,QAAQC,IAAIqI,EAAQlI,IAAR,uCAAY,WAAOmD,GAAP,mBAAAzE,EAAA,sEACTqJ,EAAIvG,kBADK,cACpB8F,EADoB,gBAELS,EAAItE,0BAA0BN,EAAEyE,KAAKrG,SAFhC,cAEpBsG,EAFoB,gBAGHE,EAAIpE,sBAAsBR,EAAEyE,KAAKrG,SAH9B,OAGpBgB,EAHoB,OAIvBsF,EAAOzH,QAAU5F,IAAY4M,EAAmBtL,SAASyG,EAAS5F,aAA+B,GAAhBkL,EAAOxH,OAAcwH,EAAOpL,WAAWE,aAAc,IAAIC,MAAOC,UAAU,MAC1JsK,EAAU3G,KAAV,aAAgBL,MAAOoC,EAAS5F,WAAYuB,SAAUoJ,GAAQO,IAC9DT,EAAmB5G,KAAK+B,EAAS5F,aANX,4CAAZ,wDAzBF,gDAsBHmL,EAtBG,kHAmCpB1I,EAAOO,QAAQG,MAAMqI,SAAShB,GAnCV,4CAAH,qDAsCfiB,EAAkB,uCAAG,sCAAA1J,EAAA,sDACjB2J,EAAe,GAEjBlI,EAAQ,EAHW,MAEF,CAAC6G,EAAeC,GAFd,gDAIbqB,EAJa,cAKOA,EAAGC,UAAU/N,GAAS0I,MAAK,SAAAC,GAAC,OAAIA,EAAExG,cALzC,OAKb6L,EALa,mBAMbrI,EAAQqI,GANK,uCAQXH,EARW,KAQQlI,EARR,KAQyBmI,EAAGjO,QAR5B,UAQoDiO,EAAGG,oBAAoBjO,EAAS2F,GARpF,0BAQQA,MARR,KAQejC,SARf,KAQqCqD,QARrC,WAQEf,KARF,gBASXL,IATW,8GAcnBA,EAAQ,EAdW,mCAgBvBjF,QAAQqI,IAAI8E,GACZjJ,EAAOO,QAAQ2G,IAAI6B,SAASE,GAjBL,2DAAH,qDAoBxB5I,qBAAU,WACDjF,GAAaD,GAAWoD,EAAIH,SAC7BjD,EAAQmO,WAAWlO,GAAS0I,MAAK,SAACyF,GAC9BvJ,EAAOvF,SAAS+O,WAAWT,SAASQ,MAGxCzB,IAEAkB,IACAzK,EAAIJ,gBAET,CAAC/C,EAASD,EAAS8E,EAAS1B,EAAIH,SAEnC,IAAMqL,EAAS,WACX,OACI,oCACI,kBAAChE,EAAA,EAAD,CAAKiE,GAAG,IAAI9D,GAAI,CAACC,KAAK,EAAGkB,OAAO,GAAI1F,MAAO,CAACsI,QAAQ,OAAQC,eAAe,WACvE,wBAAIvI,MAAO,CAACI,MAAM,UAAWoI,OAAO,KAAMC,WAAW,OAAQC,WAAW,SAAxE,QAAsF,0BAAM1I,MAAO,CAACI,MAAM,UAApB,gBAE1F,kBAACgE,EAAA,EAAD,CAAKiE,GAAG,KAAK9D,GAAI,CAACC,KAAK,EAAGkB,OAAO,GAAI1F,MAAO,CAACsI,QAAQ,OAAQC,eAAe,aAC1EjC,EACE,6BACI,kBAACqC,EAAA,EAAD,CAAOvI,MAAM,UAAUJ,MAAO,CAACwF,OAAO,UAAWtK,EAAmBO,EAASkD,EAAOvF,SAASwP,aAAatJ,OAAO,GAAjH,WACA,kBAACqJ,EAAA,EAAD,CAAOvI,MAAM,YAAYJ,MAAO,CAACwF,OAAO,UAAWtK,EAAmBO,EAASkD,EAAOvF,SAAS+O,WAAW7I,OAAO,GAAjH,SACA,0BAAMU,MAAO,CAACI,MAAM,UAAWC,SAAS,STtFxC,SAAClF,GACrB,IAAM0N,EAAM1N,EAAI2E,OAChB,OAAO3E,EAAI2N,UAAU,EAAG,GAAK,MAAQ3N,EAAI2N,UAAUD,EAAI,EAAGA,EAAI,GSoFQE,CAAgBhP,IAClE,kBAACuL,EAAA,EAAD,CAAQlF,MAAM,OAAO9B,QAASK,EAAOlF,YAArC,eAGJ,kBAAC6L,EAAA,EAAD,CAAQlF,MAAM,OAAO9B,QAASK,EAAOnF,SAArC,cAOhB,OACQ,kBAACwP,GAAA,EAAD,CAAQhJ,MAAO,CAACsI,QAAQ,OAAQW,gBAAgB,UAAWC,aAAc,sBACrE,kBAACd,EAAD,QCzEDe,OApCf,SAAelM,GACX,IAAMzD,EAAU2D,qBAAWlE,GAAeO,QAC1C,OACA,kBAACwM,EAAA,EAAD,KACI,kBAAC7B,EAAA,EAAD,CAAKnE,MAAO,CAAC+E,UAAU,OAAQkB,UAAU,OAAQuC,OAAO,KAAMvI,UAAU,WACpE,kBAACmE,EAAA,EAAD,CAAKiE,GAAG,KAAK9D,GAAI,CAAEC,KAAM,EAAGkB,OAAQ,IAC5B,wBAAI1F,MAAO,CACPI,MAAM,UACNqI,WAAW,OACXC,WAAW,OACXU,WAAW,OACX/I,SAAS,OACTgJ,cAAc,cANlB,4BAQA,yBAAKrJ,MAAO,CAACI,MAAO,UAAWqI,WAAW,QAASC,WAAW,MAAOU,WAAW,UAEhF,yBAAKpJ,MAAO,CAAC+E,UAAU,OAAQuD,QAAQ,OAAQC,eAAe,WAC9D,kBAACjD,EAAA,EAAD,CAAQtF,MAAO,CACXI,MAAM,UACNsI,WAAW,OACXD,WAAW,OACXa,cAAc,OACdC,WAAW,cACXC,kBAAkB,0DAClBC,iBAAiB,KACjBC,YAAY,QACZC,UAAU,aACVC,aAAa,MACbC,iBAAiB,QACjBvL,QAAS9E,GAZb,uBCJLsQ,OAff,WACI,OACI,yBAAK9J,MAAO,CAACyF,OAAO,OAAQsE,SAAS,WAAY3J,MAAM,UAAWH,UAAU,WACxE,kBAACkE,EAAA,EAAD,CAAKnE,MAAO,CAACsI,QAAQ,OAAQC,eAAe,SAAUyB,cAAc,MAAOC,cAAc,WACrF,kBAAC7F,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAK,EAAGkB,OAAO,IACrB,uBAAGrH,KAAK,gCAAR,UAEJ,kBAAC+F,EAAA,EAAD,CAAKG,GAAI,CAACC,KAAK,EAAGkB,OAAO,IACrB,uBAAGrH,KAAK,iCAAiCI,OAAO,UAAhD,mBCTPyL,GAAW,I,MAAIC,GAAkB,CAAEC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,M,4CCyBjEC,OAtBf,WACI,IAAMnN,EAAMC,qBAAWV,GAEvB,OACI,oCACI,yBAAK8I,UAAU,iBACX,kBAAC+E,GAAA,EAAD,CAAOtG,OAAyB,IAAjB9G,EAAIP,WACf,kBAAC4N,GAAA,EAAD,CAAaC,KAAM,kBAACC,GAAA,EAAD,CAASjG,KAAK,QAC3BtH,EAAIR,gBAEV,kBAACgO,GAAA,EAAD,KACMxN,EAAIP,UACN,6BACA,6BACA,kBAAC2I,EAAA,EAAD,CAAQd,KAAK,KAAKe,UAAU,mBAAmBjH,QAAS,kBAAMpB,EAAIN,gBAAgB,GAAG,MAArF,cCLxB,SAAS+N,GAAWlN,EAAUmN,GAC5B,OAAO,IAAI5Q,SAAO6Q,UAAUC,aAAarN,GAG3C,SAASsN,KAAO,IAAD,EACuBlM,mBAAS7E,SAAOgR,UAAUC,KAAK,MADtD,mBACN9C,EADM,KACM+C,EADN,OAE2BrM,mBAAS7E,SAAOgR,UAAUC,KAAK,MAF1D,mBAENrC,EAFM,KAEQuC,EAFR,OAG+BtM,mBAAS7E,SAAOgR,UAAUC,KAAK,MAH9D,mBAGNG,EAHM,KAGUC,EAHV,OAIqBxM,mBAAS,IAJ9B,mBAIN6H,EAJM,KAIK4E,EAJL,OAKazM,mBAAS,IALtB,mBAKN0M,EALM,KAKCC,EALD,OAMqB3M,mBAAS,IAN9B,mBAMNlC,EANM,KAMK8O,EANL,OAO+B5M,mBAAS,IAPxC,mBAONnC,EAPM,KAOUgP,EAPV,OAQe7M,oBAAS,GARxB,mBAQN9B,EARM,KAQE4O,EARF,KAUPvS,EAAW,CACf+O,WAAY,CAAC7I,MAAO6I,EAAYT,SAAUwD,GAC1CtC,aAAc,CAACtJ,MAAOsJ,EAAclB,SAAUyD,IAG1C9R,EAAa,CACjB+R,eAAgB,CAAC9L,MAAO8L,EAAgB1D,SAAU2D,IAG9CnM,EAAU,CACdG,MAAO,CAAEC,MAAOoH,EAAWgB,SAAU4D,GACrCzF,IAAK,CAAEvG,MAAOiM,EAAO7D,SAAU8D,IAG3BrS,EAAUkB,cACRuQ,EAA4CzR,EAA5CyR,UAAWtE,EAAiCnN,EAAjCmN,OAAQsF,EAAyBzS,EAAzByS,SAAUC,EAAe1S,EAAf0S,WAzBxB,EA4ByChN,qBA5BzC,mBA4BNiN,EA5BM,KA4BeC,EA5Bf,KA6Bb/M,qBAAU,WACN8M,GAAuBA,IAAwBlB,GAC/CmB,OAAuBxR,KAExB,CAACuR,EAAqBlB,ICnBlB,WAAgD,IAAnBoB,EAAkB,0DAChB3R,cAA5BiM,EAD4C,EAC5CA,OAAQ9L,EADoC,EACpCA,MAAOoR,EAD6B,EAC7BA,SAEvB5M,qBAAU,WAAO,IACPiN,EAAaC,OAAbD,SACR,GAAIA,GAAYA,EAASE,KAAO7F,IAAW9L,IAAUwR,EAAU,CAC7D,IAAMI,EAAgB,WACpB3R,QAAQqI,IAAI,4BACZ8I,EAAS1B,KAELmC,EAAqB,SAACzN,GAC1BnE,QAAQqI,IAAI,6CAA8ClE,GAC1DgN,EAAS1B,KAELoC,EAAwB,SAACC,GAC7B9R,QAAQqI,IAAI,gDAAiDyJ,GACzDA,EAASzM,OAAS,GACpB8L,EAAS1B,KAGPsC,EAAuB,SAACC,GAC5BhS,QAAQqI,IAAI,+CAAgD2J,GAC5Db,EAAS1B,KAQX,OALA+B,EAASE,GAAG,UAAWC,GACvBH,EAASE,GAAG,eAAgBE,GAC5BJ,EAASE,GAAG,kBAAmBG,GAC/BL,EAASE,GAAG,iBAAkBK,GAEvB,WACDP,EAASS,iBACXT,EAASS,eAAe,UAAWN,GACnCH,EAASS,eAAe,eAAgBL,GACxCJ,EAASS,eAAe,kBAAmBJ,GAC3CL,EAASS,eAAe,iBAAkBF,QAI/C,CAAClG,EAAQ9L,EAAOwR,EAAUJ,IDd/Be,ECpDK,WAA4B,IAAD,EACDtS,cAArBuR,EADsB,EACtBA,SAAUtF,EADY,EACZA,OADY,EAGJzH,oBAAS,GAHL,mBAGvB+N,EAHuB,KAGhBC,EAHgB,KAwB9B,OAnBA7N,qBAAU,WACRkL,GAAS4C,eAAerK,MAAK,SAACqK,GACxBA,EACFlB,EAAS1B,QAAU3P,GAAW,GAAMwS,OAAM,WACxCF,GAAS,MAGXA,GAAS,QAGZ,CAACjB,IAGJ5M,qBAAU,YACH4N,GAAStG,GACZuG,GAAS,KAEV,CAACD,EAAOtG,IAEJsG,EDyBUI,MAGkBlB,GAWrC,IAAMhP,GAAa,kBAAM6O,GAAW5O,IAM9BF,GAAa,uCAAG,WAAOD,EAAiBuB,EAAW8M,GAAnC,iBAAAhN,EAAA,6DACdgP,EAAS,8BAAOhC,EAAP,0BACTiC,EACJ,oCACE,uBAAGzO,OAAO,SAASJ,KAAI,0CAAqCF,EAAUgP,OAAtE,qBAKJvQ,EAAgBqQ,EAAOC,GATH,SAUd/O,EAAUiP,OAVI,OAWpBxQ,EAAgB,GAAI,IACpBE,KAZoB,2CAAH,0DAenB,OACE,kBAACL,EAAW4Q,SAAZ,CAAqB/N,MAAO,CAAC5C,iBAAgBC,YAAWC,gBApBlC,SAACqQ,EAAOC,GAC9BxB,EAAkBuB,GAClBxB,EAAayB,IAkB4DrQ,iBAAeE,SAAQD,gBAC9F,kBAAC7D,EAAcoU,SAAf,CAAwB/N,MAAO,CAACnG,UAASK,QAhC7C,WACIuS,EAAuB7B,IACvB0B,EAAS1B,KA8ByCzQ,WA3BtD,WACAoS,EAAW3B,KA0BuD9Q,WAAUC,aAAY6F,YAClF,yBAAKc,MAAO,CAAEuJ,WAAW,wEACrB,yBAAKvJ,MAAO,CAACsN,gBAAgB,4DAA6D7H,OAAO,UAC7F,kBAAC,GAAD,MACEa,EACA,kBAAC,EAAD,MAEA,kBAAC,GAAD,MAGF,kBAAC,GAAD,MACA,kBAAC,GAAD,UASD,yBACb,kBAAC,IAAD,CAAmBqE,WAAYA,IAC7B,kBAACI,GAAD,QEpGgBwC,QACW,cAA7BrB,OAAOsB,SAASC,UAEe,UAA7BvB,OAAOsB,SAASC,UAEhBvB,OAAOsB,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACM,4BAAQC,IAAI,sCAAsCC,YAAU,WAAWC,OAAK,IAChF,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5L,MAAK,SAAA6L,GACJA,EAAaC,gBAEdxB,OAAM,SAAAvS,GACLC,QAAQD,MAAMA,EAAM0S,c","file":"static/js/main.1ce0aae1.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst WalletContext = createContext(\n    {\n        context: {},\n        balances: {},\n        allowances: {},\n        poolConditions: {},\n        profits: {},\n        connect: () => {},\n        disconnect: () => {}\n    });\n\nexport {\n    WalletContext\n};\n\n","import { useWeb3React } from '@web3-react/core'\nimport { useMemo } from 'react'\nimport { ethers } from 'ethers'\n\nimport { abi as HEGIC_WBTC_OPTIONS_NFT_ABI } from './json/HegicERC20OptionsNFT.json'\nimport { abi as HEGIC_ETH_OPTIONS_NFT_ABI } from './json/HegicETHOptionsNFT.json'\nimport { abi as HEGIC_OPTIONS_WBTC_ABI } from './json/FakeHegicWBTCOptions.json'\nimport { abi as HEGIC_OPTIONS_ETH_ABI } from './json/FakeHegicETHOptions.json'\nimport { abi as HEGIC_ABI } from './json/FakeHEGIC.json'\nimport { abi as WBTC_ABI } from './json/FakeWBTC.json'\nconst AGGREGATORV3INTERFACE_ABI = [{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\n\n//mainnet contracts\nconst ETHUSD_ADDRESS = \"0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\";\nconst WBTCUSD_ADDRESS = \"0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c\";\nconst HEGIC_ETH_OPTIONS_NFT_ADDRESS = \"0x0e4681CC435Ac48F69ad7Bb535d5cee5FDB038b8\";\nconst HEGIC_WBTC_OPTIONS_NFT_ADDRESS = \"0x6da28Db16ecB33C2468FF934CD3A3447c588309A\";\nconst HEGIC_OPTIONS_WBTC_ADDRESS = \"0x3961245DB602eD7c03eECcda33eA3846bD8723BD\";\nconst HEGIC_OPTIONS_ETH_ADDRESS = \"0xEfC0eEAdC1132A12c9487d800112693bf49EcfA2\";\nconst HEGIC_ADDRESS = '0x584bC13c7D411c00c01A62e8019472dE68768430';\nconst WBTC_ADDRESS = '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599';\n\n//rinkeby contracts\n// const ETHUSD_ADDRESS = \"0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\";\n// const WBTCUSD_ADDRESS = \"0xECe365B379E1dD183B20fc5f022230C044d51404\";\n// const HEGIC_ETH_OPTIONS_NFT_ADDRESS = \"0x230525E7ccF8e79127764b12888Da542D3309AD1\";\n// const HEGIC_WBTC_OPTIONS_NFT_ADDRESS = \"0x3f910ca1093D5f31AA778fA355FA05280D2D0419\";\n// const HEGIC_OPTIONS_WBTC_ADDRESS = \"0x3A97B5d06593AC649E25850Ab47121d96832041F\";\n// const HEGIC_OPTIONS_ETH_ADDRESS = \"0xC5c5aF6Fc7afd67C1C6bE5b306CC9b59cbc77583\";\n// const HEGIC_ADDRESS = '0x584bC13c7D411c00c01A62e8019472dE68768430'\n// const WBTC_ADDRESS = '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599'\n\n// returns null on errors\nfunction getContract(address, ABI, library, account) {\n    return new ethers.Contract(address, ABI, library.getSigner(account))\n}\n\nfunction useContract(address, ABI, withSignerIfPossible = true) {\n  const { library, account } = useWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n} \n\nexport function useHegicETHOptionsContract() {\n  return useContract(HEGIC_OPTIONS_ETH_ADDRESS, HEGIC_OPTIONS_ETH_ABI);\n}\n\nexport function useHegicWBTCOptionsContract() {\n  return useContract(HEGIC_OPTIONS_WBTC_ADDRESS, HEGIC_OPTIONS_WBTC_ABI);\n}\n\nexport function useHegicETHOptionsNFTContract() {\n  return useContract(HEGIC_ETH_OPTIONS_NFT_ADDRESS, HEGIC_ETH_OPTIONS_NFT_ABI);\n}\n\nexport function useHegicWBTCOptionsNFTContract() {\n  return useContract(HEGIC_WBTC_OPTIONS_NFT_ADDRESS, HEGIC_WBTC_OPTIONS_NFT_ABI);\n}\n\nexport function useHegicContract() {\n  return useContract(HEGIC_ADDRESS, HEGIC_ABI);\n}\n\nexport function useWBTCContract() {\n  return useContract(WBTC_ADDRESS, WBTC_ABI);\n}\n\nexport function useWBTCUSDContract() {\n  return useContract(WBTCUSD_ADDRESS, AGGREGATORV3INTERFACE_ABI);\n}\n\nexport function useETHUSDContract() {\n  return useContract(ETHUSD_ADDRESS, AGGREGATORV3INTERFACE_ABI);\n}","import { ethers } from 'ethers'\n\nconst truncateEtherValue = (str, maxDecimalDigits) => {\n    if (str.includes(\".\")) {\n    const parts = str.split(\".\");\n    return parts[0] + \".\" + parts[1].slice(0, maxDecimalDigits);\n    }\n    return str;\n};\n\nconst formatBN = (bn) => {\n    return ethers.utils.commify(ethers.utils.formatEther(bn.toString()));\n}\n\nconst truncateAddress = (str) => {\n    const len = str.length;\n    return str.substring(0, 8) + '...' + str.substring(len-7, len-1);\n}\n\nconst timeToMaturity = (expiration) => {\n    if(!expiration) return 0;\n    let seconds = expiration.toNumber() - new Date().getTime()/1000;\n    const days = Math.floor(seconds / (3600*24));\n    seconds  -= days*3600*24;\n    const hrs   = Math.floor(seconds / 3600);\n    seconds  -= hrs*3600;\n    return days+'d '+hrs+'h';\n}\n\nconst Asset = {Invalid: 0, WBTC: 1, ETH: 2}\nconst OptionType = {Invalid: 0, Put: 1, Call: 2}\n\nexport {\n    truncateEtherValue,\n    formatBN, \n    truncateAddress,\n    Asset,\n    OptionType,\n    timeToMaturity\n}","import { createContext } from 'react';\n\nconst AppContext = createContext({\n    statusMsgTitle: \"\",\n    statusMsg: \"\",\n    updateStatusMsg: () => {},\n    updateAndWait: () => {},\n    updateData: () => {},\n    reload: false\n})\n\nexport {\n    AppContext\n};","import React, { useContext } from 'react';\nimport { ethers } from 'ethers'\nimport { useHegicWBTCOptionsContract, useHegicWBTCOptionsNFTContract, useHegicETHOptionsNFTContract } from '../../contracts/useContract';\nimport { timeToMaturity } from '../../utils'\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { WalletContext } from '../../context/Wallet';\nimport { AppContext } from '../../context/App';\n\nfunction OptionItem(props) {\n    const app = useContext(AppContext)\n    const wallet = useContext(WalletContext);\n    const { account } = wallet.context;\n    const wbtcOptions = useHegicWBTCOptionsContract();\n    const wbtcNFTOptions = useHegicWBTCOptionsNFTContract();\n    const ethNFTOptions = useHegicETHOptionsNFTContract();\n\n    const id = props.id;\n    const decimals = props.provider == wbtcOptions.address ? 8 : 18;\n    const asset = props.provider == wbtcOptions.address ? \"WBTC\" : \"ETH\";\n    const optionType = props.optionType == 1 ? \"PUT\" : \"CALL\";\n    const nftProvider = props.provider == wbtcOptions.address ? wbtcNFTOptions : ethNFTOptions;\n\n    const amount = ethers.utils.formatUnits(props.amount, decimals);\n    const strike = ethers.utils.formatUnits(props.strike, 8);\n\n    const tokenize = async (id) => {\n        const txRequest = await nftProvider.tokenizeOption(id, account);\n        await app.updateAndWait(app.updateStatusMsg, txRequest, \"Tokenize\");\n        app.updateData();\n    }\n\n    return (\n    <tr>\n        <th scope=\"row\">{asset+'['+id+']'}</th>\n        <td>{optionType}</td>\n        <td>{amount}</td>\n        <td>${strike}</td>\n        <td>{timeToMaturity(props.expiration)}</td> \n        <td><a href=\"#\" id=\"tokenizeLink\" onClick={async () => await tokenize(id)}>TOKENIZE</a>\n        <UncontrolledTooltip placement=\"right\" target=\"tokenizeLink\">\n            You will need to transfer option's ownership to this contract AFTER tokenizing\n      </UncontrolledTooltip></td>\n    </tr>\n    )\n}\n\nexport default OptionItem;","import React, { useContext, useEffect, useState } from 'react';\nimport { Table } from 'reactstrap'\nimport { WalletContext } from '../../context/Wallet';\nimport OptionItem from './optionItem';\n\nfunction OptionsList() {\n\n    const wallet = useContext(WalletContext);\n    const { account, library, chainId } = wallet.context;\n\n    const [rows, setRows] = useState([\n    ]);\n\n    useEffect(() => {\n        updateRows();\n    }, [wallet.options])\n\n    const updateRows = async () => {\n        const optionItems = await Promise.all(wallet.options.hegic.value.map(async (o) => {\n            return (\n            <OptionItem\n             key={o.index+'-'+o.provider}\n             id={o.index}\n             holder={o.holder}\n             amount={o.amount}\n             provider={o.provider}\n             strike={o.strike}\n             expiration={o.expiration} \n             optionType={o.optionType}\n             state={o.state} />\n            )\n        }));\n\n        if(optionItems.length == 0){\n            optionItems.push(\n                <tr key=\"noOptionsHegic\" style={{textAlign:\"center\", width:'100%'}}>\n                    <th>\n                        <h6>No options found</h6>\n                    </th>\n                </tr>\n            )\n}\n        setRows(optionItems)\n    }\n\n    return (<Table style={{color: \"white\", fontSize:'12px'}}>\n        <thead >\n            <tr>\n                <th>#</th>\n                <th>Type</th>\n                <th>Size</th>\n                <th>Strike</th>\n                <th>Maturity</th>\n                <th>Tokenize</th>\n            </tr>\n        </thead>\n        <tbody>\n            {rows}\n        </tbody>\n    </Table>)\n}\n\nexport default OptionsList;","import React from 'react';\nimport {Card} from 'reactstrap'\nimport OptionsList from './optionsList';\n\nfunction YourOptions() {\n    return (\n        <Card body style={{padding:'15px'}}>\n            <h3>Your Hegic options</h3>\n            <span>Here you will find your regular Hegic options. </span>\n            <OptionsList />\n        </Card>\n    )\n}\n\nexport default YourOptions;","import React, { useState, useEffect, useContext } from 'react';\nimport { ethers } from 'ethers'\nimport { useHegicETHOptionsNFTContract, useHegicWBTCOptionsNFTContract, useHegicWBTCOptionsContract, useHegicETHOptionsContract, useWBTCUSDContract, useETHUSDContract } from '../../contracts/useContract';\nimport { timeToMaturity } from '../../utils'\nimport { UncontrolledCollapse, UncontrolledTooltip, Row, Col, Button, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, Input, InputGroupAddon, InputGroupText } from 'reactstrap'\nimport { WalletContext } from '../../context/Wallet';\nimport { AppContext } from '../../context/App';\n\nfunction NFTItem(props) {\n    const app = useContext(AppContext);\n    const wallet = useContext(WalletContext);\n    const {account} = wallet.context\n    const wbtcNFTOptions = useHegicWBTCOptionsNFTContract();\n    const ethNFTOptions = useHegicETHOptionsNFTContract();\n    const wbtcOptions = useHegicWBTCOptionsContract();\n    const ethOptions = useHegicETHOptionsContract();\n    const ethusdPriceProvider = useETHUSDContract();\n    const wbtcusdPriceProvider = useWBTCUSDContract();\n\n    const id = props.id;\n    const tokenId = props.tokenId;\n    \n    const decimals = props.provider == wbtcNFTOptions.address ? 8 : 18;\n    const asset = props.provider == wbtcNFTOptions.address ? \"WBTC\" : \"ETH\";\n    const nftProvider = props.provider == wbtcNFTOptions.address ? wbtcNFTOptions : ethNFTOptions;\n    const optionsProvider = props.provider == wbtcNFTOptions.address ? wbtcOptions : ethOptions;\n    const priceProvider = props.provider == wbtcNFTOptions.address ?  wbtcusdPriceProvider : ethusdPriceProvider;\n\n    const [underlyingOptionParams, setUnderlyingOptionParams] = useState();\n    const [amount, setAmount] = useState();\n    const [strike, setStrike] = useState();\n    const [expiration, setExpiration] = useState();\n    const [isValid, setIsValid] = useState(false);\n    const [destinationAddress, setDestinationAddress] = useState('');\n    const [currentProfit, setCurrentProfit] = useState(0);\n    const [currentPrice, setCurrentPrice] = useState(0);\n    const [optionId, setOptionId] = useState(0);\n    const [optionType, setOptionType] = useState(0);\n    const [transferButtonDisabled, setTransferButtonDisabled] = useState(true);\n    const [exerciseButtonDisabled, setExerciseButtonDisabled] = useState(true);\n\n    useEffect(() => {\n        retrieveOptionParams(props.tokenId);\n    }, [])\n\n    useEffect(() => {\n        getCurrentProfit();\n    }, [underlyingOptionParams])\n\n    useEffect(() => {\n        setTransferButtonDisabled(!ethers.utils.isAddress(destinationAddress))\n    }, [destinationAddress]);\n\n    const getCurrentProfit = async () => {\n        if(underlyingOptionParams){\n            const strike = underlyingOptionParams.strike.toNumber();\n            const amount = ethers.utils.formatUnits(underlyingOptionParams.amount, decimals)\n            const cp = await priceProvider.latestRoundData().then(x => x.answer.toNumber());\n            const optionType = underlyingOptionParams.optionType == 1 ? \"PUT\" : \"CALL\";\n            setCurrentPrice(cp);\n            setOptionType(optionType);\n            let profit = 0;\n            console.log(\"optionType\", optionType)\n            if(optionType == \"CALL\") {\n                profit = ((cp-strike)/cp)*amount;\n            } else if (optionType == \"PUT\") {\n                profit = (strike - cp)/cp*amount;\n            }\n\n            if(profit < 0) profit = 0;\n    \n            if(profit > underlyingOptionParams.lockedAmount)\n                profit = underlyingOptionParams.lockedAmount;\n\n            setCurrentProfit(profit);\n            setExerciseButtonDisabled((profit == 0) || (underlyingOptionParams.state != 1))\n        }\n    }\n\n    const retrieveOptionParams = async () => {\n        const uop = await nftProvider.getUnderlyingOptionParams(tokenId);\n        setUnderlyingOptionParams(uop);\n        setAmount(ethers.utils.formatUnits(uop.amount, decimals));\n        setOptionId(await nftProvider.getUnderlyingOptionId(tokenId).then(x=>x.toNumber()));\n        setStrike(ethers.utils.formatUnits(uop.strike, 8));\n        setExpiration(uop.expiration);\n        setIsValid(uop.holder == nftProvider.address);\n    }\n\n    const transferOwnership = async () => {\n        const optionId = await nftProvider.getUnderlyingOptionId(tokenId);\n        const txRequest = await optionsProvider.transfer(optionId, nftProvider.address);\n        await app.updateAndWait(app.updateStatusMsg, txRequest, \"Transfer Ownership\");\n\n    }\n\n    const transferToken = async () => {\n        const txRequest = await nftProvider.transferFrom(account, destinationAddress, tokenId);\n        await app.updateAndWait(app.updateStatusMsg, txRequest, \"Transfer Token\");\n\n    }\n\n    const detokenize = async (burn) => {\n        const txRequest = await nftProvider.detokenizeOption(tokenId, burn);\n        await app.updateAndWait(app.updateStatusMsg, txRequest, \"Detokenize Option\");\n\n    }\n\n    const exercise = async () => {\n        const txRequest = await nftProvider.exerciseOption(tokenId);\n        await app.updateAndWait(app.updateStatusMsg, txRequest, \"Exercise Option\");\n    }\n\n    const [modal, setModal] = useState(false);\n\n    const toggle = () => {\n        setModal(!modal);\n    }\n\n    return (\n    <tr>\n        <th scope=\"row\">{asset+'['+optionId+']'}</th>\n        <td>{optionType}</td>\n        <td>{amount}</td>\n        <td>${strike}</td>\n        <td>{expiration ? timeToMaturity(expiration):(null)}</td> \n        { \n            isValid ? \n                (<td><a href=\"#\" onClick={toggle}>MANAGE</a></td>) \n            :\n                (<td><a href=\"#\" onClick={async () => await transferOwnership(tokenId)}>TRANSFER OWNERSHIP</a></td>)\n        }\n\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}><h4>Manage your NFT Option</h4></ModalHeader>\n            <ModalBody>\n                <Row>\n                    <Col>\n                        <Row style={{paddingLeft:'15px'}} >\n                            <h5>Your Option</h5>\n                        </Row>\n                        <Row>\n                        <InputGroup style={{textAlign:'center'}}>\n                            <Col md={{size:3}} style={{padding:'2px', paddingLeft:'15px'}}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>ID</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={asset+'['+optionId+']'} disabled />\n                                    \n                            </Col>\n                            <Col md={{size:3}} style={{padding:'2px'}}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>SIZE</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={amount} disabled />\n                            </Col>\n                            <Col md={{size:3}} style={{padding:'2px'}}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>STRIKE (USD)</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={strike} disabled />\n                            </Col>\n                            <Col md={{size:3}} style={{padding:'2px', paddingRight:'15px'}}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>OPTIONTYPE</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={optionType} disabled />\n                            </Col>\n                            </InputGroup>\n                        </Row>\n                    </Col>\n                </Row>\n\n                <Row style={{marginTop:'20px'}}>\n                    <Col>\n                        <Row style={{paddingLeft:'15px', cursor:'pointer'}} id=\"transferToggler\" >\n                            <h5>Transfer your option</h5>\n                        </Row>\n                        <UncontrolledCollapse toggler=\"#transferToggler\">\n                            <InputGroup >\n                                <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>RECEIVER</InputGroupText>\n                                </InputGroupAddon>  \n                                    <Input placeholder=\"0x0000000000000000000000000000000000000000\" value={destinationAddress} onChange={(event) => setDestinationAddress(event.target.value)} />\n                                <InputGroupAddon addonType=\"append\">\n                                    <Button className=\"input-button\"style={{margin:\"0\"}} disabled={transferButtonDisabled} onClick={async () => transferToken()}>TRANSFER</Button>\n                                </InputGroupAddon>  \n                            </InputGroup>\n                        </UncontrolledCollapse>\n                    </Col>\n                </Row>\n                <Row style={{marginTop:'20px'}}>\n                    <Col>\n                        <Row style={{paddingLeft:'15px', cursor:'pointer'}} id=\"exerciseToggler\" ><h5>Exercise your option</h5></Row>\n                        <UncontrolledCollapse toggler='#exerciseToggler'>\n                            <Row>\n                                <Col md={{size:3}} style={{padding:'2px', paddingLeft:'15px'}}>\n                                <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>{asset} PRICE (USD)</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={currentPrice/1e8} disabled />\n                                </Col>\n                                <Col md={{size:3}} style={{padding:'2px'}}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>EXPIRES IN</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={timeToMaturity(expiration)} disabled />\n                                </Col>\n                                <Col md={{size:3}} style={{padding:'2px'}}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>P&L ({asset})</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={currentProfit} disabled />\n                                </Col>\n                                <Col md={{size:3}} style={{padding:'2px', paddingRight:'15px'}}>\n                                    <Button className=\"input-button\" id=\"exerciseButton\" style={{height:'100%', width:'100%'}} disabled = {exerciseButtonDisabled} onClick={async () => await exercise()}>EXERCISE</Button>\n                                </Col>\n                            </Row>\n                        </UncontrolledCollapse>\n                    </Col>\n                </Row>\n                <Row style={{marginTop:'20px'}}>\n                    <Col>\n                    <Row style={{paddingLeft:'15px', cursor:'pointer'}} id=\"detokenizeToggler\" ><h5>Detokenize your option</h5></Row>\n                    <UncontrolledCollapse toggler=\"#detokenizeToggler\">\n                        <span style={{fontSize:'12px'}}>\n                            This will transfer option's ownership back to you and burn your NFT token.\n                            You will not be able to use this dashboard to manage your options.\n                        </span><br/>\n                        <Row>\n                            <Col md={{size:2}}>\n                                <Button className=\"main-button\" onClick={async () => await detokenize(false)}>DETOKENIZE</Button>\n                            </Col>\n                            <Col md={{size:8, offset: 2}}>\n                                <Button className=\"main-button warning\"  onClick={async () => await detokenize(true)}>DETOKENIZE AND BURN TOKEN</Button>\n                            </Col>\n                        </Row>\n                    </UncontrolledCollapse>\n                        \n                    </Col>\n                </Row>\n            </ModalBody>\n            <ModalFooter>\n                <Button className=\"secondary-button\" onClick={toggle}>CLOSE</Button>\n            </ModalFooter>\n        </Modal>\n    </tr>\n    )\n}\n\nexport default NFTItem;","import React, { useContext, useEffect, useState } from 'react';\nimport { Table } from 'reactstrap'\nimport { WalletContext } from '../../context/Wallet';\nimport NFTItem from './NFTItem';\n\nfunction NFTList() {\n\n    const wallet = useContext(WalletContext);\n    const { account, library, chainId } = wallet.context;\n\n    const [rows, setRows] = useState([\n    ]);\n\n    useEffect(() => {\n        updateRows();\n    }, [wallet.options])\n\n    const updateRows = async () => {\n        const optionItems = await Promise.all(wallet.options.nft.value.map(async (o) => {\n            return (\n            <NFTItem\n             key={o.index+'-'+o.provider}\n             id={o.index}\n             provider={o.provider}\n             tokenId={o.tokenId} />\n            )\n        }));\n\n        if(optionItems.length == 0)\n            optionItems.push(\n                <tr key=\"noOptionsNFT\" style={{textAlign:\"center\", width:'100%'}}>\n                    <th>\n                        <h6>No options found</h6>\n                    </th>\n                </tr>\n            )\n        setRows(optionItems)\n    }\n\n    return (<Table style={{color: \"white\", fontSize:'12px'}}>\n        <thead >\n            <tr>\n                <th>#</th>\n                <th>Type</th>\n                <th>Size</th>\n                <th>Strike</th>\n                <th>Maturity</th>\n                <th>Tokenize</th>\n            </tr>\n        </thead>\n        <tbody>\n            {rows}\n        </tbody>\n    </Table>)\n}\n\nexport default NFTList;","import React from 'react';\nimport {Card} from 'reactstrap'\nimport NFTList from './NFTList';\n\nfunction YourNFTOptions() {\n    return (\n        <Card body style={{padding:'15px'}}>\n            <h3>Your NFT options</h3>\n            <span>\n                Here you will find your NFT Hegic options.\n            </span>\n            <NFTList />\n        </Card>\n    )\n}\n\nexport default YourNFTOptions;","import React, {useContext} from 'react'\nimport { Container, Row, Col } from 'reactstrap'\nimport YourOptions from './yourOptions/index';\nimport YourNFTOptions from './yourNFTOptions/index';\nimport { AppContext } from '../context/App';\n\n\n\nfunction Dashboard() {\n  // const wallet = useContext(WalletContext);\n  // const {account, library, chainId } = wallet.context;\n\n  // const HEGIC = useHegicContract();\n  // const ethOptions = useHegicETHOptionsContract();\n  // const wbtcOptions = useHegicWBTCOptionsContract();\n  // const WBTC = useWBTCContract();\n\n  return (\n    <Container style={{minHeight:'100%', paddingBottom:'60px', marginTop:'-58px', paddingTop:'58px', marginBottom:'-60px'}}>\n      <Row>\n        <Col md={{size: 6}} style={{padding:\"10px\"}}>\n          <YourOptions/>\n        </Col>\n        <Col md={{size: 6}} style={{padding:\"10px\"}}>\n          <YourNFTOptions/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Dashboard;","import React, { useEffect, useContext } from 'react'\n// import { useWeb3React } from '@web3-react/core'\nimport { Badge, Button, Col, Navbar} from 'reactstrap';\nimport { truncateAddress, truncateEtherValue, formatBN } from '../utils'\nimport { WalletContext } from '../context/Wallet'\nimport { useHegicETHOptionsContract, useHegicWBTCOptionsContract, useHegicETHOptionsNFTContract, useHegicWBTCOptionsNFTContract } from '../contracts/useContract';\nimport { AppContext } from '../context/App';\n\nfunction Header(props) {\n    const app = useContext(AppContext)\n    const wallet = useContext(WalletContext);\n    const { account, library, chainId, active } = wallet.context;\n\n    const nftETHOptions = useHegicETHOptionsNFTContract();\n    const nftWBTCOptions = useHegicWBTCOptionsNFTContract();\n    const ethOptions = useHegicETHOptionsContract();\n    const wbtcOptions = useHegicWBTCOptionsContract();\n\n    const updateMyOptions = async () => {\n        const myOptions = []\n        const alreadyInOptionIds = [];\n\n        const optionProviders = [ethOptions, wbtcOptions];\n        for(const op of optionProviders) {\n            const filter = op.filters.Create(null, account);\n            const events = await op.queryFilter(filter);\n            await Promise.all(events.map(async (x) => {\n                const option = await op.options(x.args.id);\n                console.log(\"Expiration: \", option.expiration.toNumber())\n                console.log(\"Now: \", new Date().getTime()/1000)\n                console.log(\"Id\", x.args.id.toNumber(), \"result: \", option.expiration.toNumber() >= new Date().getTime()/1000)\n                if(option.holder == account && !alreadyInOptionIds.includes(x.args.id.toNumber()) && option.state == 1 && option.expiration.toNumber() >= new Date().getTime()/1000){\n                    myOptions.push({index: x.args.id.toNumber(), provider: op.address , ...option})\n                    alreadyInOptionIds.push(x.args.id.toNumber())\n                }\n            }))\n        }\n\n        // detokenized options: options created using NFT contract but that are now owned by the user\n        const nftOptionProviders = [nftETHOptions, nftWBTCOptions];\n        for(const nop of nftOptionProviders) {\n            const filter2 = nop.filters.Detokenized(account, null);\n            const events2 = await nop.queryFilter(filter2);\n            await Promise.all(events2.map(async (x) => {\n                const op = await nop.optionsProvider();\n                const option = await nop.getUnderlyingOptionParams(x.args.tokenId);\n                const optionId = await nop.getUnderlyingOptionId(x.args.tokenId);\n                if(option.holder == account && !alreadyInOptionIds.includes(optionId.toNumber()) && option.state == 1 && option.expiration.toNumber() >= new Date().getTime()/1000){\n                    myOptions.push({index: optionId.toNumber(), provider: op , ...option})\n                    alreadyInOptionIds.push(optionId.toNumber())\n                }\n            }))       \n         }\n        wallet.options.hegic.setValue(myOptions);\n    }\n\n    const updateMyNFTOptions = async () => {\n        const myNFTOptions = [];\n        const nftProviders = [nftETHOptions, nftWBTCOptions];\n        let index = 0;\n        for(const np of nftProviders){\n            const ownedTokens = await np.balanceOf(account).then(x => x.toNumber());\n            while(index < ownedTokens){\n                try {\n                    myNFTOptions.push({index, provider: np.address, tokenId: await np.tokenOfOwnerByIndex(account, index)});\n                    index++;\n                }catch(error){\n                    break;\n                }\n            }\n            index = 0;\n        }\n        console.log(myNFTOptions)\n        wallet.options.nft.setValue(myNFTOptions);\n    }\n\n    useEffect(() => {\n        if(!!account && !!library && app.reload) {\n            library.getBalance(account).then((balance) => {\n                wallet.balances.ETHBalance.setValue(balance)\n            });\n\n            updateMyOptions();\n\n            updateMyNFTOptions();\n            app.updateData();\n        }\n    }, [account, library, chainId, app.reload])\n\n    const Wallet = () => {\n        return (\n            <>\n                <Col sm='0' md={{size:2, offset:5}} style={{display:'flex', justifyContent:'center'}}>\n                    <h3 style={{color:'#45fff4', zIndex:'99', fontFamily:'Jura', fontWeight:'bold'}}>HEGIC<span style={{color:\"white\"}}>:TOKENIZER</span></h3>\n                </Col>\n                <Col sm='12' md={{size:5, offset:0}} style={{display:'flex', justifyContent:'flex-end'}}>\n                { active ? (\n                    <div>\n                        <Badge color=\"primary\" style={{margin:\"2.5px\"}}>{truncateEtherValue(formatBN(wallet.balances.HEGICBalance.value),2)} HEGIC </Badge>\n                        <Badge color=\"secondary\" style={{margin:\"2.5px\"}}>{truncateEtherValue(formatBN(wallet.balances.ETHBalance.value),4)} ETH </Badge>\n                        <span style={{color:'#defefe', fontSize:'12px'}}>{truncateAddress(account)}</span>\n                        <Button color=\"link\" onClick={wallet.disconnect}>Disconnect</Button>\n                    </div>\n                ) : (\n                    <Button color=\"link\" onClick={wallet.connect}>Connect</Button>\n                )}\n                </Col>\n            </>\n        )\n    }\n    \n    return (\n            <Navbar style={{display:'flex', backgroundColor:'#19274d', borderBottom: '1px solid #45fff4'}}>\n                <Wallet />\n            </Navbar>\n    );\n}\n\nexport default Header;","import React, { useContext } from 'react';\nimport { Row, Container, Col, Button } from 'reactstrap';\nimport { WalletContext } from '../context/Wallet';\n\nfunction Intro(props) {\n    const connect = useContext(WalletContext).connect\n    return (\n    <Container>\n        <Row style={{marginTop:'10vh', minHeight:'50vh', zIndex:'-1', textAlign:'center'}}>\n            <Col sm='12' md={{ size: 6, offset: 3}}>\n                    <h1 style={{\n                        color:'#45fff4',\n                        fontFamily:'Jura',\n                        fontWeight:'bold',\n                        lineHeight:'125%',\n                        fontSize:'46px',\n                        textTransform:'uppercase'\n                        }}>Hegic Options: tokenized</h1>\n                    <div style={{color: '#defefe', fontFamily:'Exo 2', fontWeight:'500', lineHeight:'150%'}}>\n                    </div>\n                    <div style={{marginTop:'25px', display:'flex', justifyContent:'center'}}>\n                    <Button style={{\n                        color:'#15203d',\n                        fontWeight:'bold',\n                        fontFamily:'Jura',\n                        letterSpacing:'.1em',\n                        background:'transparent',\n                        borderImageSource:'url(https://www.hegic.co/assets/img/button-primary.svg)', \n                        borderImageSlice:'20',\n                        borderStyle:'solid',\n                        boxSizing:'border-box',\n                        borderRadius:'2px',\n                        borderImageWidth:'50px'}} \n                        onClick={connect}>CONNECT WALLET</Button>\n                    </div>\n            </Col>\n        </Row>\n    </Container>);\n}\n\nexport default Intro;","import React from 'react';\nimport {Row, Col} from 'reactstrap'\nfunction Footer() {\n    return (\n        <div style={{height:'60px', position:'relative', color:'#defefe', textAlign:'center'}}>\n            <Row style={{display:'flex', justifyContent:'middle', flexDirection:'row', verticalAlign:'center'}}>\n                <Col md={{size:2, offset:3}}>\n                    <a href=\"https://jmonteer.medium.com/\">About</a>\n                </Col>\n                <Col md={{size:2, offset:2}}>\n                    <a href=\"https://twitter.com/jmonteer23\" target=\"_blank\">@jmonteer23</a>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Footer;","import { InjectedConnector } from '@web3-react/injected-connector'\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 3, 4, 5, 42] })\n","import React, { useContext, useState } from 'react'\nimport { Toast, ToastHeader, ToastBody, Spinner, Button} from 'reactstrap'\nimport { AppContext } from '../../context/App'\n\nfunction StatusMsg() {\n    const app = useContext(AppContext)\n\n    return (\n        <>\n            <div className='statusMessage'>\n                <Toast isOpen={app.statusMsg != \"\"}>\n                    <ToastHeader icon={<Spinner size=\"sm\" />}>\n                        { app.statusMsgTitle }\n                    </ToastHeader>\n                    <ToastBody>\n                        { app.statusMsg }\n                        <br></br>\n                        <br></br>\n                        <Button size=\"sm\" className=\"secondary-button\" onClick={() => app.updateStatusMsg(\"\",\"\")}>CLOSE</Button>\n                    </ToastBody>\n                </Toast>\n            </div>\n        </>\n    )\n}\n\nexport default StatusMsg;","import React, { useState, useEffect, useContext } from 'react';\nimport Dashboard from './components/dashboard';\nimport Header from './components/header'\nimport Intro from './components/intro'\nimport Footer from './components/footer'\nimport { useWeb3React, Web3ReactProvider } from '@web3-react/core'\nimport { ethers } from 'ethers';\nimport { useEagerConnect, useInactiveListener } from './hooks'\nimport { injected } from './connectors';\nimport { WalletContext } from './context/Wallet';\nimport { AppContext } from './context/App';\nimport StatusMsg from './components/statusMsg';\n\nfunction getLibrary(provider, connector) {\n  return new ethers.providers.Web3Provider(provider)\n}\n\nfunction App() {\n  const [ETHBalance, setETHBalance] = useState(ethers.BigNumber.from('0'));\n  const [HEGICBalance, setHEGICBalance] = useState(ethers.BigNumber.from('0'));\n  const [HEGICAllowance, setHEGICAllowance] = useState(ethers.BigNumber.from('0'));\n  const [myOptions, setMyOptions] = useState([]);\n  const [myNFT, setMyNFT] = useState([])\n  const [statusMsg, setStatusMsg] = useState(\"\");\n  const [statusMsgTitle, setStatusMsgTitle] = useState(\"\");\n  const [reload, setReload] = useState(true);\n\n  const balances = {\n    ETHBalance: {value: ETHBalance, setValue: setETHBalance},\n    HEGICBalance: {value: HEGICBalance, setValue: setHEGICBalance},\n  }\n\n  const allowances = {\n    HEGICAllowance: {value: HEGICAllowance, setValue: setHEGICAllowance}\n  }\n\n  const options = {\n    hegic: { value: myOptions, setValue: setMyOptions },\n    nft: { value: myNFT, setValue: setMyNFT }\n  }\n\n  const context = useWeb3React()\n  const { connector, active, activate, deactivate } = context\n  \n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = useState()\n  useEffect(() => {\n  if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n  }\n  }, [activatingConnector, connector])\n  \n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n  \n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n  \n  function connect() {\n      setActivatingConnector(injected)\n      activate(injected)\n  }\n  \n  function disconnect() {\n  deactivate(injected)\n  }\n\n  const updateData = () => setReload(!reload);\n\n  const updateStatusMsg = (title, message) => {\n    setStatusMsgTitle(title);\n    setStatusMsg(message);\n  }\n  const updateAndWait = async (updateStatusMsg, txRequest, from) => {\n    const title = (<bold>{from}: Pending transaction </bold>)\n    const message = (\n      <>\n        <a target='_blank' href={`https://rinkeby.etherscan.io/tx/${txRequest.hash}`}>\n          See in etherscan\n        </a>\n      </>\n    )\n    updateStatusMsg(title, message);\n    await txRequest.wait();\n    updateStatusMsg(\"\", \"\");\n    updateData();\n  }\n\n  return (\n    <AppContext.Provider value={{statusMsgTitle, statusMsg, updateStatusMsg, updateAndWait, reload, updateData}}>\n      <WalletContext.Provider value={{context, connect, disconnect, balances, allowances, options}}>\n        <div style={{ background:'radial-gradient(68.28% 53.52% at 50% 50%, #1c2a4f 0%, #111b35 100%)'}}>\n            <div style={{backgroundImage:'url(https://www.hegic.co/assets/img/background-image.svg)', height:'100vh'}}>\n                <Header />\n                { active ? (\n                  <Dashboard />\n                ) : (\n                  <Intro />\n                )}\n                {/* <Stats /> */}\n                <Footer />\n                <StatusMsg></StatusMsg>\n            </div>\n        </div>\n      </WalletContext.Provider>\n  </AppContext.Provider>\n  );\n}\n\n\nexport default () => (\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <App />\n  </Web3ReactProvider>\n)\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { injected } from './connectors'\n\nexport function useEagerConnect() {\n    const { activate, active } = useWeb3React()\n  \n    const [tried, setTried] = useState(false)\n  \n    useEffect(() => {\n      injected.isAuthorized().then((isAuthorized) => {\n        if (isAuthorized) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true)\n          })\n        } else {\n          setTried(true)\n        }\n      })\n    }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n  \n    // if the connection worked, wait until we get confirmation of that to flip the flag\n    useEffect(() => {\n      if (!tried && active) {\n        setTried(true)\n      }\n    }, [tried, active])\n  \n    return tried\n  }\n  \n  export function useInactiveListener(suppress = false) {\n    const { active, error, activate } = useWeb3React()\n  \n    useEffect(() => {\n      const { ethereum } = window\n      if (ethereum && ethereum.on && !active && !error && !suppress) {\n        const handleConnect = () => {\n          console.log(\"Handling 'connect' event\")\n          activate(injected)\n        }\n        const handleChainChanged = (chainId) => {\n          console.log(\"Handling 'chainChanged' event with payload\", chainId)\n          activate(injected)\n        }\n        const handleAccountsChanged = (accounts) => {\n          console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n          if (accounts.length > 0) {\n            activate(injected)\n          }\n        }\n        const handleNetworkChanged = (networkId) => {\n          console.log(\"Handling 'networkChanged' event with payload\", networkId)\n          activate(injected)\n        }\n  \n        ethereum.on('connect', handleConnect)\n        ethereum.on('chainChanged', handleChainChanged)\n        ethereum.on('accountsChanged', handleAccountsChanged)\n        ethereum.on('networkChanged', handleNetworkChanged)\n  \n        return () => {\n          if (ethereum.removeListener) {\n            ethereum.removeListener('connect', handleConnect)\n            ethereum.removeListener('chainChanged', handleChainChanged)\n            ethereum.removeListener('accountsChanged', handleAccountsChanged)\n            ethereum.removeListener('networkChanged', handleNetworkChanged)\n          }\n        }\n      }\n    }, [active, error, suppress, activate])\n  }\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './scss/custom.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n        <script src=\"https://cdn.usefathom.com/script.js\" data-site=\"GKKLPULC\" defer></script>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}