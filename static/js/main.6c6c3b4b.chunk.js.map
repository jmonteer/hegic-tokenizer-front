{"version":3,"sources":["context/Wallet.js","contracts/useContract.js","utils.js","components/yourOptions/optionItem.js","components/yourOptions/optionsList.js","components/yourOptions/index.js","components/yourNFTOptions/NFTItem.js","components/yourNFTOptions/NFTList.js","components/yourNFTOptions/index.js","components/dashboard.js","components/header.js","components/intro.js","components/footer.js","connectors.js","App.js","hooks.js","serviceWorker.js","index.js"],"names":["WalletContext","createContext","context","balances","allowances","poolConditions","profits","connect","disconnect","AGGREGATORV3INTERFACE_ABI","getContract","address","ABI","library","account","ethers","Contract","getSigner","useContract","withSignerIfPossible","useWeb3React","useMemo","undefined","error","console","useHegicETHOptionsContract","HEGIC_OPTIONS_ETH_ABI","useHegicWBTCOptionsContract","HEGIC_OPTIONS_WBTC_ABI","useHegicETHOptionsNFTContract","HEGIC_ETH_OPTIONS_NFT_ABI","useHegicWBTCOptionsNFTContract","HEGIC_WBTC_OPTIONS_NFT_ABI","truncateEtherValue","str","maxDecimalDigits","includes","parts","split","slice","formatBN","bn","utils","commify","formatEther","toString","timeToMaturity","expiration","seconds","toNumber","Date","getTime","days","Math","floor","hrs","OptionItem","props","useContext","wbtcOptions","wbtcNFTOptions","ethNFTOptions","id","decimals","provider","asset","optionType","nftProvider","amount","formatUnits","strike","tokenize","a","tokenizeOption","txRequest","log","hash","wait","scope","href","onClick","UncontrolledTooltip","placement","target","OptionsList","wallet","chainId","useState","rows","setRows","useEffect","updateRows","options","Promise","all","hegic","value","map","o","key","index","holder","state","optionItems","length","push","style","textAlign","width","Table","color","fontSize","YourOptions","Card","body","padding","NFTItem","ethOptions","ethusdPriceProvider","wbtcusdPriceProvider","tokenId","optionsProvider","priceProvider","underlyingOptionParams","setUnderlyingOptionParams","setAmount","setStrike","setExpiration","isValid","setIsValid","destinationAddress","setDestinationAddress","currentProfit","setCurrentProfit","currentPrice","setCurrentPrice","optionId","setOptionId","setOptionType","transferButtonDisabled","setTransferButtonDisabled","exerciseButtonDisabled","setExerciseButtonDisabled","retrieveOptionParams","getCurrentProfit","isAddress","latestRoundData","then","x","answer","cp","profit","lockedAmount","getUnderlyingOptionParams","uop","getUnderlyingOptionId","transferOwnership","transfer","transferToken","transferFrom","detokenize","burn","detokenizeOption","exercise","exerciseOption","modal","setModal","toggle","Modal","isOpen","ModalHeader","ModalBody","Row","Col","paddingLeft","InputGroup","md","size","InputGroupAddon","addonType","InputGroupText","Input","disabled","paddingRight","marginTop","cursor","UncontrolledCollapse","toggler","placeholder","onChange","event","Button","className","margin","height","offset","ModalFooter","NFTList","nft","YourNFTOptions","Dashboard","Container","minHeight","paddingBottom","paddingTop","marginBottom","Header","active","nftETHOptions","nftWBTCOptions","updateMyOptions","myOptions","optionProviders","op","filter","filters","Create","queryFilter","events","args","option","setValue","updateMyNFTOptions","myNFTOptions","np","balanceOf","ownedTokens","tokenOfOwnerByIndex","getBalance","balance","ETHBalance","Wallet","sm","display","justifyContent","zIndex","fontFamily","fontWeight","Badge","HEGICBalance","len","substring","truncateAddress","Navbar","backgroundColor","borderBottom","Intro","lineHeight","textTransform","letterSpacing","background","borderImageSource","borderImageSlice","borderStyle","boxSizing","borderRadius","borderImageWidth","Footer","position","flexDirection","verticalAlign","injected","InjectedConnector","supportedChainIds","getLibrary","connector","providers","Web3Provider","App","BigNumber","from","setETHBalance","setHEGICBalance","HEGICAllowance","setHEGICAllowance","setMyOptions","activate","deactivate","activatingConnector","setActivatingConnector","suppress","ethereum","window","on","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","tried","setTried","isAuthorized","catch","useEagerConnect","Provider","backgroundImage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6c6c3b4b.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst WalletContext = createContext(\n    {\n        context: {},\n        balances: {},\n        allowances: {},\n        poolConditions: {},\n        profits: {},\n        connect: () => {},\n        disconnect: () => {}\n    });\n\nexport {\n    WalletContext\n};\n\n","import { useWeb3React } from '@web3-react/core'\nimport { useMemo } from 'react'\nimport { ethers } from 'ethers'\n\nimport { abi as HEGIC_WBTC_OPTIONS_NFT_ABI } from './json/HegicERC20OptionsNFT.json'\nimport { abi as HEGIC_ETH_OPTIONS_NFT_ABI } from './json/HegicETHOptionsNFT.json'\nimport { abi as HEGIC_OPTIONS_WBTC_ABI } from './json/FakeHegicWBTCOptions.json'\nimport { abi as HEGIC_OPTIONS_ETH_ABI } from './json/FakeHegicETHOptions.json'\nimport { abi as HEGIC_ABI } from './json/FakeHEGIC.json'\nimport { abi as WBTC_ABI } from './json/FakeWBTC.json'\nconst AGGREGATORV3INTERFACE_ABI = [{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\n\n//mainnet contracts\nconst ETHUSD_ADDRESS = \"0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\";\nconst WBTCUSD_ADDRESS = \"0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c\";\nconst HEGIC_ETH_OPTIONS_NFT_ADDRESS = \"0x0e4681CC435Ac48F69ad7Bb535d5cee5FDB038b8\";\nconst HEGIC_WBTC_OPTIONS_NFT_ADDRESS = \"0x6da28Db16ecB33C2468FF934CD3A3447c588309A\";\nconst HEGIC_OPTIONS_WBTC_ADDRESS = \"0x3961245DB602eD7c03eECcda33eA3846bD8723BD\";\nconst HEGIC_OPTIONS_ETH_ADDRESS = \"0xEfC0eEAdC1132A12c9487d800112693bf49EcfA2\";\nconst HEGIC_ADDRESS = '0x584bC13c7D411c00c01A62e8019472dE68768430';\nconst WBTC_ADDRESS = '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599';\n\n//rinkeby contracts\n// const ETHUSD_ADDRESS = \"0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\";\n// const WBTCUSD_ADDRESS = \"0xECe365B379E1dD183B20fc5f022230C044d51404\";\n// const HEGIC_ETH_OPTIONS_NFT_ADDRESS = \"0x230525E7ccF8e79127764b12888Da542D3309AD1\";\n// const HEGIC_WBTC_OPTIONS_NFT_ADDRESS = \"0x3f910ca1093D5f31AA778fA355FA05280D2D0419\";\n// const HEGIC_OPTIONS_WBTC_ADDRESS = \"0x3A97B5d06593AC649E25850Ab47121d96832041F\";\n// const HEGIC_OPTIONS_ETH_ADDRESS = \"0xC5c5aF6Fc7afd67C1C6bE5b306CC9b59cbc77583\";\n// const HEGIC_ADDRESS = '0x584bC13c7D411c00c01A62e8019472dE68768430'\n// const WBTC_ADDRESS = '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599'\n\n// returns null on errors\nfunction getContract(address, ABI, library, account) {\n    return new ethers.Contract(address, ABI, library.getSigner(account))\n}\n\nfunction useContract(address, ABI, withSignerIfPossible = true) {\n  const { library, account } = useWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n} \n\nexport function useHegicETHOptionsContract() {\n  return useContract(HEGIC_OPTIONS_ETH_ADDRESS, HEGIC_OPTIONS_ETH_ABI);\n}\n\nexport function useHegicWBTCOptionsContract() {\n  return useContract(HEGIC_OPTIONS_WBTC_ADDRESS, HEGIC_OPTIONS_WBTC_ABI);\n}\n\nexport function useHegicETHOptionsNFTContract() {\n  return useContract(HEGIC_ETH_OPTIONS_NFT_ADDRESS, HEGIC_ETH_OPTIONS_NFT_ABI);\n}\n\nexport function useHegicWBTCOptionsNFTContract() {\n  return useContract(HEGIC_WBTC_OPTIONS_NFT_ADDRESS, HEGIC_WBTC_OPTIONS_NFT_ABI);\n}\n\nexport function useHegicContract() {\n  return useContract(HEGIC_ADDRESS, HEGIC_ABI);\n}\n\nexport function useWBTCContract() {\n  return useContract(WBTC_ADDRESS, WBTC_ABI);\n}\n\nexport function useWBTCUSDContract() {\n  return useContract(WBTCUSD_ADDRESS, AGGREGATORV3INTERFACE_ABI);\n}\n\nexport function useETHUSDContract() {\n  return useContract(ETHUSD_ADDRESS, AGGREGATORV3INTERFACE_ABI);\n}","import { ethers } from 'ethers'\n\nconst truncateEtherValue = (str, maxDecimalDigits) => {\n    if (str.includes(\".\")) {\n    const parts = str.split(\".\");\n    return parts[0] + \".\" + parts[1].slice(0, maxDecimalDigits);\n    }\n    return str;\n};\n\nconst formatBN = (bn) => {\n    return ethers.utils.commify(ethers.utils.formatEther(bn.toString()));\n}\n\nconst truncateAddress = (str) => {\n    const len = str.length;\n    return str.substring(0, 8) + '...' + str.substring(len-7, len-1);\n}\n\nconst timeToMaturity = (expiration) => {\n    if(!expiration) return 0;\n    let seconds = expiration.toNumber() - new Date().getTime()/1000;\n    const days = Math.floor(seconds / (3600*24));\n    seconds  -= days*3600*24;\n    const hrs   = Math.floor(seconds / 3600);\n    seconds  -= hrs*3600;\n    return days+'d '+hrs+'h';\n}\n\nconst Asset = {Invalid: 0, WBTC: 1, ETH: 2}\nconst OptionType = {Invalid: 0, Put: 1, Call: 2}\n\nexport {\n    truncateEtherValue,\n    formatBN, \n    truncateAddress,\n    Asset,\n    OptionType,\n    timeToMaturity\n}","import React, { useContext } from 'react';\nimport { ethers } from 'ethers'\nimport { useHegicWBTCOptionsContract, useHegicWBTCOptionsNFTContract, useHegicETHOptionsNFTContract } from '../../contracts/useContract';\nimport { timeToMaturity } from '../../utils'\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { WalletContext } from '../../context/Wallet';\n\nfunction OptionItem(props) {\n    const wallet = useContext(WalletContext);\n    const { account } = wallet.context;\n    const wbtcOptions = useHegicWBTCOptionsContract();\n    const wbtcNFTOptions = useHegicWBTCOptionsNFTContract();\n    const ethNFTOptions = useHegicETHOptionsNFTContract();\n\n    const id = props.id;\n    const decimals = props.provider == wbtcOptions.address ? 8 : 18;\n    const asset = props.provider == wbtcOptions.address ? \"WBTC\" : \"ETH\";\n    const optionType = props.optionType == 1 ? \"PUT\" : \"CALL\";\n    const nftProvider = props.provider == wbtcOptions.address ? wbtcNFTOptions : ethNFTOptions;\n\n    const amount = ethers.utils.formatUnits(props.amount, decimals);\n    const strike = ethers.utils.formatUnits(props.strike, 8);\n\n    const tokenize = async (id) => {\n        const txRequest = await nftProvider.tokenizeOption(id, account);\n        // await waitAndUpdate(txRequest);\n        console.log(txRequest.hash)\n        await txRequest.wait();\n    }\n\n    return (\n    <tr>\n        <th scope=\"row\">{asset+'['+id+']'}</th>\n        <td>{optionType}</td>\n        <td>{amount}</td>\n        <td>${strike}</td>\n        <td>{timeToMaturity(props.expiration)}</td> \n        <td><a href=\"#\" id=\"tokenizeLink\" onClick={async () => await tokenize(id)}>TOKENIZE</a>\n        <UncontrolledTooltip placement=\"right\" target=\"tokenizeLink\">\n            You will need to transfer option's ownership to this contract AFTER tokenizing\n      </UncontrolledTooltip></td>\n    </tr>\n    )\n}\n\nexport default OptionItem;","import React, { useContext, useEffect, useState } from 'react';\nimport { Table } from 'reactstrap'\nimport { WalletContext } from '../../context/Wallet';\nimport OptionItem from './optionItem';\n\nfunction OptionsList() {\n\n    const wallet = useContext(WalletContext);\n    const { account, library, chainId } = wallet.context;\n\n    const [rows, setRows] = useState([\n    ]);\n\n    useEffect(() => {\n        updateRows();\n    }, [wallet.options])\n\n    const updateRows = async () => {\n        const optionItems = await Promise.all(wallet.options.hegic.value.map(async (o) => {\n            return (\n            <OptionItem\n             key={o.index+'-'+o.provider}\n             id={o.index}\n             holder={o.holder}\n             amount={o.amount}\n             provider={o.provider}\n             strike={o.strike}\n             expiration={o.expiration} \n             optionType={o.optionType}\n             state={o.state} />\n            )\n        }));\n\n        if(optionItems.length == 0){\n            optionItems.push(\n                <tr key=\"noOptionsHegic\" style={{textAlign:\"center\", width:'100%'}}>\n                    <th>\n                        <h6>No options found</h6>\n                    </th>\n                </tr>\n            )\n}\n        setRows(optionItems)\n    }\n\n    return (<Table style={{color: \"white\", fontSize:'12px'}}>\n        <thead >\n            <tr>\n                <th>#</th>\n                <th>Type</th>\n                <th>Size</th>\n                <th>Strike</th>\n                <th>Maturity</th>\n                <th>Tokenize</th>\n            </tr>\n        </thead>\n        <tbody>\n            {rows}\n        </tbody>\n    </Table>)\n}\n\nexport default OptionsList;","import React from 'react';\nimport {Card} from 'reactstrap'\nimport OptionsList from './optionsList';\n\nfunction YourOptions() {\n    return (\n        <Card body style={{padding:'15px'}}>\n            <h3>Your Hegic options</h3>\n            <span>Here you will find your regular Hegic options. </span>\n            <OptionsList />\n        </Card>\n    )\n}\n\nexport default YourOptions;","import React, { useState, useEffect, useContext } from 'react';\nimport { ethers } from 'ethers'\nimport { useHegicETHOptionsNFTContract, useHegicWBTCOptionsNFTContract, useHegicWBTCOptionsContract, useHegicETHOptionsContract, useWBTCUSDContract, useETHUSDContract } from '../../contracts/useContract';\nimport { timeToMaturity } from '../../utils'\nimport { UncontrolledCollapse, UncontrolledTooltip, Row, Col, Button, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, Input, InputGroupAddon, InputGroupText } from 'reactstrap'\nimport { WalletContext } from '../../context/Wallet';\n\nfunction NFTItem(props) {\n    const wallet = useContext(WalletContext);\n    const {account} = wallet.context\n    const wbtcNFTOptions = useHegicWBTCOptionsNFTContract();\n    const ethNFTOptions = useHegicETHOptionsNFTContract();\n    const wbtcOptions = useHegicWBTCOptionsContract();\n    const ethOptions = useHegicETHOptionsContract();\n    const ethusdPriceProvider = useETHUSDContract();\n    const wbtcusdPriceProvider = useWBTCUSDContract();\n\n    const id = props.id;\n    const tokenId = props.tokenId;\n    \n    const decimals = props.provider == wbtcNFTOptions.address ? 8 : 18;\n    const asset = props.provider == wbtcNFTOptions.address ? \"WBTC\" : \"ETH\";\n    const nftProvider = props.provider == wbtcNFTOptions.address ? wbtcNFTOptions : ethNFTOptions;\n    const optionsProvider = props.provider == wbtcNFTOptions.address ? wbtcOptions : ethOptions;\n    const priceProvider = props.provider == wbtcNFTOptions.address ?  wbtcusdPriceProvider : ethusdPriceProvider;\n\n    const [underlyingOptionParams, setUnderlyingOptionParams] = useState();\n    const [amount, setAmount] = useState();\n    const [strike, setStrike] = useState();\n    const [expiration, setExpiration] = useState();\n    const [isValid, setIsValid] = useState(false);\n    const [destinationAddress, setDestinationAddress] = useState('');\n    const [currentProfit, setCurrentProfit] = useState(0);\n    const [currentPrice, setCurrentPrice] = useState(0);\n    const [optionId, setOptionId] = useState(0);\n    const [optionType, setOptionType] = useState(0);\n    const [transferButtonDisabled, setTransferButtonDisabled] = useState(true);\n    const [exerciseButtonDisabled, setExerciseButtonDisabled] = useState(true);\n\n    useEffect(() => {\n        retrieveOptionParams(props.tokenId);\n    }, [])\n\n    useEffect(() => {\n        getCurrentProfit();\n    }, [underlyingOptionParams])\n\n    useEffect(() => {\n        setTransferButtonDisabled(!ethers.utils.isAddress(destinationAddress))\n    }, [destinationAddress]);\n\n    const getCurrentProfit = async () => {\n        if(underlyingOptionParams){\n            const strike = underlyingOptionParams.strike.toNumber();\n            const amount = ethers.utils.formatUnits(underlyingOptionParams.amount, decimals)\n            const cp = await priceProvider.latestRoundData().then(x => x.answer.toNumber());\n            const optionType = underlyingOptionParams.optionType == 1 ? \"PUT\" : \"CALL\";\n            setCurrentPrice(cp);\n            setOptionType(optionType);\n            let profit = 0;\n            console.log(\"optionType\", optionType)\n            if(optionType == \"CALL\") {\n                profit = ((cp-strike)/cp)*amount;\n            } else if (optionType == \"PUT\") {\n                profit = (strike - cp)/cp*amount;\n            }\n\n            if(profit < 0) profit = 0;\n    \n            if(profit > underlyingOptionParams.lockedAmount)\n                profit = underlyingOptionParams.lockedAmount;\n\n            setCurrentProfit(profit);\n            setExerciseButtonDisabled((profit == 0) || (underlyingOptionParams.state != 1))\n        }\n    }\n\n    const retrieveOptionParams = async () => {\n        const uop = await nftProvider.getUnderlyingOptionParams(tokenId);\n        setUnderlyingOptionParams(uop);\n        setAmount(ethers.utils.formatUnits(uop.amount, decimals));\n        setOptionId(await nftProvider.getUnderlyingOptionId(tokenId).then(x=>x.toNumber()));\n        setStrike(ethers.utils.formatUnits(uop.strike, 8));\n        setExpiration(uop.expiration);\n        setIsValid(uop.holder == nftProvider.address);\n    }\n\n    const transferOwnership = async () => {\n        const optionId = await nftProvider.getUnderlyingOptionId(tokenId);\n        const txRequest = await optionsProvider.transfer(optionId, nftProvider.address);\n        console.log(txRequest.hash);\n        await txRequest.wait();\n    }\n\n    const transferToken = async () => {\n        const txRequest = await nftProvider.transferFrom(account, destinationAddress, tokenId);\n        console.log(txRequest.hash);\n        await txRequest.wait();\n    }\n\n    const detokenize = async (burn) => {\n        const txRequest = await nftProvider.detokenizeOption(tokenId, burn);\n        console.log(txRequest.hash);\n        await txRequest.wait();\n    }\n\n    const exercise = async () => {\n        const txRequest = await nftProvider.exerciseOption(tokenId);\n        console.log(txRequest.hash);\n        await txRequest.wait();\n    }\n\n    const [modal, setModal] = useState(false);\n\n    const toggle = () => setModal(!modal);\n    return (\n    <tr>\n        <th scope=\"row\">{asset+'['+optionId+']'}</th>\n        <td>{optionType}</td>\n        <td>{amount}</td>\n        <td>${strike}</td>\n        <td>{expiration ? timeToMaturity(expiration):(null)}</td> \n        { \n            isValid ? \n                (<td><a href=\"#\" onClick={toggle}>MANAGE</a></td>) \n            :\n                (<td><a href=\"#\" onClick={async () => await transferOwnership(tokenId)}>TRANSFER OWNERSHIP</a></td>)\n        }\n\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}><h4>Manage your NFT Option</h4></ModalHeader>\n            <ModalBody>\n                <Row>\n                    <Col>\n                        <Row style={{paddingLeft:'15px'}} >\n                            <h5>Your Option</h5>\n                        </Row>\n                        <Row>\n                        <InputGroup style={{textAlign:'center'}}>\n                            <Col md={{size:3}} style={{padding:'2px', paddingLeft:'15px'}}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>ID</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={asset+'['+optionId+']'} disabled />\n                                    \n                            </Col>\n                            <Col md={{size:3}} style={{padding:'2px'}}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>SIZE</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={amount} disabled />\n                            </Col>\n                            <Col md={{size:3}} style={{padding:'2px'}}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>STRIKE (USD)</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={strike} disabled />\n                            </Col>\n                            <Col md={{size:3}} style={{padding:'2px', paddingRight:'15px'}}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>OPTIONTYPE</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={optionType} disabled />\n                            </Col>\n                            </InputGroup>\n                        </Row>\n                    </Col>\n                </Row>\n\n                <Row style={{marginTop:'20px'}}>\n                    <Col>\n                        <Row style={{paddingLeft:'15px', cursor:'pointer'}} id=\"transferToggler\" >\n                            <h5>Transfer your option</h5>\n                        </Row>\n                        <UncontrolledCollapse toggler=\"#transferToggler\">\n                            <InputGroup >\n                                <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>RECEIVER</InputGroupText>\n                                </InputGroupAddon>  \n                                    <Input placeholder=\"0x0000000000000000000000000000000000000000\" value={destinationAddress} onChange={(event) => setDestinationAddress(event.target.value)} />\n                                <InputGroupAddon addonType=\"append\">\n                                    <Button className=\"input-button\"style={{margin:\"0\"}} disabled={transferButtonDisabled} onClick={async () => transferToken()}>TRANSFER</Button>\n                                </InputGroupAddon>  \n                            </InputGroup>\n                        </UncontrolledCollapse>\n                    </Col>\n                </Row>\n                <Row style={{marginTop:'20px'}}>\n                    <Col>\n                        <Row style={{paddingLeft:'15px', cursor:'pointer'}} id=\"exerciseToggler\" ><h5>Exercise your option</h5></Row>\n                        <UncontrolledCollapse toggler='#exerciseToggler'>\n                            <Row>\n                                <Col md={{size:3}} style={{padding:'2px', paddingLeft:'15px'}}>\n                                <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>{asset} PRICE (USD)</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={currentPrice/1e8} disabled />\n                                </Col>\n                                <Col md={{size:3}} style={{padding:'2px'}}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>EXPIRES IN</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={timeToMaturity(expiration)} disabled />\n                                </Col>\n                                <Col md={{size:3}} style={{padding:'2px'}}>\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText style={{fontSize:'12px', width:'100%'}}>P&L ({asset})</InputGroupText>\n                                    </InputGroupAddon>  \n                                    <Input style={{fontSize:'12px', width:'100%'}} value={currentProfit} disabled />\n                                </Col>\n                                <Col md={{size:3}} style={{padding:'2px', paddingRight:'15px'}}>\n                                    <Button className=\"input-button\" id=\"exerciseButton\" style={{height:'100%', width:'100%'}} disabled = {exerciseButtonDisabled} onClick={async () => await exercise()}>EXERCISE</Button>\n                                </Col>\n                            </Row>\n                        </UncontrolledCollapse>\n                    </Col>\n                </Row>\n                <Row style={{marginTop:'20px'}}>\n                    <Col>\n                    <Row style={{paddingLeft:'15px', cursor:'pointer'}} id=\"detokenizeToggler\" ><h5>Detokenize your option</h5></Row>\n                    <UncontrolledCollapse toggler=\"#detokenizeToggler\">\n                        <span style={{fontSize:'12px'}}>\n                            This will transfer option's ownership back to you and burn your NFT token.\n                            You will not be able to use this dashboard to manage your options.\n                        </span><br/>\n                        <Row>\n                            <Col md={{size:2}}>\n                                <Button className=\"main-button\" onClick={async () => await detokenize(false)}>DETOKENIZE</Button>\n                            </Col>\n                            <Col md={{size:8, offset: 2}}>\n                                <Button className=\"main-button warning\"  onClick={async () => await detokenize(true)}>DETOKENIZE AND BURN TOKEN</Button>\n                            </Col>\n                        </Row>\n                    </UncontrolledCollapse>\n                        \n                    </Col>\n                </Row>\n            </ModalBody>\n            <ModalFooter>\n                <Button className=\"secondary-button\" onClick={toggle}>CLOSE</Button>\n            </ModalFooter>\n        </Modal>\n    </tr>\n    )\n}\n\nexport default NFTItem;","import React, { useContext, useEffect, useState } from 'react';\nimport { Table } from 'reactstrap'\nimport { WalletContext } from '../../context/Wallet';\nimport NFTItem from './NFTItem';\n\nfunction NFTList() {\n\n    const wallet = useContext(WalletContext);\n    const { account, library, chainId } = wallet.context;\n\n    const [rows, setRows] = useState([\n    ]);\n\n    useEffect(() => {\n        updateRows();\n    }, [wallet.options])\n\n    const updateRows = async () => {\n        const optionItems = await Promise.all(wallet.options.nft.value.map(async (o) => {\n            return (\n            <NFTItem\n             key={o.index+'-'+o.provider}\n             id={o.index}\n             provider={o.provider}\n             tokenId={o.tokenId} />\n            )\n        }));\n\n        if(optionItems.length == 0)\n            optionItems.push(\n                <tr key=\"noOptionsNFT\" style={{textAlign:\"center\", width:'100%'}}>\n                    <th>\n                        <h6>No options found</h6>\n                    </th>\n                </tr>\n            )\n        setRows(optionItems)\n    }\n\n    return (<Table style={{color: \"white\", fontSize:'12px'}}>\n        <thead >\n            <tr>\n                <th>#</th>\n                <th>Type</th>\n                <th>Size</th>\n                <th>Strike</th>\n                <th>Maturity</th>\n                <th>Tokenize</th>\n            </tr>\n        </thead>\n        <tbody>\n            {rows}\n        </tbody>\n    </Table>)\n}\n\nexport default NFTList;","import React from 'react';\nimport {Card} from 'reactstrap'\nimport NFTList from './NFTList';\n\nfunction YourNFTOptions() {\n    return (\n        <Card body style={{padding:'15px'}}>\n            <h3>Your NFT options</h3>\n            <span>\n                Here you will find your NFT Hegic options.\n            </span>\n            <NFTList />\n        </Card>\n    )\n}\n\nexport default YourNFTOptions;","import React from 'react'\nimport { Container, Row, Col } from 'reactstrap'\nimport YourOptions from './yourOptions/index';\nimport YourNFTOptions from './yourNFTOptions/index';\n\n\n\nfunction Dashboard() {\n  // const wallet = useContext(WalletContext);\n  // const {account, library, chainId } = wallet.context;\n\n  // const HEGIC = useHegicContract();\n  // const ethOptions = useHegicETHOptionsContract();\n  // const wbtcOptions = useHegicWBTCOptionsContract();\n  // const WBTC = useWBTCContract();\n\n  return (\n    <Container style={{minHeight:'100%', paddingBottom:'60px', marginTop:'-58px', paddingTop:'58px', marginBottom:'-60px'}}>\n      <Row>\n        <Col md={{size: 6}} style={{padding:\"10px\"}}>\n          <YourOptions/>\n        </Col>\n        <Col md={{size: 6}} style={{padding:\"10px\"}}>\n          <YourNFTOptions/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Dashboard;","import React, { useEffect, useContext } from 'react'\n// import { useWeb3React } from '@web3-react/core'\nimport { Badge, Button, Col, Navbar} from 'reactstrap';\nimport { truncateAddress, truncateEtherValue, formatBN } from '../utils'\nimport { WalletContext } from '../context/Wallet'\nimport { useHegicETHOptionsContract, useHegicWBTCOptionsContract, useHegicETHOptionsNFTContract, useHegicWBTCOptionsNFTContract } from '../contracts/useContract';\n\nfunction Header(props) {\n    const wallet = useContext(WalletContext);\n    const { account, library, chainId, active } = wallet.context;\n\n    const nftETHOptions = useHegicETHOptionsNFTContract();\n    const nftWBTCOptions = useHegicWBTCOptionsNFTContract();\n    const ethOptions = useHegicETHOptionsContract();\n    const wbtcOptions = useHegicWBTCOptionsContract();\n\n    // const filter_myOptionsETH = {\n    //     address: nftETHOptions.address,\n    //     topics: [\n    //         id(\"Create(uint256,address,uint256,uint256)\"),\n    //         null,\n    //         account\n    //     ]\n    // }\n\n    // const filter_myOptionsWBTC = {\n    //     address: nftWBTCOptions.address,\n    //     topics: [\n    //         id(\"Create(uint256,address,uint256,uint256)\"),\n    //         null,\n    //         account\n    //     ]\n    // }\n\n    const updateMyOptions = async () => {\n        const myOptions = []\n        const optionProviders = [ethOptions, wbtcOptions];\n        let index = 0;\n        for(const op of optionProviders) {\n            const filter = op.filters.Create(null, account);\n            const events = await op.queryFilter(filter);\n            await Promise.all(events.map(async (x) => {\n                const option = await op.options(x.args.id);\n                if(option.holder == account)\n                    myOptions.push({index: x.args.id.toNumber(), provider: op.address , ...option})\n            }))\n        }\n\n        // for(const op of optionProviders) {\n        //     while(true){\n        //         try {\n        //             console.log(index);\n        //             const option = await op.options(index);\n        //             if(option.holder == account)\n        //                 myOptions.push({index, provider: op.address, ...option});\n        //             index++;\n        //         } catch (error) {\n        //             break;\n        //         }\n        //     }\n        //     index = 0;\n        // }\n        console.log(myOptions)\n        wallet.options.hegic.setValue(myOptions);\n    }\n\n    const updateMyNFTOptions = async () => {\n        const myNFTOptions = [];\n        const nftProviders = [nftETHOptions, nftWBTCOptions];\n        let index = 0;\n        for(const np of nftProviders){\n            const ownedTokens = await np.balanceOf(account).then(x => x.toNumber());\n            while(index < ownedTokens){\n                try {\n                    myNFTOptions.push({index, provider: np.address, tokenId: await np.tokenOfOwnerByIndex(account, index)});\n                    index++;\n                }catch(error){\n                    break;\n                }\n            }\n            index = 0;\n        }\n        console.log(myNFTOptions)\n        wallet.options.nft.setValue(myNFTOptions);\n    }\n\n    useEffect(() => {\n        if(!!account && !!library) {\n            library.getBalance(account).then((balance) => {\n                wallet.balances.ETHBalance.setValue(balance)\n            });\n\n            updateMyOptions();\n\n            updateMyNFTOptions();\n        }\n    }, [account, library, chainId])\n\n    const Wallet = () => {\n        return (\n            <>\n                <Col sm='0' md={{size:2, offset:5}} style={{display:'flex', justifyContent:'center'}}>\n                    <h3 style={{color:'#45fff4', zIndex:'99', fontFamily:'Jura', fontWeight:'bold'}}>HEGIC<span style={{color:\"white\"}}>:TOKENIZER</span></h3>\n                </Col>\n                <Col sm='12' md={{size:5, offset:0}} style={{display:'flex', justifyContent:'flex-end'}}>\n                { active ? (\n                    <div>\n                        <Badge color=\"primary\" style={{margin:\"2.5px\"}}>{truncateEtherValue(formatBN(wallet.balances.HEGICBalance.value),2)} HEGIC </Badge>\n                        <Badge color=\"secondary\" style={{margin:\"2.5px\"}}>{truncateEtherValue(formatBN(wallet.balances.ETHBalance.value),4)} ETH </Badge>\n                        <span style={{color:'#defefe', fontSize:'12px'}}>{truncateAddress(account)}</span>\n                        <Button color=\"link\" onClick={wallet.disconnect}>Disconnect</Button>\n                    </div>\n                ) : (\n                    <Button color=\"link\" onClick={wallet.connect}>Connect</Button>\n                )}\n                </Col>\n            </>\n        )\n    }\n    \n    return (\n            <Navbar style={{display:'flex', backgroundColor:'#19274d', borderBottom: '1px solid #45fff4'}}>\n                <Wallet />\n            </Navbar>\n    );\n}\n\nexport default Header;","import React, { useContext } from 'react';\nimport { Row, Container, Col, Button } from 'reactstrap';\nimport { WalletContext } from '../context/Wallet';\n\nfunction Intro(props) {\n    const connect = useContext(WalletContext).connect\n    return (\n    <Container>\n        <Row style={{marginTop:'10vh', minHeight:'50vh', zIndex:'-1', textAlign:'center'}}>\n            <Col sm='12' md={{ size: 6, offset: 3}}>\n                    <h1 style={{\n                        color:'#45fff4',\n                        fontFamily:'Jura',\n                        fontWeight:'bold',\n                        lineHeight:'125%',\n                        fontSize:'46px',\n                        textTransform:'uppercase'\n                        }}>Hegic Options: tokenized</h1>\n                    <div style={{color: '#defefe', fontFamily:'Exo 2', fontWeight:'500', lineHeight:'150%'}}>\n                    Hegic Protocol generates fees that are distributed among Hegic Staking Lot owners.\n                    Those staking lots are priced at 888,000 HEGIC, being simply unreachable for most of HEGIC holders.\n                    Thanks to <b>Staking Pools</b> you can own a share of a staking lot and earn fees that were reserved\n                    for whales only. \n                    </div>\n                    <div style={{marginTop:'25px', display:'flex', justifyContent:'center'}}>\n                    <Button style={{\n                        color:'#15203d',\n                        fontWeight:'bold',\n                        fontFamily:'Jura',\n                        letterSpacing:'.1em',\n                        background:'transparent',\n                        borderImageSource:'url(https://www.hegic.co/assets/img/button-primary.svg)', \n                        borderImageSlice:'20',\n                        borderStyle:'solid',\n                        boxSizing:'border-box',\n                        borderRadius:'2px',\n                        borderImageWidth:'50px'}} \n                        onClick={connect}>CONNECT WALLET</Button>\n                    </div>\n            </Col>\n        </Row>\n    </Container>);\n}\n\nexport default Intro;","import React from 'react';\nimport {Row, Col} from 'reactstrap'\nfunction Footer() {\n    return (\n        <div style={{height:'60px', position:'relative', color:'#defefe', textAlign:'center'}}>\n            <Row style={{display:'flex', justifyContent:'middle', flexDirection:'row', verticalAlign:'center'}}>\n                <Col md={{size:2, offset:3}}>\n                    <a href=\"#\">About</a>\n                </Col>\n                <Col md={{size:2, offset:2}}>\n                    <a href=\"https://twitter.com/jmonteer23\" target=\"_blank\">@jmonteer23</a>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Footer;","import { InjectedConnector } from '@web3-react/injected-connector'\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 3, 4, 5, 42] })\n","import React, { useState, useEffect } from 'react';\nimport Dashboard from './components/dashboard';\nimport Header from './components/header'\nimport Intro from './components/intro'\nimport Footer from './components/footer'\nimport { useWeb3React, Web3ReactProvider } from '@web3-react/core'\nimport { ethers } from 'ethers';\nimport { useEagerConnect, useInactiveListener } from './hooks'\nimport { injected } from './connectors';\nimport { WalletContext } from './context/Wallet';\nfunction getLibrary(provider, connector) {\n  return new ethers.providers.Web3Provider(provider)\n}\n\nfunction App() {\n  const [ETHBalance, setETHBalance] = useState(ethers.BigNumber.from('0'));\n  const [HEGICBalance, setHEGICBalance] = useState(ethers.BigNumber.from('0'));\n  const [HEGICAllowance, setHEGICAllowance] = useState(ethers.BigNumber.from('0'));\n  const [myOptions, setMyOptions] = useState([]);\n  const [myNFT, setMyNFT] = useState([])\n\n  const balances = {\n    ETHBalance: {value: ETHBalance, setValue: setETHBalance},\n    HEGICBalance: {value: HEGICBalance, setValue: setHEGICBalance},\n  }\n\n  const allowances = {\n    HEGICAllowance: {value: HEGICAllowance, setValue: setHEGICAllowance}\n  }\n\n  const options = {\n    hegic: { value: myOptions, setValue: setMyOptions },\n    nft: { value: myNFT, setValue: setMyNFT }\n  }\n\n  const context = useWeb3React()\n  const { connector, active, activate, deactivate } = context\n  \n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = useState()\n  useEffect(() => {\n  if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n  }\n  }, [activatingConnector, connector])\n  \n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n  \n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n  \n  function connect() {\n      setActivatingConnector(injected)\n      activate(injected)\n  }\n  \n  function disconnect() {\n  deactivate(injected)\n  }\n\n  return (\n  <WalletContext.Provider value={{context, connect, disconnect, balances, allowances, options}}>\n    <div style={{ background:'radial-gradient(68.28% 53.52% at 50% 50%, #1c2a4f 0%, #111b35 100%)'}}>\n        <div style={{backgroundImage:'url(https://www.hegic.co/assets/img/background-image.svg)', height:'100vh'}}>\n            <Header />\n            { active ? (\n              <Dashboard />\n            ) : (\n              <Intro />\n            )}\n            {/* <Stats /> */}\n            <Footer />\n        </div>\n    </div>\n  </WalletContext.Provider>\n  );\n}\n\n\nexport default () => (\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <App />\n  </Web3ReactProvider>\n)\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { injected } from './connectors'\n\nexport function useEagerConnect() {\n    const { activate, active } = useWeb3React()\n  \n    const [tried, setTried] = useState(false)\n  \n    useEffect(() => {\n      injected.isAuthorized().then((isAuthorized) => {\n        if (isAuthorized) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true)\n          })\n        } else {\n          setTried(true)\n        }\n      })\n    }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n  \n    // if the connection worked, wait until we get confirmation of that to flip the flag\n    useEffect(() => {\n      if (!tried && active) {\n        setTried(true)\n      }\n    }, [tried, active])\n  \n    return tried\n  }\n  \n  export function useInactiveListener(suppress = false) {\n    const { active, error, activate } = useWeb3React()\n  \n    useEffect(() => {\n      const { ethereum } = window\n      if (ethereum && ethereum.on && !active && !error && !suppress) {\n        const handleConnect = () => {\n          console.log(\"Handling 'connect' event\")\n          activate(injected)\n        }\n        const handleChainChanged = (chainId) => {\n          console.log(\"Handling 'chainChanged' event with payload\", chainId)\n          activate(injected)\n        }\n        const handleAccountsChanged = (accounts) => {\n          console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n          if (accounts.length > 0) {\n            activate(injected)\n          }\n        }\n        const handleNetworkChanged = (networkId) => {\n          console.log(\"Handling 'networkChanged' event with payload\", networkId)\n          activate(injected)\n        }\n  \n        ethereum.on('connect', handleConnect)\n        ethereum.on('chainChanged', handleChainChanged)\n        ethereum.on('accountsChanged', handleAccountsChanged)\n        ethereum.on('networkChanged', handleNetworkChanged)\n  \n        return () => {\n          if (ethereum.removeListener) {\n            ethereum.removeListener('connect', handleConnect)\n            ethereum.removeListener('chainChanged', handleChainChanged)\n            ethereum.removeListener('accountsChanged', handleAccountsChanged)\n            ethereum.removeListener('networkChanged', handleNetworkChanged)\n          }\n        }\n      }\n    }, [active, error, suppress, activate])\n  }\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './scss/custom.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}