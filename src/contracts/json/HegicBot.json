{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IHegicNFT",
          "name": "_ethNft",
          "type": "address"
        },
        {
          "internalType": "contract IPriceProvider",
          "name": "_priceProvider",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DustSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "GovernorAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "keeper",
          "type": "address"
        }
      ],
      "name": "KeeperSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pendingGovernor",
          "type": "address"
        }
      ],
      "name": "PendingGovernorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trackedTokenId",
          "type": "uint256"
        }
      ],
      "name": "TokenTracked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trackedTokenId",
          "type": "uint256"
        }
      ],
      "name": "TokenUntracked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trackedTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "grossProfit",
          "type": "uint256"
        }
      ],
      "name": "TrackedTokenExercised",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "workFee",
          "type": "uint256"
        }
      ],
      "name": "WorkFeeSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ETH_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_MAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethNft",
      "outputs": [
        {
          "internalType": "contract IHegicNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "trackedTokenId",
          "type": "uint256"
        }
      ],
      "name": "exercisable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "trackedTokenId",
          "type": "uint256"
        }
      ],
      "name": "exercise",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keeper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceProvider",
      "outputs": [
        {
          "internalType": "contract IPriceProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sendDust",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "setKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pendingGovernor",
          "type": "address"
        }
      ],
      "name": "setPendingGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_workFee",
          "type": "uint256"
        }
      ],
      "name": "setWorkFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceTarget",
          "type": "uint256"
        }
      ],
      "name": "track",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "trackedTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trackedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceTarget",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "trackedTokenId",
          "type": "uint256"
        }
      ],
      "name": "untrack",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "workFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/juanmontero/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/introspection/IERC165.sol",
    "1": "/Users/juanmontero/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/SafeMath.sol",
    "10": "contracts/Governable.sol",
    "11": "contracts/HegicBot.sol",
    "12": "interfaces/ICollectableDust.sol",
    "13": "interfaces/IGovernable.sol",
    "14": "interfaces/IHegic.sol",
    "15": "interfaces/IHegicBot.sol",
    "16": "interfaces/IHegicNFT.sol",
    "17": "interfaces/IPriceProvider.sol",
    "3": "/Users/juanmontero/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC721/ERC721Holder.sol",
    "4": "/Users/juanmontero/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC721/IERC721.sol",
    "5": "/Users/juanmontero/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC721/IERC721Receiver.sol",
    "6": "/Users/juanmontero/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/utils/Address.sol",
    "7": "/Users/juanmontero/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/utils/Counters.sol",
    "8": "/Users/juanmontero/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/utils/EnumerableSet.sol",
    "9": "contracts/CollectableDust.sol"
  },
  "ast": {
    "absolutePath": "contracts/HegicBot.sol",
    "exportedSymbols": {
      "HegicBot": [
        467
      ]
    },
    "id": 468,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:11"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:33:11"
      },
      {
        "absolutePath": "/Users/juanmontero/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV3/contracts/math/SafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 664,
        "src": "95:53:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/juanmontero/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/utils/Address.sol",
        "file": "@openzeppelinV3/contracts/utils/Address.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 895,
        "src": "149:53:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/juanmontero/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC721/ERC721Holder.sol",
        "file": "@openzeppelinV3/contracts/token/ERC721/ERC721Holder.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 691,
        "src": "203:65:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/juanmontero/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/utils/Counters.sol",
        "file": "@openzeppelinV3/contracts/utils/Counters.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 945,
        "src": "269:54:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IHegicNFT.sol",
        "file": "../interfaces/IHegicNFT.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 1273,
        "src": "325:37:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IHegicBot.sol",
        "file": "../interfaces/IHegicBot.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 1235,
        "src": "363:37:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IPriceProvider.sol",
        "file": "../interfaces/IPriceProvider.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 1290,
        "src": "401:42:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Governable.sol",
        "file": "./Governable.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 1160,
        "src": "444:26:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CollectableDust.sol",
        "file": "./CollectableDust.sol",
        "id": 11,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 1064,
        "src": "471:31:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "IHegicBot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1234,
              "src": "525:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IHegicBot_$1234",
                "typeString": "contract IHegicBot"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "525:9:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "Governable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1159,
              "src": "536:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Governable_$1159",
                "typeString": "contract Governable"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "536:10:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "CollectableDust",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1063,
              "src": "548:15:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CollectableDust_$1063",
                "typeString": "contract CollectableDust"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "548:15:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18,
              "name": "ERC721Holder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 690,
              "src": "565:12:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Holder_$690",
                "typeString": "contract ERC721Holder"
              }
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "565:12:11"
          }
        ],
        "contractDependencies": [
          690,
          1063,
          1159,
          1234,
          1307,
          1800,
          1817
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 467,
        "linearizedBaseContracts": [
          467,
          690,
          1307,
          1063,
          1800,
          1159,
          1817,
          1234
        ],
        "name": "HegicBot",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "contractScope": null,
              "id": 20,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 894,
              "src": "590:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$894",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "584:26:11",
            "typeName": {
              "id": 21,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "602:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 25,
            "libraryName": {
              "contractScope": null,
              "id": 23,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 663,
              "src": "621:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$663",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "615:27:11",
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "634:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 28,
            "libraryName": {
              "contractScope": null,
              "id": 26,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 944,
              "src": "653:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$944",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "647:36:11",
            "typeName": {
              "contractScope": null,
              "id": 27,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 904,
              "src": "666:16:11",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$904_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "c2624e1e",
            "id": 31,
            "mutability": "mutable",
            "name": "FEE_MAX",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "689:30:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "689:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "714:5:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3a5017b4",
            "id": 34,
            "mutability": "mutable",
            "name": "workFee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "725:28:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "725:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030",
              "id": 33,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "750:3:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8021a395",
            "id": 36,
            "mutability": "mutable",
            "name": "ethNft",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "760:23:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IHegicNFT_$1272",
              "typeString": "contract IHegicNFT"
            },
            "typeName": {
              "contractScope": null,
              "id": 35,
              "name": "IHegicNFT",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1272,
              "src": "760:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IHegicNFT_$1272",
                "typeString": "contract IHegicNFT"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b888879e",
            "id": 38,
            "mutability": "mutable",
            "name": "priceProvider",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "789:35:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPriceProvider_$1289",
              "typeString": "contract IPriceProvider"
            },
            "typeName": {
              "contractScope": null,
              "id": 37,
              "name": "IPriceProvider",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1289,
              "src": "789:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPriceProvider_$1289",
                "typeString": "contract IPriceProvider"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aced1661",
            "id": 40,
            "mutability": "mutable",
            "name": "keeper",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "830:21:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "830:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "_trackedTokenIds",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "858:41:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$904_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 41,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 904,
              "src": "858:16:11",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$904_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "8305368a",
            "id": 46,
            "mutability": "mutable",
            "name": "trackedTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "905:53:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrackedToken_$1169_storage_$",
              "typeString": "mapping(uint256 => struct TrackedToken)"
            },
            "typeName": {
              "id": 45,
              "keyType": {
                "id": 43,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "913:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "905:32:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrackedToken_$1169_storage_$",
                "typeString": "mapping(uint256 => struct TrackedToken)"
              },
              "valueType": {
                "contractScope": null,
                "id": 44,
                "name": "TrackedToken",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1169,
                "src": "924:12:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TrackedToken_$1169_storage_ptr",
                  "typeString": "struct TrackedToken"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "1075:73:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "ethNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1085:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IHegicNFT_$1272",
                        "typeString": "contract IHegicNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "_ethNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1094:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IHegicNFT_$1272",
                        "typeString": "contract IHegicNFT"
                      }
                    },
                    "src": "1085:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHegicNFT_$1272",
                      "typeString": "contract IHegicNFT"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:16:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "priceProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1111:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPriceProvider_$1289",
                        "typeString": "contract IPriceProvider"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 64,
                      "name": "_priceProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1127:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPriceProvider_$1289",
                        "typeString": "contract IPriceProvider"
                      }
                    },
                    "src": "1111:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceProvider_$1289",
                      "typeString": "contract IPriceProvider"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:30:11"
                }
              ]
            },
            "documentation": null,
            "id": 68,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 53,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1045:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1045:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 55,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 52,
                  "name": "Governable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1159,
                  "src": "1034:10:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Governable_$1159_$",
                    "typeString": "type(contract Governable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1034:22:11"
              },
              {
                "arguments": [],
                "id": 57,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 56,
                  "name": "CollectableDust",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1063,
                  "src": "1057:15:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CollectableDust_$1063_$",
                    "typeString": "type(contract CollectableDust)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1057:17:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_ethNft",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 68,
                  "src": "977:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHegicNFT_$1272",
                    "typeString": "contract IHegicNFT"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 47,
                    "name": "IHegicNFT",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1272,
                    "src": "977:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHegicNFT_$1272",
                      "typeString": "contract IHegicNFT"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "_priceProvider",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 68,
                  "src": "996:29:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPriceProvider_$1289",
                    "typeString": "contract IPriceProvider"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 49,
                    "name": "IPriceProvider",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1289,
                    "src": "996:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceProvider_$1289",
                      "typeString": "contract IPriceProvider"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "976:50:11"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:0:11"
            },
            "scope": 467,
            "src": "965:183:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1200
            ],
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1258:424:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "1296:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "ethNft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1276:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHegicNFT_$1272",
                              "typeString": "contract IHegicNFT"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValidToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1257,
                          "src": "1276:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1276:28:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e496420696e76616c6964",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1306:17:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b69c39d7972cd11c1d6d3c647b38c7da4499fe99e6e05e532f85eb14f109fa5",
                          "typeString": "literal_string \"tokenId invalid\""
                        },
                        "value": "tokenId invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b69c39d7972cd11c1d6d3c647b38c7da4499fe99e6e05e532f85eb14f109fa5",
                          "typeString": "literal_string \"tokenId invalid\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1268:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:56:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:56:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 89,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1359:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1359:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1379:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HegicBot_$467",
                              "typeString": "contract HegicBot"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HegicBot_$467",
                              "typeString": "contract HegicBot"
                            }
                          ],
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1371:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1371:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1371:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1386:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "ethNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1335:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHegicNFT_$1272",
                          "typeString": "contract IHegicNFT"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1876,
                      "src": "1335:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1335:59:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:59:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "_trackedTokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1405:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$904_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 927,
                      "src": "1405:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$904_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$904_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:28:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "trackedTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "1443:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 104,
                          "name": "_trackedTokenIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "1460:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$904_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 915,
                        "src": "1460:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$904_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$904_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1460:26:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1443:43:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1443:43:11"
                },
                {
                  "assignments": [
                    110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 110,
                      "mutability": "mutable",
                      "name": "trackedToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 128,
                      "src": "1496:32:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                        "typeString": "struct TrackedToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 109,
                        "name": "TrackedToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1169,
                        "src": "1496:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrackedToken_$1169_storage_ptr",
                          "typeString": "struct TrackedToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 117,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 112,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1544:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1544:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 114,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1556:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 115,
                        "name": "priceTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1565:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 111,
                      "name": "TrackedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1169,
                      "src": "1531:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TrackedToken_$1169_storage_ptr_$",
                        "typeString": "type(struct TrackedToken storage pointer)"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                      "typeString": "struct TrackedToken memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1496:81:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 118,
                        "name": "trackedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1587:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrackedToken_$1169_storage_$",
                          "typeString": "mapping(uint256 => struct TrackedToken storage ref)"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "trackedTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "1601:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1587:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrackedToken_$1169_storage",
                        "typeString": "struct TrackedToken storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "trackedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "1619:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                        "typeString": "struct TrackedToken memory"
                      }
                    },
                    "src": "1587:44:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrackedToken_$1169_storage",
                      "typeString": "struct TrackedToken storage ref"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:44:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "trackedTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "1660:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 124,
                      "name": "TokenTracked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1173,
                      "src": "1647:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "EmitStatement",
                  "src": "1642:33:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2bdd34e3",
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "track",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 74,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1216:8:11"
            },
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 129,
                  "src": "1169:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "priceTarget",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 129,
                  "src": "1186:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1168:38:11"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "trackedTokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 129,
                  "src": "1234:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1233:24:11"
            },
            "scope": 467,
            "src": "1154:528:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1207
            ],
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1762:338:11",
              "statements": [
                {
                  "assignments": [
                    138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "mutability": "mutable",
                      "name": "trackedToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 176,
                      "src": "1772:32:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                        "typeString": "struct TrackedToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 137,
                        "name": "TrackedToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1169,
                        "src": "1772:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrackedToken_$1169_storage_ptr",
                          "typeString": "struct TrackedToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 142,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 139,
                      "name": "trackedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1807:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrackedToken_$1169_storage_$",
                        "typeString": "mapping(uint256 => struct TrackedToken storage ref)"
                      }
                    },
                    "id": 141,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 140,
                      "name": "trackedTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "1821:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1807:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrackedToken_$1169_storage",
                      "typeString": "struct TrackedToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1772:64:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 144,
                            "name": "trackedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "1854:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                              "typeString": "struct TrackedToken memory"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1164,
                          "src": "1854:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 146,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1876:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1876:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1854:32:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "216f776e6572",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1888:8:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f90560991e3f715cdce86f88841433ea2f749a73c924ce7483b146bbc74f1efa",
                          "typeString": "literal_string \"!owner\""
                        },
                        "value": "!owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f90560991e3f715cdce86f88841433ea2f749a73c924ce7483b146bbc74f1efa",
                          "typeString": "literal_string \"!owner\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1846:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1846:51:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1846:51:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1940:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HegicBot_$467",
                              "typeString": "contract HegicBot"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HegicBot_$467",
                              "typeString": "contract HegicBot"
                            }
                          ],
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1932:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 155,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1932:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1932:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 159,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1947:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1947:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 161,
                          "name": "trackedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "1959:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                            "typeString": "struct TrackedToken memory"
                          }
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1166,
                        "src": "1959:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "ethNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1908:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHegicNFT_$1272",
                          "typeString": "contract IHegicNFT"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1876,
                      "src": "1908:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:72:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:72:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1990:36:11",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "trackedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1997:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrackedToken_$1169_storage_$",
                          "typeString": "mapping(uint256 => struct TrackedToken storage ref)"
                        }
                      },
                      "id": 167,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "trackedTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "2011:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1997:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrackedToken_$1169_storage",
                        "typeString": "struct TrackedToken storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1990:36:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "trackedTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "2056:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 170,
                      "name": "TokenUntracked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1177,
                      "src": "2041:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2041:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "EmitStatement",
                  "src": "2036:35:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2089:4:11",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 136,
                  "id": 175,
                  "nodeType": "Return",
                  "src": "2082:11:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0ab174a3",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "untrack",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 133,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1738:8:11"
            },
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "trackedTokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "1705:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1704:24:11"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "1756:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1756:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1755:6:11"
            },
            "scope": 467,
            "src": "1688:412:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1214
            ],
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "2189:764:11",
              "statements": [
                {
                  "assignments": [
                    186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 186,
                      "mutability": "mutable",
                      "name": "trackedToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 262,
                      "src": "2199:32:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                        "typeString": "struct TrackedToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 185,
                        "name": "TrackedToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1169,
                        "src": "2199:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrackedToken_$1169_storage_ptr",
                          "typeString": "struct TrackedToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 187,
                      "name": "trackedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2234:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrackedToken_$1169_storage_$",
                        "typeString": "mapping(uint256 => struct TrackedToken storage ref)"
                      }
                    },
                    "id": 189,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 188,
                      "name": "trackedTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2248:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2234:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrackedToken_$1169_storage",
                      "typeString": "struct TrackedToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2199:64:11"
                },
                {
                  "assignments": [
                    192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 192,
                      "mutability": "mutable",
                      "name": "option",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 262,
                      "src": "2273:20:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Option_$1962_memory_ptr",
                        "typeString": "struct Option"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 191,
                        "name": "Option",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1962,
                        "src": "2273:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Option_$1962_storage_ptr",
                          "typeString": "struct Option"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 198,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 195,
                          "name": "trackedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "2329:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                            "typeString": "struct TrackedToken memory"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1166,
                        "src": "2329:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 193,
                        "name": "ethNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2296:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHegicNFT_$1272",
                          "typeString": "contract IHegicNFT"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUnderlyingOptionParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1264,
                      "src": "2296:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Option_$1962_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct Option memory)"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2296:54:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Option_$1962_memory_ptr",
                      "typeString": "struct Option memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2273:77:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 199,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "2365:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Option_$1962_memory_ptr",
                            "typeString": "struct Option memory"
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1959,
                        "src": "2365:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 201,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2385:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2385:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2365:35:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_State_$1941",
                        "typeString": "enum State"
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 204,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "2404:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Option_$1962_memory_ptr",
                            "typeString": "struct Option memory"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1947,
                        "src": "2404:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1941",
                          "typeString": "enum State"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 206,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1941,
                          "src": "2420:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$1941_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2420:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1941",
                          "typeString": "enum State"
                        }
                      },
                      "src": "2404:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2365:67:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 213,
                  "nodeType": "IfStatement",
                  "src": "2361:110:11",
                  "trueBody": {
                    "id": 212,
                    "nodeType": "Block",
                    "src": "2434:37:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2455:5:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 184,
                        "id": 211,
                        "nodeType": "Return",
                        "src": "2448:12:11"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 214,
                        "name": "trackedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "2485:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                          "typeString": "struct TrackedToken memory"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1164,
                      "src": "2485:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 216,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2507:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2507:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2485:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 222,
                  "nodeType": "IfStatement",
                  "src": "2481:74:11",
                  "trueBody": {
                    "id": 221,
                    "nodeType": "Block",
                    "src": "2519:36:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2540:4:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 184,
                        "id": 220,
                        "nodeType": "Return",
                        "src": "2533:11:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    null,
                    224,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 224,
                      "mutability": "mutable",
                      "name": "latestPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 262,
                      "src": "2568:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 223,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2568:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 228,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "priceProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2596:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPriceProvider_$1289",
                          "typeString": "contract IPriceProvider"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1288,
                      "src": "2596:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2596:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2565:62:11"
                },
                {
                  "assignments": [
                    230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 230,
                      "mutability": "mutable",
                      "name": "currentPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 262,
                      "src": "2637:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 229,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2637:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 235,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 233,
                        "name": "latestPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "2668:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2660:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 231,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2660:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2660:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2637:43:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_OptionType_$1945",
                      "typeString": "enum OptionType"
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "option",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "2695:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Option_$1962_memory_ptr",
                          "typeString": "struct Option memory"
                        }
                      },
                      "id": 237,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "optionType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1961,
                      "src": "2695:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OptionType_$1945",
                        "typeString": "enum OptionType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 238,
                        "name": "OptionType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "2716:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OptionType_$1945_$",
                          "typeString": "type(enum OptionType)"
                        }
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2716:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OptionType_$1945",
                        "typeString": "enum OptionType"
                      }
                    },
                    "src": "2695:36:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_OptionType_$1945",
                        "typeString": "enum OptionType"
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 247,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "2815:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Option_$1962_memory_ptr",
                            "typeString": "struct Option memory"
                          }
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "optionType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1961,
                        "src": "2815:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OptionType_$1945",
                          "typeString": "enum OptionType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 249,
                          "name": "OptionType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1945,
                          "src": "2836:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_OptionType_$1945_$",
                            "typeString": "type(enum OptionType)"
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Put",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2836:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OptionType_$1945",
                          "typeString": "enum OptionType"
                        }
                      },
                      "src": "2815:35:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 258,
                    "nodeType": "IfStatement",
                    "src": "2811:113:11",
                    "trueBody": {
                      "id": 257,
                      "nodeType": "Block",
                      "src": "2852:72:11",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 252,
                              "name": "currentPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 230,
                              "src": "2873:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 253,
                                "name": "trackedToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 186,
                                "src": "2889:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                                  "typeString": "struct TrackedToken memory"
                                }
                              },
                              "id": 254,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "priceTarget",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1168,
                              "src": "2889:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2873:40:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 184,
                          "id": 256,
                          "nodeType": "Return",
                          "src": "2866:47:11"
                        }
                      ]
                    }
                  },
                  "id": 259,
                  "nodeType": "IfStatement",
                  "src": "2691:233:11",
                  "trueBody": {
                    "id": 246,
                    "nodeType": "Block",
                    "src": "2733:72:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 241,
                            "name": "currentPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 230,
                            "src": "2754:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 242,
                              "name": "trackedToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 186,
                              "src": "2770:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                                "typeString": "struct TrackedToken memory"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "priceTarget",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1168,
                            "src": "2770:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2754:40:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 184,
                        "id": 245,
                        "nodeType": "Return",
                        "src": "2747:47:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2941:5:11",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 184,
                  "id": 261,
                  "nodeType": "Return",
                  "src": "2934:12:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9915feef",
            "id": 263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exercisable",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 181,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2165:8:11"
            },
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "trackedTokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 263,
                  "src": "2127:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2126:24:11"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 263,
                  "src": "2183:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2183:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2182:6:11"
            },
            "scope": 467,
            "src": "2106:847:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1223
            ],
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "3046:825:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 276,
                            "name": "trackedTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "3081:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 274,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3064:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HegicBot_$467",
                              "typeString": "contract HegicBot"
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exercisable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 263,
                          "src": "3064:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3064:32:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "747261636b6564546f6b656e4964206e6f74206578657263697361626c65",
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3098:32:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec2553d89fd9fb7d3ba5c84a9b16975f0096235ff7142cbcc64225010f3bc4f3",
                          "typeString": "literal_string \"trackedTokenId not exercisable\""
                        },
                        "value": "trackedTokenId not exercisable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec2553d89fd9fb7d3ba5c84a9b16975f0096235ff7142cbcc64225010f3bc4f3",
                          "typeString": "literal_string \"trackedTokenId not exercisable\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3056:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3056:75:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "3056:75:11"
                },
                {
                  "assignments": [
                    282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 282,
                      "mutability": "mutable",
                      "name": "trackedToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 375,
                      "src": "3142:32:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                        "typeString": "struct TrackedToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 281,
                        "name": "TrackedToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1169,
                        "src": "3142:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrackedToken_$1169_storage_ptr",
                          "typeString": "struct TrackedToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 286,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 283,
                      "name": "trackedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "3177:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrackedToken_$1169_storage_$",
                        "typeString": "mapping(uint256 => struct TrackedToken storage ref)"
                      }
                    },
                    "id": 285,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 284,
                      "name": "trackedTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "3191:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3177:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrackedToken_$1169_storage",
                      "typeString": "struct TrackedToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3142:64:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 290,
                          "name": "trackedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "3239:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                            "typeString": "struct TrackedToken memory"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1166,
                        "src": "3239:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 287,
                        "name": "ethNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3217:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHegicNFT_$1272",
                          "typeString": "contract IHegicNFT"
                        }
                      },
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exerciseOption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1271,
                      "src": "3217:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3217:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "3217:43:11"
                },
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "mutability": "mutable",
                      "name": "grossProfit",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 375,
                      "src": "3271:19:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3271:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 301,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 298,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "3301:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HegicBot_$467",
                            "typeString": "contract HegicBot"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_HegicBot_$467",
                            "typeString": "contract HegicBot"
                          }
                        ],
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3293:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3293:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3293:13:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3293:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3271:43:11"
                },
                {
                  "assignments": [
                    303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 303,
                      "mutability": "mutable",
                      "name": "ownerFee",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 375,
                      "src": "3324:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 302,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3324:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 311,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 309,
                        "name": "FEE_MAX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "3372:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 306,
                            "name": "workFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "3359:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 304,
                            "name": "grossProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "3343:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 576,
                          "src": "3343:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3343:24:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 593,
                      "src": "3343:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3343:37:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3324:56:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 313,
                          "name": "ownerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "3398:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3409:1:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3398:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "70726f6669743d3d30",
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3412:11:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce03fd980aac82c8398d63cca2d41107dbf0232df2ee6fe9141c294131a14f4d",
                          "typeString": "literal_string \"profit==0\""
                        },
                        "value": "profit==0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce03fd980aac82c8398d63cca2d41107dbf0232df2ee6fe9141c294131a14f4d",
                          "typeString": "literal_string \"profit==0\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3390:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3390:34:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "3390:34:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 324,
                        "name": "ownerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "3462:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 321,
                            "name": "governor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "3443:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3435:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 319,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3435:8:11",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3435:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3435:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:36:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "3435:36:11"
                },
                {
                  "assignments": [
                    328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 328,
                      "mutability": "mutable",
                      "name": "netProfit",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 375,
                      "src": "3482:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 327,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3482:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 334,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 331,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "3510:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HegicBot_$467",
                            "typeString": "contract HegicBot"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_HegicBot_$467",
                            "typeString": "contract HegicBot"
                          }
                        ],
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3502:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3502:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3502:13:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3502:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3482:41:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 335,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3537:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3537:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 337,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "3551:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3537:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 357,
                    "nodeType": "Block",
                    "src": "3625:72:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 354,
                              "name": "netProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 328,
                              "src": "3676:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 350,
                                    "name": "trackedToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 282,
                                    "src": "3647:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                                      "typeString": "struct TrackedToken memory"
                                    }
                                  },
                                  "id": 351,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1164,
                                  "src": "3647:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3639:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 348,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3639:8:11",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3639:27:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3639:36:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3639:47:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 356,
                        "nodeType": "ExpressionStatement",
                        "src": "3639:47:11"
                      }
                    ]
                  },
                  "id": 358,
                  "nodeType": "IfStatement",
                  "src": "3533:164:11",
                  "trueBody": {
                    "id": 347,
                    "nodeType": "Block",
                    "src": "3559:60:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 344,
                              "name": "netProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 328,
                              "src": "3598:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 341,
                                  "name": "keeper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "3581:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3573:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 339,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3573:8:11",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3573:15:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3573:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3573:35:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 346,
                        "nodeType": "ExpressionStatement",
                        "src": "3573:35:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3707:36:11",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 359,
                        "name": "trackedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "3714:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrackedToken_$1169_storage_$",
                          "typeString": "mapping(uint256 => struct TrackedToken storage ref)"
                        }
                      },
                      "id": 361,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 360,
                        "name": "trackedTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "3728:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3714:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrackedToken_$1169_storage",
                        "typeString": "struct TrackedToken storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "3707:36:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 365,
                          "name": "trackedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "3781:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                            "typeString": "struct TrackedToken memory"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1166,
                        "src": "3781:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 367,
                        "name": "grossProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 295,
                        "src": "3803:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 364,
                      "name": "TrackedTokenExercised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "3759:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3759:56:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "EmitStatement",
                  "src": "3754:61:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 370,
                          "name": "trackedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "3834:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrackedToken_$1169_memory_ptr",
                            "typeString": "struct TrackedToken memory"
                          }
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1164,
                        "src": "3834:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 372,
                        "name": "netProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "3854:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 373,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3833:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "functionReturnParameters": 272,
                  "id": 374,
                  "nodeType": "Return",
                  "src": "3826:38:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b07f0a41",
            "id": 376,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exercise",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 267,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3010:8:11"
            },
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "trackedTokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 376,
                  "src": "2977:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2977:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2976:24:11"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 376,
                  "src": "3028:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3028:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 376,
                  "src": "3037:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3037:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3027:18:11"
            },
            "scope": 467,
            "src": "2959:912:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1228
            ],
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "3946:122:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 385,
                            "name": "_workFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "3964:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3975:1:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3964:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 388,
                            "name": "_workFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "3980:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130303030",
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3992:5:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "3980:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3964:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3956:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3956:42:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "3956:42:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 394,
                      "name": "workFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "4008:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 395,
                      "name": "_workFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "4018:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4008:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "4008:18:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 399,
                        "name": "_workFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "4052:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 398,
                      "name": "WorkFeeSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1187,
                      "src": "4041:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4041:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "EmitStatement",
                  "src": "4036:25:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "eb907b22",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 382,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 381,
                  "name": "onlyGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1146,
                  "src": "3933:12:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3933:12:11"
              }
            ],
            "name": "setWorkFee",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 380,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3924:8:11"
            },
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "_workFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 403,
                  "src": "3897:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3897:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3896:18:11"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3946:0:11"
            },
            "scope": 467,
            "src": "3877:191:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1233
            ],
            "body": {
              "id": 419,
              "nodeType": "Block",
              "src": "4141:66:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 411,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "4151:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 412,
                      "name": "_keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "4160:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4151:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "4151:16:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "_keeper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "4192:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 415,
                      "name": "KeeperSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1191,
                      "src": "4182:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4182:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "EmitStatement",
                  "src": "4177:23:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "748747e6",
            "id": 420,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 409,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 408,
                  "name": "onlyGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1146,
                  "src": "4128:12:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4128:12:11"
              }
            ],
            "name": "setKeeper",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 407,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4119:8:11"
            },
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_keeper",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 420,
                  "src": "4093:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4093:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4092:17:11"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4141:0:11"
            },
            "scope": 467,
            "src": "4074:133:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1813
            ],
            "body": {
              "id": 432,
              "nodeType": "Block",
              "src": "4316:54:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "_pendingGovernor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "4346:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 428,
                      "name": "_setPendingGovernor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1116,
                      "src": "4326:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4326:37:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "4326:37:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f235757f",
            "id": 433,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 426,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 425,
                  "name": "onlyGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1146,
                  "src": "4303:12:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4303:12:11"
              }
            ],
            "name": "setPendingGovernor",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 424,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4294:8:11"
            },
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "_pendingGovernor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 433,
                  "src": "4259:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4259:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4258:26:11"
            },
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4316:0:11"
            },
            "scope": 467,
            "src": "4231:139:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1816
            ],
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "4440:34:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 439,
                      "name": "_acceptGovernor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1134,
                      "src": "4450:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4450:17:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "4450:17:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e58bb639",
            "id": 443,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 437,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 436,
                  "name": "onlyPendingGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1158,
                  "src": "4420:19:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4420:19:11"
              }
            ],
            "name": "acceptGovernor",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 435,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4411:8:11"
            },
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4399:2:11"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4440:0:11"
            },
            "scope": 467,
            "src": "4376:98:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1799
            ],
            "body": {
              "id": 461,
              "nodeType": "Block",
              "src": "4629:48:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "4649:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 457,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 447,
                        "src": "4654:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 458,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "4662:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 455,
                      "name": "_sendDust",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1062,
                      "src": "4639:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4639:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "4639:31:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2db8c129",
            "id": 462,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 453,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 452,
                  "name": "onlyGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1146,
                  "src": "4616:12:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4616:12:11"
              }
            ],
            "name": "sendDust",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 451,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4607:8:11"
            },
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 462,
                  "src": "4531:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4531:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 462,
                  "src": "4552:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4552:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 462,
                  "src": "4576:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4576:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4521:76:11"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4629:0:11"
            },
            "scope": 467,
            "src": "4504:173:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "4710:2:11",
              "statements": []
            },
            "documentation": null,
            "id": 466,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4690:2:11"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4710:0:11"
            },
            "scope": 467,
            "src": "4683:29:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 468,
        "src": "504:4210:11"
      }
    ],
    "src": "36:4679:11"
  },
  "bytecode": "608060405261271060045560646005553480156200001c57600080fd5b5060405162001918380380620019188339810160408190526200003f91620000aa565b3380620000695760405162461bcd60e51b81526004016200006090620000e8565b60405180910390fd5b600080546001600160a01b03199081166001600160a01b03938416179091556006805482169483169490941790935560078054909316911617905562000150565b60008060408385031215620000bd578182fd5b8251620000ca8162000137565b6020840151909250620000dd8162000137565b809150509250929050565b6020808252602f908201527f676f7665726e61626c653a3a676f7665726e6f722d73686f756c642d6e6f742d60408201526e62652d7a65726f2d6164647265737360881b606082015260800190565b6001600160a01b03811681146200014d57600080fd5b50565b6117b880620001606000396000f3fe6080604052600436106101185760003560e01c80639915feef116100a0578063c2624e1e11610064578063c2624e1e146102fe578063e3056a3414610313578063e58bb63914610328578063eb907b221461033d578063f235757f1461035d5761011f565b80639915feef14610271578063a734f06e14610291578063aced1661146102a6578063b07f0a41146102bb578063b888879e146102e95761011f565b80632db8c129116100e75780632db8c129146101d65780633a5017b4146101f8578063748747e61461020d5780638021a3951461022d5780638305368a146102425761011f565b80630ab174a3146101245780630c340a241461015a578063150b7a021461017c5780632bdd34e3146101a95761011f565b3661011f57005b600080fd5b34801561013057600080fd5b5061014461013f366004611350565b61037d565b6040516101519190611464565b60405180910390f35b34801561016657600080fd5b5061016f6104c5565b60405161015191906113f2565b34801561018857600080fd5b5061019c6101973660046111ed565b6104d4565b604051610151919061146f565b3480156101b557600080fd5b506101c96101c4366004611380565b6104e4565b604051610151919061172f565b3480156101e257600080fd5b506101f66101f13660046111ad565b610698565b005b34801561020457600080fd5b506101c96106d2565b34801561021957600080fd5b506101f6610228366004611191565b6106d8565b34801561023957600080fd5b5061016f610758565b34801561024e57600080fd5b5061026261025d366004611350565b610767565b60405161015193929190611443565b34801561027d57600080fd5b5061014461028c366004611350565b610792565b34801561029d57600080fd5b5061016f6109a4565b3480156102b257600080fd5b5061016f6109bc565b3480156102c757600080fd5b506102db6102d6366004611350565b6109cb565b60405161015192919061142a565b3480156102f557600080fd5b5061016f610caa565b34801561030a57600080fd5b506101c9610cb9565b34801561031f57600080fd5b5061016f610cbf565b34801561033457600080fd5b506101f6610cce565b34801561034957600080fd5b506101f6610358366004611350565b610d02565b34801561036957600080fd5b506101f6610378366004611191565b610d7c565b60006103876110da565b506000828152600a6020908152604091829020825160608101845281546001600160a01b03168082526001830154938201939093526002909101549281019290925233146103f05760405162461bcd60e51b81526004016103e79061170f565b60405180910390fd5b6006546020820151604051632142170760e11b81526001600160a01b03909216916342842e0e916104279130913391600401611406565b600060405180830381600087803b15801561044157600080fd5b505af1158015610455573d6000803e3d6000fd5b5050506000848152600a602052604080822080546001600160a01b03191681556001810183905560020191909155517f68c53a7d31abbc500522afe9689fd451df49957269eb7a9abfa11b60b60627c691506104b290859061172f565b60405180910390a160019150505b919050565b6000546001600160a01b031681565b630a85bd0160e11b949350505050565b60065460405163860fc78b60e01b81526000916001600160a01b03169063860fc78b9061051590869060040161172f565b60206040518083038186803b15801561052d57600080fd5b505afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056591906112a5565b6105815760405162461bcd60e51b81526004016103e790611567565b600654604051632142170760e11b81526001600160a01b03909116906342842e0e906105b590339030908890600401611406565b600060405180830381600087803b1580156105cf57600080fd5b505af11580156105e3573d6000803e3d6000fd5b505050506105f16009610db2565b6105fb6009610dbb565b90506106056110da565b506040805160608101825233815260208082018681528284018681526000868152600a90935291849020835181546001600160a01b0319166001600160a01b0390911617815590516001820155905160029091015590517f24ae79748ece8ae3861c36fb0de7ef3e1c9774ff9c69f5054618b762e95cc5f49061068990849061172f565b60405180910390a15092915050565b6000546001600160a01b031633146106c25760405162461bcd60e51b81526004016103e7906115d1565b6106cd838383610dbf565b505050565b60055481565b6000546001600160a01b031633146107025760405162461bcd60e51b81526004016103e7906115d1565b600880546001600160a01b0319166001600160a01b0383161790556040517fdc3dba1d64dd67c0dc8b12621edd0c6ca4303a9073c3a8fcac38115e73d67b6b9061074d9083906113f2565b60405180910390a150565b6006546001600160a01b031681565b600a602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b600061079c6110da565b506000828152600a6020908152604091829020825160608101845281546001600160a01b0316815260018201549281019290925260020154918101919091526107e3611104565b60065460208301516040516371240d9d60e11b81526001600160a01b039092169163e2481b3a916108169160040161172f565b6101006040518083038186803b15801561082f57600080fd5b505afa158015610843573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086791906112c5565b9050428160c001511080610888575060018151600381111561088557fe5b14155b15610898576000925050506104c0565b81516001600160a01b03163314156108b5576001925050506104c0565b60075460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a0929190829003018186803b1580156108fa57600080fd5b505afa15801561090e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093291906113a1565b50919350839250600291506109449050565b8360e00151600281111561095457fe5b141561096d5783604001518110159450505050506104c0565b60018360e00151600281111561097f57fe5b14156109985783604001518111159450505050506104c0565b50600095945050505050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6008546001600160a01b031681565b604051639915feef60e01b815260009081903090639915feef906109f390869060040161172f565b60206040518083038186803b158015610a0b57600080fd5b505afa158015610a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4391906112a5565b610a5f5760405162461bcd60e51b81526004016103e7906116d8565b610a676110da565b506000838152600a6020908152604091829020825160608101845281546001600160a01b0390811682526001830154938201849052600290920154818501526006549351637a97929360e11b815290939091169163f52f252691610ace919060040161172f565b602060405180830381600087803b158015610ae857600080fd5b505af1158015610afc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b209190611368565b5060004790506000610b49600454610b4360055485610f3090919063ffffffff16565b90610f73565b905060008111610b6b5760405162461bcd60e51b81526004016103e790611608565b600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610ba4573d6000803e3d6000fd5b5060085447906001600160a01b0316331415610bfa576008546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610bf4573d6000803e3d6000fd5b50610c35565b83516040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610c33573d6000803e3d6000fd5b505b6000878152600a6020908152604080832080546001600160a01b0319168155600181018490556002019290925585015190517f357e4621aab1f5c18e53573f7e5c6fe3a6b2c90a4650813c730e5c761d3f2bf191610c94918690611738565b60405180910390a1925194509192505050915091565b6007546001600160a01b031681565b60045481565b6001546001600160a01b031681565b6001546001600160a01b03163314610cf85760405162461bcd60e51b81526004016103e790611526565b610d00610fb5565b565b6000546001600160a01b03163314610d2c5760405162461bcd60e51b81526004016103e7906115d1565b600081118015610d3e57506127108111155b610d4757600080fd5b60058190556040517fed621ca660e6e87126ddf80cfe0083eaa5be46f2999c915cf8787e420a2c8d1f9061074d90839061172f565b6000546001600160a01b03163314610da65760405162461bcd60e51b81526004016103e7906115d1565b610daf81611005565b50565b80546001019055565b5490565b6001600160a01b038316610de55760405162461bcd60e51b81526004016103e790611688565b610df0600283611076565b15610e0d5760405162461bcd60e51b81526004016103e7906114d7565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610e6e576040516001600160a01b0384169082156108fc029083906000818181858888f19350505050158015610e68573d6000803e3d6000fd5b50610ef0565b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb90610e9c908690859060040161142a565b602060405180830381600087803b158015610eb657600080fd5b505af1158015610eca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eee91906112a5565b505b7f1e34c1aee8e83c2dcc14c21bb4bfeea7f46c0c998cb797ac7cc4d7a18f5c656b838383604051610f2393929190611406565b60405180910390a1505050565b600082610f3f57506000610f6d565b82820282848281610f4c57fe5b0414610f6a5760405162461bcd60e51b81526004016103e790611590565b90505b92915050565b6000610f6a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061108b565b60018054600080546001600160a01b03199081166001600160a01b0384161782559091169091556040517f7880f0fcc848e1f26e461654b100a69f8d0641e29aa29f6596c6afadbb36b5ea9190a1565b6001600160a01b03811661102b5760405162461bcd60e51b81526004016103e79061162b565b600180546001600160a01b0319166001600160a01b0383161790556040517f56bddfa0cee9697cebddf9acd7f23dc6583663b05e007b877056d05017994def9061074d9083906113f2565b6000610f6a836001600160a01b0384166110c2565b600081836110ac5760405162461bcd60e51b81526004016103e79190611484565b5060008385816110b857fe5b0495945050505050565b60009081526001919091016020526040902054151590565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b604080516101008101909152806000815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000600281111561115857fe5b905290565b8051610f6d8161176d565b805160038110610f6d57600080fd5b805169ffffffffffffffffffff81168114610f6d57600080fd5b6000602082840312156111a2578081fd5b8135610f6a8161176d565b6000806000606084860312156111c1578182fd5b83356111cc8161176d565b925060208401356111dc8161176d565b929592945050506040919091013590565b60008060008060808587031215611202578081fd5b843561120d8161176d565b935060208581013561121e8161176d565b935060408601359250606086013567ffffffffffffffff80821115611241578384fd5b818801915088601f830112611254578384fd5b813581811115611262578485fd5b611274601f8201601f19168501611746565b91508082528984828501011115611289578485fd5b8084840185840137810190920192909252939692955090935050565b6000602082840312156112b6578081fd5b81518015158114610f6a578182fd5b60006101008083850312156112d8578182fd5b6112e181611746565b90508251600481106112f1578283fd5b8152611300846020850161115d565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201526113448460e08501611168565b60e08201529392505050565b600060208284031215611361578081fd5b5035919050565b600060208284031215611379578081fd5b5051919050565b60008060408385031215611392578182fd5b50508035926020909101359150565b600080600080600060a086880312156113b8578081fd5b6113c28787611177565b94506020860151935060408601519250606086015191506113e68760808801611177565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b901515815260200190565b6001600160e01b031991909116815260200190565b6000602080835283518082850152825b818110156114b057858101830151858201604001528201611494565b818111156114c15783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602f908201527f636f6c6c65637461626c652d647573743a3a746f6b656e2d69732d706172742d60408201526e1bd98b5d1a194b5c1c9bdd1bd8dbdb608a1b606082015260800190565b60208082526021908201527f676f7665726e61626c653a3a6f6e6c792d70656e64696e672d676f7665726e6f6040820152603960f91b606082015260800190565b6020808252600f908201526e1d1bdad95b9259081a5b9d985b1a59608a1b604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526019908201527f676f7665726e61626c653a3a6f6e6c792d676f7665726e6f7200000000000000604082015260600190565b602080825260099082015268070726f6669743d3d360bc1b604082015260600190565b60208082526037908201527f676f7665726e61626c653a3a70656e64696e672d676f7665726e6f722d73686f60408201527f756c642d6e6f742d62652d7a65726f2d61646472657373000000000000000000606082015260800190565b60208082526030908201527f636f6c6c65637461626c652d647573743a3a63616e742d73656e642d6475737460408201526f2d746f2d7a65726f2d6164647265737360801b606082015260800190565b6020808252601e908201527f747261636b6564546f6b656e4964206e6f74206578657263697361626c650000604082015260600190565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b90815260200190565b918252602082015260400190565b60405181810167ffffffffffffffff8111828210171561176557600080fd5b604052919050565b6001600160a01b0381168114610daf57600080fdfea2646970667358221220d3b7a59a57dbefc11f347017facff7908719fcae02425e4899107c800e70183a64736f6c634300060c0033",
  "bytecodeSha1": "9272d5c184630160619469199294e1511a80fdc1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "HegicBot",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "SafeMath.div": {
          "71": [
            3826,
            3831,
            true
          ]
        },
        "SafeMath.mul": {
          "69": [
            2479,
            2485,
            false
          ],
          "70": [
            2565,
            2575,
            true
          ]
        }
      },
      "10": {
        "Governable._setPendingGovernor": {
          "68": [
            473,
            503,
            true
          ]
        }
      },
      "11": {
        "HegicBot.exercisable": {
          "55": [
            2365,
            2400,
            true
          ],
          "56": [
            2404,
            2432,
            false
          ],
          "57": [
            2485,
            2517,
            false
          ],
          "58": [
            2695,
            2731,
            false
          ],
          "59": [
            2815,
            2850,
            false
          ]
        },
        "HegicBot.exercise": {
          "60": [
            3064,
            3096,
            true
          ],
          "61": [
            3398,
            3410,
            true
          ],
          "62": [
            3537,
            3557,
            false
          ]
        },
        "HegicBot.setWorkFee": {
          "63": [
            3964,
            3976,
            false
          ],
          "64": [
            3980,
            3997,
            true
          ]
        },
        "HegicBot.track": {
          "54": [
            1276,
            1304,
            true
          ]
        },
        "HegicBot.untrack": {
          "53": [
            1854,
            1886,
            true
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "CollectableDust._sendDust": {
          "65": [
            1099,
            1116,
            true
          ],
          "66": [
            1187,
            1219,
            true
          ],
          "67": [
            1285,
            1306,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {
        "SafeMath.div": {
          "43": [
            3178,
            3224
          ],
          "51": [
            3818,
            3846
          ]
        },
        "SafeMath.mul": {
          "40": [
            2501,
            2509
          ],
          "41": [
            2557,
            2613
          ],
          "42": [
            2624,
            2632
          ]
        }
      },
      "10": {
        "Governable._acceptGovernor": {
          "44": [
            717,
            743
          ],
          "45": [
            753,
            781
          ],
          "46": [
            791,
            814
          ]
        },
        "Governable._setPendingGovernor": {
          "47": [
            465,
            563
          ],
          "48": [
            573,
            607
          ],
          "49": [
            617,
            658
          ]
        }
      },
      "11": {
        "HegicBot.acceptGovernor": {
          "28": [
            4450,
            4467
          ]
        },
        "HegicBot.exercisable": {
          "14": [
            2448,
            2460
          ],
          "15": [
            2533,
            2544
          ],
          "16": [
            2747,
            2794
          ],
          "17": [
            2866,
            2913
          ],
          "18": [
            2934,
            2946
          ]
        },
        "HegicBot.exercise": {
          "19": [
            3056,
            3131
          ],
          "20": [
            3217,
            3260
          ],
          "21": [
            3390,
            3424
          ],
          "22": [
            3435,
            3471
          ],
          "23": [
            3573,
            3608
          ],
          "24": [
            3639,
            3686
          ],
          "25": [
            3707,
            3743
          ],
          "26": [
            3754,
            3815
          ],
          "27": [
            3826,
            3864
          ]
        },
        "HegicBot.sendDust": {
          "11": [
            4639,
            4670
          ]
        },
        "HegicBot.setKeeper": {
          "12": [
            4151,
            4167
          ],
          "13": [
            4177,
            4200
          ]
        },
        "HegicBot.setPendingGovernor": {
          "32": [
            4326,
            4363
          ]
        },
        "HegicBot.setWorkFee": {
          "29": [
            3956,
            3998
          ],
          "30": [
            4008,
            4026
          ],
          "31": [
            4036,
            4061
          ]
        },
        "HegicBot.track": {
          "5": [
            1268,
            1324
          ],
          "6": [
            1335,
            1394
          ],
          "7": [
            1405,
            1433
          ],
          "8": [
            1443,
            1486
          ],
          "9": [
            1587,
            1631
          ],
          "10": [
            1642,
            1675
          ]
        },
        "HegicBot.untrack": {
          "0": [
            1846,
            1897
          ],
          "1": [
            1908,
            1980
          ],
          "2": [
            1990,
            2026
          ],
          "3": [
            2036,
            2071
          ],
          "4": [
            2082,
            2093
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "Counters.current": {
          "34": [
            1182,
            1203
          ]
        },
        "Counters.increment": {
          "33": [
            1368,
            1387
          ]
        }
      },
      "8": {
        "EnumerableSet._contains": {
          "52": [
            3865,
            3896
          ]
        },
        "EnumerableSet.contains": {
          "50": [
            5497,
            5550
          ]
        }
      },
      "9": {
        "CollectableDust._sendDust": {
          "35": [
            1091,
            1169
          ],
          "36": [
            1179,
            1271
          ],
          "37": [
            1322,
            1352
          ],
          "38": [
            1383,
            1420
          ],
          "39": [
            1440,
            1475
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.1.0/Address",
    "CollectableDust",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/ERC721Holder",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/EnumerableSet",
    "Governable",
    "ICollectableDust",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/IERC721Receiver",
    "IGovernable",
    "IHegicBot",
    "IHegicNFT",
    "IPriceProvider",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "504:4210:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:412;;;;;;;;;;-1:-1:-1;1688:412:11;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;151:23:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;530:162:3:-;;;;;;;;;;-1:-1:-1;530:162:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1154:528:11:-;;;;;;;;;;-1:-1:-1;1154:528:11;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4504:173::-;;;;;;;;;;-1:-1:-1;4504:173:11;;;;;:::i;:::-;;:::i;:::-;;725:28;;;;;;;;;;;;;:::i;4074:133::-;;;;;;;;;;-1:-1:-1;4074:133:11;;;;;:::i;:::-;;:::i;760:23::-;;;;;;;;;;;;;:::i;905:53::-;;;;;;;;;;-1:-1:-1;905:53:11;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2106:847::-;;;;;;;;;;-1:-1:-1;2106:847:11;;;;;:::i;:::-;;:::i;395:80:9:-;;;;;;;;;;;;;:::i;830:21:11:-;;;;;;;;;;;;;:::i;2959:912::-;;;;;;;;;;-1:-1:-1;2959:912:11;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;789:35::-;;;;;;;;;;;;;:::i;689:30::-;;;;;;;;;;;;;:::i;180::10:-;;;;;;;;;;;;;:::i;4376:98:11:-;;;;;;;;;;;;;:::i;3877:191::-;;;;;;;;;;-1:-1:-1;3877:191:11;;;;;:::i;:::-;;:::i;4231:139::-;;;;;;;;;;-1:-1:-1;4231:139:11;;;;;:::i;:::-;;:::i;1688:412::-;1756:4;1772:32;;:::i;:::-;-1:-1:-1;1807:29:11;;;;:13;:29;;;;;;;;;1772:64;;;;;;;;;-1:-1:-1;;;;;1772:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:10;1854:32;1846:51;;;;-1:-1:-1;;;1846:51:11;;;;;;;:::i;:::-;;;;;;;;;1908:6;;1959:20;;;;1908:72;;-1:-1:-1;;;1908:72:11;;-1:-1:-1;;;;;1908:6:11;;;;:23;;:72;;1940:4;;1947:10;;1908:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1997:29:11;;;;:13;:29;;;;;;1990:36;;-1:-1:-1;;;;;;1990:36:11;;;;;;;;;;;;;;;2041:30;;;-1:-1:-1;2041:30:11;;2011:14;;2041:30;:::i;:::-;;;;;;;;2089:4;2082:11;;;1688:412;;;;:::o;151:23:10:-;;;-1:-1:-1;;;;;151:23:10;;:::o;530:162:3:-;-1:-1:-1;;;530:162:3;;;;;;:::o;1154:528:11:-;1276:6;;:28;;-1:-1:-1;;;1276:28:11;;1234:22;;-1:-1:-1;;;;;1276:6:11;;:19;;:28;;1296:7;;1276:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1268:56;;;;-1:-1:-1;;;1268:56:11;;;;;;;:::i;:::-;1335:6;;:59;;-1:-1:-1;;;1335:59:11;;-1:-1:-1;;;;;1335:6:11;;;;:23;;:59;;1359:10;;1379:4;;1386:7;;1335:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1405:28;:16;:26;:28::i;:::-;1460:26;:16;:24;:26::i;:::-;1443:43;;1496:32;;:::i;:::-;-1:-1:-1;1531:46:11;;;;;;;;1544:10;1531:46;;;;;;;;;;;;;;;-1:-1:-1;1587:29:11;;;:13;:29;;;;;;;:44;;;;-1:-1:-1;;;;;;1587:44:11;-1:-1:-1;;;;;1587:44:11;;;;;;;;-1:-1:-1;1587:44:11;;;;;;;;;;1647:28;;;;;;1587:29;;1647:28;:::i;:::-;;;;;;;;1154:528;;;;;:::o;4504:173::-;881:8:10;;-1:-1:-1;;;;;881:8:10;867:10;:22;859:60;;;;-1:-1:-1;;;859:60:10;;;;;;;:::i;:::-;4639:31:11::1;4649:3;4654:6;4662:7;4639:9;:31::i;:::-;4504:173:::0;;;:::o;725:28::-;;;;:::o;4074:133::-;881:8:10;;-1:-1:-1;;;;;881:8:10;867:10;:22;859:60;;;;-1:-1:-1;;;859:60:10;;;;;;;:::i;:::-;4151:6:11::1;:16:::0;;-1:-1:-1;;;;;;4151:16:11::1;-1:-1:-1::0;;;;;4151:16:11;::::1;;::::0;;4182:18:::1;::::0;::::1;::::0;::::1;::::0;4151:16;;4182:18:::1;:::i;:::-;;;;;;;;4074:133:::0;:::o;760:23::-;;;-1:-1:-1;;;;;760:23:11;;:::o;905:53::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;905:53:11;;;;;;:::o;2106:847::-;2183:4;2199:32;;:::i;:::-;-1:-1:-1;2234:29:11;;;;:13;:29;;;;;;;;;2199:64;;;;;;;;;-1:-1:-1;;;;;2199:64:11;;;;;;;;;;;;;;;;;;;;;;;;2273:20;;:::i;:::-;2296:6;;2329:20;;;;2296:54;;-1:-1:-1;;;2296:54:11;;-1:-1:-1;;;;;2296:6:11;;;;:32;;:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2273:77;;2385:15;2365:6;:17;;;:35;:67;;;-1:-1:-1;2420:12:11;2404;;:28;;;;;;;;;;2365:67;2361:110;;;2455:5;2448:12;;;;;;2361:110;2485:18;;-1:-1:-1;;;;;2485:32:11;2507:10;2485:32;2481:74;;;2540:4;2533:11;;;;;;2481:74;2596:13;;:31;;;-1:-1:-1;;;2596:31:11;;;;2568:18;;-1:-1:-1;;;;;2596:13:11;;:29;;:31;;;;;;;;;;;;;;:13;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2565:62:11;;-1:-1:-1;2565:62:11;;-1:-1:-1;2716:15:11;;-1:-1:-1;2695:36:11;;-1:-1:-1;2695:36:11;;:6;:17;;;:36;;;;;;;;;2691:233;;;2770:12;:24;;;2754:12;:40;;2747:47;;;;;;;;2691:233;2836:14;2815:6;:17;;;:35;;;;;;;;;2811:113;;;2889:12;:24;;;2873:12;:40;;2866:47;;;;;;;;2811:113;-1:-1:-1;2941:5:11;;2106:847;-1:-1:-1;;;;;2106:847:11:o;395:80:9:-;433:42;395:80;:::o;830:21:11:-;;;-1:-1:-1;;;;;830:21:11;;:::o;2959:912::-;3064:32;;-1:-1:-1;;;3064:32:11;;3028:7;;;;3064:4;;:16;;:32;;3081:14;;3064:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3056:75;;;;-1:-1:-1;;;3056:75:11;;;;;;;:::i;:::-;3142:32;;:::i;:::-;-1:-1:-1;3177:29:11;;;;:13;:29;;;;;;;;;3142:64;;;;;;;;;-1:-1:-1;;;;;3142:64:11;;;;;;;;;;;;;;;;;;;;;;;;3217:6;;:43;;-1:-1:-1;;;3217:43:11;;3142:64;;3217:6;;;;:21;;:43;;3142:64;3217:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3271:19;3293:21;3271:43;;3324:16;3343:37;3372:7;;3343:24;3359:7;;3343:11;:15;;:24;;;;:::i;:::-;:28;;:37::i;:::-;3324:56;;3409:1;3398:8;:12;3390:34;;;;-1:-1:-1;;;3390:34:11;;;;;;;:::i;:::-;3443:8;;;3435:36;;-1:-1:-1;;;;;3443:8:11;;;;3435:36;;;;;3462:8;;3435:36;3443:8;3435:36;3462:8;3443;3435:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3551:6:11;;3502:21;;-1:-1:-1;;;;;3551:6:11;3537:10;:20;3533:164;;;3581:6;;3573:35;;-1:-1:-1;;;;;3581:6:11;;;;3573:35;;;;;3598:9;;3581:6;3573:35;3581:6;3573:35;3598:9;3581:6;3573:35;;;;;;;;;;;;;;;;;;;;;3533:164;;;3647:18;;3639:47;;-1:-1:-1;;;;;3639:36:11;;;;:47;;;;;3676:9;;3647:18;3639:47;3647:18;3639:47;3676:9;3639:36;:47;;;;;;;;;;;;;;;;;;;;;3533:164;3714:29;;;;:13;:29;;;;;;;;3707:36;;-1:-1:-1;;;;;;3707:36:11;;;;;;;;;;;;;;;3781:20;;;3759:56;;;;;;3803:11;;3759:56;:::i;:::-;;;;;;;;3834:18;;;-1:-1:-1;3854:9:11;;-1:-1:-1;;;2959:912:11;;;:::o;789:35::-;;;-1:-1:-1;;;;;789:35:11;;:::o;689:30::-;;;;:::o;180::10:-;;;-1:-1:-1;;;;;180:30:10;;:::o;4376:98:11:-;1004:15:10;;-1:-1:-1;;;;;1004:15:10;990:10;:29;982:75;;;;-1:-1:-1;;;982:75:10;;;;;;;:::i;:::-;4450:17:11::1;:15;:17::i;:::-;4376:98::o:0;3877:191::-;881:8:10;;-1:-1:-1;;;;;881:8:10;867:10;:22;859:60;;;;-1:-1:-1;;;859:60:10;;;;;;;:::i;:::-;3975:1:11::1;3964:8;:12;:33;;;;;3992:5;3980:8;:17;;3964:33;3956:42;;;::::0;::::1;;4008:7;:18:::0;;;4041:20:::1;::::0;::::1;::::0;::::1;::::0;4018:8;;4041:20:::1;:::i;4231:139::-:0;881:8:10;;-1:-1:-1;;;;;881:8:10;867:10;:22;859:60;;;;-1:-1:-1;;;859:60:10;;;;;;;:::i;:::-;4326:37:11::1;4346:16;4326:19;:37::i;:::-;4231:139:::0;:::o;1216:178:7:-;1368:19;;1386:1;1368:19;;;1216:178::o;1098:112::-;1189:14;;1098:112::o;977:505:9:-;-1:-1:-1;;;;;1099:17:9;;1091:78;;;;-1:-1:-1;;;1091:78:9;;;;;;;:::i;:::-;1188:31;:14;1212:6;1188:23;:31::i;:::-;1187:32;1179:92;;;;-1:-1:-1;;;1179:92:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;1285:21:9;;433:42;1285:21;1281:150;;;1322:30;;-1:-1:-1;;;;;1322:21:9;;;:30;;;;;1344:7;;1322:30;;;;1344:7;1322:21;:30;;;;;;;;;;;;;;;;;;;;;1281:150;;;1383:37;;-1:-1:-1;;;1383:37:9;;-1:-1:-1;;;;;1383:23:9;;;;;:37;;1407:3;;1412:7;;1383:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1281:150;1445:30;1454:3;1459:6;1467:7;1445:30;;;;;;;;:::i;:::-;;;;;;;;977:505;;;:::o;2180:459:1:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:1;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:1;;;;;;;:::i;:::-;2631:1;-1:-1:-1;2180:459:1;;;;;:::o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;671:150:10:-;728:15;;;;717:26;;-1:-1:-1;;;;;;717:26:10;;;-1:-1:-1;;;;;728:15:10;;717:26;;;753:28;;;;;;796:18;;;;728:15;796:18;671:150::o;391:274::-;-1:-1:-1;;;;;473:30:10;;465:98;;;;-1:-1:-1;;;465:98:10;;;;;;;:::i;:::-;573:15;:34;;-1:-1:-1;;;;;;573:34:10;-1:-1:-1;;;;;573:34:10;;;;;622:36;;;;;;573:34;;622:36;:::i;5401:156:8:-;5481:4;5504:46;5514:3;-1:-1:-1;;;;;5534:14:8;;5504:9;:46::i;3713:272:1:-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:1;;;;;;;;:::i;:::-;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:1:o;3776:127:8:-;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;142:150::-;228:13;;246:41;228:13;246:41;:::i;883:164::-;976:13;;23722:1;23712:12;;23702:2;;23738:1;;23728:12;3159:132;3236:13;;21697:22;21686:34;;24169;;24159:2;;24217:1;;24207:12;3298:241;;3402:2;3390:9;3381:7;3377:23;3373:32;3370:2;;;-1:-1;;3408:12;3370:2;85:6;72:20;97:33;124:5;97:33;:::i;3546:491::-;;;;3684:2;3672:9;3663:7;3659:23;3655:32;3652:2;;;-1:-1;;3690:12;3652:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;3742:63;-1:-1;3842:2;3881:22;;72:20;97:33;72:20;97:33;:::i;:::-;3646:391;;3850:63;;-1:-1;;;3950:2;3989:22;;;;2948:20;;3646:391::o;4044:721::-;;;;;4208:3;4196:9;4187:7;4183:23;4179:33;4176:2;;;-1:-1;;4215:12;4176:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;4267:63;-1:-1;4367:2;4406:22;;;72:20;97:33;72:20;97:33;:::i;:::-;4375:63;-1:-1;4475:2;4514:22;;2948:20;;-1:-1;4611:2;4596:18;;4583:32;4635:18;4624:30;;;4621:2;;;-1:-1;;4657:12;4621:2;4732:6;4721:9;4717:22;;;536:3;529:4;521:6;517:17;513:27;503:2;;-1:-1;;544:12;503:2;591:6;578:20;4635:18;20399:6;20396:30;20393:2;;;-1:-1;;20429:12;20393:2;613:64;20502:9;20483:17;;-1:-1;;20479:33;20560:15;;613:64;:::i;:::-;604:73;;697:6;690:5;683:21;801:3;4367:2;792:6;725;783:16;;780:25;777:2;;;-1:-1;;808:12;777:2;22802:6;4367:2;725:6;721:17;4367:2;759:5;755:16;22779:30;22840:16;;;;;22833:27;;;;4170:595;;;;-1:-1;4170:595;;-1:-1;;4170:595::o;4772:257::-;;4884:2;4872:9;4863:7;4859:23;4855:32;4852:2;;;-1:-1;;4890:12;4852:2;380:6;374:13;23601:5;21163:13;21156:21;23579:5;23576:32;23566:2;;-1:-1;;23612:12;5036:312;;5175:3;;5163:9;5154:7;5150:23;5146:33;5143:2;;;-1:-1;;5182:12;5143:2;1536:22;5175:3;1536:22;:::i;:::-;1527:31;;1148:6;1142:13;23833:1;23826:5;23823:12;23813:2;;-1:-1;;23839:12;23813:2;1616:96;;1808:68;1872:3;1775:2;1848:22;;1808:68;:::i;:::-;1775:2;1794:5;1790:16;1783:94;1940:2;2009:9;2005:22;3096:13;1940:2;1959:5;1955:16;1948:86;2097:2;2166:9;2162:22;3096:13;2097:2;2116:5;2112:16;2105:86;2260:3;2330:9;2326:22;3096:13;2260:3;2280:5;2276:16;2269:86;2419:3;2489:9;2485:22;3096:13;2419:3;2439:5;2435:16;2428:86;2581:3;2651:9;2647:22;3096:13;2581:3;2601:5;2597:16;2590:86;2777:75;2848:3;2743;2828:9;2824:22;2777:75;:::i;:::-;2743:3;2759:16;;2752:101;2763:5;5137:211;-1:-1;;;5137:211::o;5355:241::-;;5459:2;5447:9;5438:7;5434:23;5430:32;5427:2;;;-1:-1;;5465:12;5427:2;-1:-1;2948:20;;5421:175;-1:-1;5421:175::o;5603:263::-;;5718:2;5706:9;5697:7;5693:23;5689:32;5686:2;;;-1:-1;;5724:12;5686:2;-1:-1;3096:13;;5680:186;-1:-1;5680:186::o;5873:366::-;;;5994:2;5982:9;5973:7;5969:23;5965:32;5962:2;;;-1:-1;;6000:12;5962:2;-1:-1;;2948:20;;;6152:2;6191:22;;;2948:20;;-1:-1;5956:283::o;6246:803::-;;;;;;6426:3;6414:9;6405:7;6401:23;6397:33;6394:2;;;-1:-1;;6433:12;6394:2;6495:63;6550:7;6526:22;6495:63;:::i;:::-;6485:73;;6595:2;6648:9;6644:22;1292:13;6603:73;;6713:2;6767:9;6763:22;3096:13;6721:74;;6832:2;6886:9;6882:22;3096:13;6840:74;;6970:63;7025:7;6951:3;7005:9;7001:22;6970:63;:::i;:::-;6960:73;;6388:661;;;;;;;;:::o;11949:222::-;-1:-1;;;;;21480:54;;;;7276:37;;12076:2;12061:18;;12047:124::o;12178:476::-;-1:-1;;;;;21480:54;;;7135:58;;21480:54;;;;12557:2;12542:18;;7135:58;12640:2;12625:18;;11900:37;;;;12377:2;12362:18;;12348:306::o;13112:333::-;-1:-1;;;;;21480:54;;;;7276:37;;13431:2;13416:18;;11900:37;13267:2;13252:18;;13238:207::o;13452:444::-;-1:-1;;;;;21480:54;;;;7276:37;;13799:2;13784:18;;11900:37;;;;13882:2;13867:18;;11900:37;13635:2;13620:18;;13606:290::o;13903:210::-;21163:13;;21156:21;7390:34;;14024:2;14009:18;;13995:118::o;14120:218::-;-1:-1;;;;;;21250:78;;;;7505:36;;14245:2;14230:18;;14216:122::o;14885:310::-;;15032:2;;15053:17;15046:47;8046:5;20680:12;20837:6;15032:2;15021:9;15017:18;20825:19;-1:-1;22947:101;22961:6;22958:1;22955:13;22947:101;;;23028:11;;;;;23022:18;23009:11;;;20865:14;23009:11;23002:39;22976:10;;22947:101;;;23063:6;23060:1;23057:13;23054:2;;;-1:-1;20865:14;23119:6;15021:9;23110:16;;23103:27;23054:2;-1:-1;20502:9;23219:14;-1:-1;;23215:28;8204:39;;;;20865:14;8204:39;;15003:192;-1:-1;;;15003:192::o;15202:416::-;15402:2;15416:47;;;8480:2;15387:18;;;20825:19;8516:34;20865:14;;;8496:55;-1:-1;;;8571:12;;;8564:39;8622:12;;;15373:245::o;15625:416::-;15825:2;15839:47;;;8873:2;15810:18;;;20825:19;8909:34;20865:14;;;8889:55;-1:-1;;;8964:12;;;8957:25;9001:12;;;15796:245::o;16048:416::-;16248:2;16262:47;;;9252:2;16233:18;;;20825:19;-1:-1;;;20865:14;;;9268:38;9325:12;;;16219:245::o;16471:416::-;16671:2;16685:47;;;9576:2;16656:18;;;20825:19;9612:34;20865:14;;;9592:55;-1:-1;;;9667:12;;;9660:25;9704:12;;;16642:245::o;16894:416::-;17094:2;17108:47;;;9955:2;17079:18;;;20825:19;9991:27;20865:14;;;9971:48;10038:12;;;17065:245::o;17317:416::-;17517:2;17531:47;;;10289:1;17502:18;;;20825:19;-1:-1;;;20865:14;;;10304:32;10355:12;;;17488:245::o;17740:416::-;17940:2;17954:47;;;10606:2;17925:18;;;20825:19;10642:34;20865:14;;;10622:55;10711:25;10697:12;;;10690:47;10756:12;;;17911:245::o;18163:416::-;18363:2;18377:47;;;11007:2;18348:18;;;20825:19;11043:34;20865:14;;;11023:55;-1:-1;;;11098:12;;;11091:40;11150:12;;;18334:245::o;18586:416::-;18786:2;18800:47;;;11401:2;18771:18;;;20825:19;11437:32;20865:14;;;11417:53;11489:12;;;18757:245::o;19009:416::-;19209:2;19223:47;;;11740:1;19194:18;;;20825:19;-1:-1;;;20865:14;;;11755:29;11803:12;;;19180:245::o;19432:222::-;11900:37;;;19559:2;19544:18;;19530:124::o;19661:333::-;11900:37;;;19980:2;19965:18;;11900:37;19816:2;19801:18;;19787:207::o;20001:256::-;20063:2;20057:9;20089:17;;;20164:18;20149:34;;20185:22;;;20146:62;20143:2;;;20221:1;;20211:12;20143:2;20063;20230:22;20041:216;;-1:-1;20041:216::o;23256:117::-;-1:-1;;;;;21480:54;;23315:35;;23305:2;;23364:1;;23354:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      }
    },
    "version": 1
  },
  "offset": [
    504,
    4714
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9915FEEF GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC2624E1E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC2624E1E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xE3056A34 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xE58BB639 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xEB907B22 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xF235757F EQ PUSH2 0x35D JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x9915FEEF EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xA734F06E EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xB07F0A41 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xB888879E EQ PUSH2 0x2E9 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x2DB8C129 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2DB8C129 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x3A5017B4 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x748747E6 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x8021A395 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x8305368A EQ PUSH2 0x242 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0xAB174A3 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x2BDD34E3 EQ PUSH2 0x1A9 JUMPI PUSH2 0x11F JUMP JUMPDEST CALLDATASIZE PUSH2 0x11F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x1350 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x11ED JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1380 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x6D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0x6D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x758 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x262 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x1350 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x1350 JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x9A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x9BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1350 JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP3 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0xCAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0xCB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0xCBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0xCCE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x1350 JUMP JUMPDEST PUSH2 0xD02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x387 PUSH2 0x10DA JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER EQ PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x42842E0E SWAP2 PUSH2 0x427 SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x455 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x68C53A7D31ABBC500522AFE9689FD451DF49957269EB7A9ABFA11B60B60627C6 SWAP2 POP PUSH2 0x4B2 SWAP1 DUP6 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x860FC78B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x860FC78B SWAP1 PUSH2 0x515 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x172F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x5B5 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x5F1 PUSH1 0x9 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x5FB PUSH1 0x9 PUSH2 0xDBB JUMP JUMPDEST SWAP1 POP PUSH2 0x605 PUSH2 0x10DA JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 DUP2 MSTORE DUP3 DUP5 ADD DUP7 DUP2 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE SWAP1 MLOAD PUSH32 0x24AE79748ECE8AE3861C36FB0DE7EF3E1C9774FF9C69F5054618B762E95CC5F4 SWAP1 PUSH2 0x689 SWAP1 DUP5 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x6CD DUP4 DUP4 DUP4 PUSH2 0xDBF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xDC3DBA1D64DD67C0DC8B12621EDD0C6CA4303A9073C3A8FCAC38115E73D67B6B SWAP1 PUSH2 0x74D SWAP1 DUP4 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79C PUSH2 0x10DA JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x7E3 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x71240D9D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xE2481B3A SWAP2 PUSH2 0x816 SWAP2 PUSH1 0x4 ADD PUSH2 0x172F JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x843 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x867 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP2 PUSH1 0xC0 ADD MLOAD LT DUP1 PUSH2 0x888 JUMPI POP PUSH1 0x1 DUP2 MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x885 JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x898 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x4C0 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x932 SWAP2 SWAP1 PUSH2 0x13A1 JUMP JUMPDEST POP SWAP2 SWAP4 POP DUP4 SWAP3 POP PUSH1 0x2 SWAP2 POP PUSH2 0x944 SWAP1 POP JUMP JUMPDEST DUP4 PUSH1 0xE0 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x954 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x96D JUMPI DUP4 PUSH1 0x40 ADD MLOAD DUP2 LT ISZERO SWAP5 POP POP POP POP POP PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0xE0 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x97F JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x998 JUMPI DUP4 PUSH1 0x40 ADD MLOAD DUP2 GT ISZERO SWAP5 POP POP POP POP POP PUSH2 0x4C0 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9915FEEF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0x9915FEEF SWAP1 PUSH2 0x9F3 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x172F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA43 SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0xA5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH2 0xA67 PUSH2 0x10DA JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD DUP2 DUP6 ADD MSTORE PUSH1 0x6 SLOAD SWAP4 MLOAD PUSH4 0x7A979293 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH4 0xF52F2526 SWAP2 PUSH2 0xACE SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x172F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB20 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST POP PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH2 0xB49 PUSH1 0x4 SLOAD PUSH2 0xB43 PUSH1 0x5 SLOAD DUP6 PUSH2 0xF30 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xF73 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xBA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x8 SLOAD SELFBALANCE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xBFA JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xBF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xC35 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP6 ADD MLOAD SWAP1 MLOAD PUSH32 0x357E4621AAB1F5C18E53573F7E5C6FE3A6B2C90A4650813C730E5C761D3F2BF1 SWAP2 PUSH2 0xC94 SWAP2 DUP7 SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 MLOAD SWAP5 POP SWAP2 SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0xD00 PUSH2 0xFB5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xD3E JUMPI POP PUSH2 0x2710 DUP2 GT ISZERO JUMPDEST PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xED621CA660E6E87126DDF80CFE0083EAA5BE46F2999C915CF8787E420A2C8D1F SWAP1 PUSH2 0x74D SWAP1 DUP4 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0xDAF DUP2 PUSH2 0x1005 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH2 0xDF0 PUSH1 0x2 DUP4 PUSH2 0x1076 JUMP JUMPDEST ISZERO PUSH2 0xE0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ ISZERO PUSH2 0xE6E JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xE9C SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x142A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST POP JUMPDEST PUSH32 0x1E34C1AEE8E83C2DCC14C21BB4BFEEA7F46C0C998CB797AC7CC4D7A18F5C656B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF23 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF3F JUMPI POP PUSH1 0x0 PUSH2 0xF6D JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xF4C JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x1590 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x108B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR DUP3 SSTORE SWAP1 SWAP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7880F0FCC848E1F26E461654B100A69F8D0641E29AA29F6596C6AFADBB36B5EA SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x102B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0x162B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x56BDDFA0CEE9697CEBDDF9ACD7F23DC6583663B05E007B877056D05017994DEF SWAP1 PUSH2 0x74D SWAP1 DUP4 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6A DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x10AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x10B8 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1158 JUMPI INVALID JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xF6D DUP2 PUSH2 0x176D JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 LT PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF6A DUP2 PUSH2 0x176D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11C1 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x11CC DUP2 PUSH2 0x176D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x11DC DUP2 PUSH2 0x176D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1202 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x120D DUP2 PUSH2 0x176D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 DUP2 ADD CALLDATALOAD PUSH2 0x121E DUP2 PUSH2 0x176D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1241 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1254 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1262 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1274 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x1746 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP10 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1289 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF6A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D8 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x12E1 DUP2 PUSH2 0x1746 JUMP JUMPDEST SWAP1 POP DUP3 MLOAD PUSH1 0x4 DUP2 LT PUSH2 0x12F1 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MSTORE PUSH2 0x1300 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x115D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1344 DUP5 PUSH1 0xE0 DUP6 ADD PUSH2 0x1168 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1361 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1379 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1392 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13B8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x13C2 DUP8 DUP8 PUSH2 0x1177 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x13E6 DUP8 PUSH1 0x80 DUP9 ADD PUSH2 0x1177 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14B0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1494 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x14C1 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x636F6C6C65637461626C652D647573743A3A746F6B656E2D69732D706172742D PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x1BD98B5D1A194B5C1C9BDD1BD8DBDB PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x676F7665726E61626C653A3A6F6E6C792D70656E64696E672D676F7665726E6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x1D1BDAD95B9259081A5B9D985B1A59 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x676F7665726E61626C653A3A6F6E6C792D676F7665726E6F7200000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x70726F6669743D3D3 PUSH1 0xBC SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x37 SWAP1 DUP3 ADD MSTORE PUSH32 0x676F7665726E61626C653A3A70656E64696E672D676F7665726E6F722D73686F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x756C642D6E6F742D62652D7A65726F2D61646472657373000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x636F6C6C65637461626C652D647573743A3A63616E742D73656E642D64757374 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x2D746F2D7A65726F2D61646472657373 PUSH1 0x80 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x747261636B6564546F6B656E4964206E6F74206578657263697361626C650000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x6 SWAP1 DUP3 ADD MSTORE PUSH6 0x10B7BBB732B9 PUSH1 0xD1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDAF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xB7 0xA5 SWAP11 JUMPI 0xDB 0xEF 0xC1 0x1F CALLVALUE PUSH17 0x17FACFF7908719FCAE02425E4899107C80 0xE PUSH17 0x183A64736F6C634300060C003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        504,
        4714
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "LT",
      "path": "11"
    },
    "9": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x118"
    },
    "12": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "13": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "SHR",
      "path": "11"
    },
    "19": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "20": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x9915FEEF"
    },
    "25": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "GT",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA0"
    },
    "29": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "30": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "31": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xC2624E1E"
    },
    "36": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "GT",
      "path": "11"
    },
    "37": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "41": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "42": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xC2624E1E"
    },
    "47": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "48": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2FE"
    },
    "51": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "52": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "53": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE3056A34"
    },
    "58": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "59": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x313"
    },
    "62": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "63": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "64": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE58BB639"
    },
    "69": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "70": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x328"
    },
    "73": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "74": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "75": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xEB907B22"
    },
    "80": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "81": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x33D"
    },
    "84": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "85": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "86": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF235757F"
    },
    "91": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "92": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x35D"
    },
    "95": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "96": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11F"
    },
    "99": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMP",
      "path": "11"
    },
    "100": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "101": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "102": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x9915FEEF"
    },
    "107": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "108": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x271"
    },
    "111": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "112": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "113": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA734F06E"
    },
    "118": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "119": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x291"
    },
    "122": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "123": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "124": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xACED1661"
    },
    "129": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "130": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A6"
    },
    "133": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "134": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "135": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB07F0A41"
    },
    "140": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "141": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BB"
    },
    "144": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "145": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "146": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB888879E"
    },
    "151": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "152": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E9"
    },
    "155": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "156": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11F"
    },
    "159": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMP",
      "path": "11"
    },
    "160": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "161": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "162": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x2DB8C129"
    },
    "167": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "GT",
      "path": "11"
    },
    "168": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "172": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "173": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x2DB8C129"
    },
    "178": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "179": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D6"
    },
    "182": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "183": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "184": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x3A5017B4"
    },
    "189": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "190": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F8"
    },
    "193": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "194": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "195": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x748747E6"
    },
    "200": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "201": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x20D"
    },
    "204": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "205": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "206": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8021A395"
    },
    "211": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "212": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22D"
    },
    "215": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "216": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "217": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8305368A"
    },
    "222": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "223": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x242"
    },
    "226": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "227": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11F"
    },
    "230": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMP",
      "path": "11"
    },
    "231": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "232": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "233": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xAB174A3"
    },
    "238": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "239": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x124"
    },
    "242": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "243": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "244": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xC340A24"
    },
    "249": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "250": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15A"
    },
    "253": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "254": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "255": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x150B7A02"
    },
    "260": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "261": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17C"
    },
    "264": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "265": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "266": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x2BDD34E3"
    },
    "271": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "EQ",
      "path": "11"
    },
    "272": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A9"
    },
    "275": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "276": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11F"
    },
    "279": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMP",
      "path": "11"
    },
    "280": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "281": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "282": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11F"
    },
    "285": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "286": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "STOP",
      "path": "11"
    },
    "287": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "288": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "290": {
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "DUP1",
      "path": "11"
    },
    "291": {
      "first_revert": true,
      "fn": null,
      "offset": [
        504,
        4714
      ],
      "op": "REVERT",
      "path": "11"
    },
    "292": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "293": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "294": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "DUP1",
      "path": "11"
    },
    "295": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "296": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x130"
    },
    "299": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "300": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "302": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "DUP1",
      "path": "11"
    },
    "303": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "REVERT",
      "path": "11"
    },
    "304": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "305": {
      "op": "POP"
    },
    "306": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x144"
    },
    "309": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13F"
    },
    "312": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "313": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "315": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1350"
    },
    "318": {
      "fn": "HegicBot.untrack",
      "jump": "i",
      "offset": [
        1688,
        2100
      ],
      "op": "JUMP",
      "path": "11"
    },
    "319": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "320": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37D"
    },
    "323": {
      "fn": "HegicBot.untrack",
      "jump": "i",
      "offset": [
        1688,
        2100
      ],
      "op": "JUMP",
      "path": "11"
    },
    "324": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "325": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "327": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "328": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x151"
    },
    "331": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "332": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "333": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1464"
    },
    "336": {
      "fn": "HegicBot.untrack",
      "jump": "i",
      "offset": [
        1688,
        2100
      ],
      "op": "JUMP",
      "path": "11"
    },
    "337": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "338": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "340": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "341": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "DUP1",
      "path": "11"
    },
    "342": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "343": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "SUB",
      "path": "11"
    },
    "344": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "345": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "RETURN",
      "path": "11"
    },
    "346": {
      "offset": [
        151,
        174
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "347": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "348": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "DUP1",
      "path": "10"
    },
    "349": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "350": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x166"
    },
    "353": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "354": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "356": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "DUP1",
      "path": "10"
    },
    "357": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "REVERT",
      "path": "10"
    },
    "358": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "359": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "POP",
      "path": "10"
    },
    "360": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16F"
    },
    "363": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4C5"
    },
    "366": {
      "fn": "HegicBot.untrack",
      "jump": "i",
      "offset": [
        151,
        174
      ],
      "op": "JUMP",
      "path": "10"
    },
    "367": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "368": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "370": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "371": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x151"
    },
    "374": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "375": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "376": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13F2"
    },
    "379": {
      "fn": "HegicBot.untrack",
      "jump": "i",
      "offset": [
        151,
        174
      ],
      "op": "JUMP",
      "path": "10"
    },
    "380": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "381": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "382": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "DUP1",
      "path": "3"
    },
    "383": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "384": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x188"
    },
    "387": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "388": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "390": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "DUP1",
      "path": "3"
    },
    "391": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "REVERT",
      "path": "3"
    },
    "392": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "393": {
      "op": "POP"
    },
    "394": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19C"
    },
    "397": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x197"
    },
    "400": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "401": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "403": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11ED"
    },
    "406": {
      "fn": "ERC721Holder.onERC721Received",
      "jump": "i",
      "offset": [
        530,
        692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "407": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "408": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D4"
    },
    "411": {
      "fn": "ERC721Holder.onERC721Received",
      "jump": "i",
      "offset": [
        530,
        692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "412": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "413": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "415": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "416": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x151"
    },
    "419": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "420": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "421": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x146F"
    },
    "424": {
      "fn": "ERC721Holder.onERC721Received",
      "jump": "i",
      "offset": [
        530,
        692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "425": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "426": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "427": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "DUP1",
      "path": "11"
    },
    "428": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "429": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B5"
    },
    "432": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "433": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "435": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "DUP1",
      "path": "11"
    },
    "436": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "REVERT",
      "path": "11"
    },
    "437": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "438": {
      "op": "POP"
    },
    "439": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C9"
    },
    "442": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C4"
    },
    "445": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "446": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "448": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1380"
    },
    "451": {
      "fn": "HegicBot.track",
      "jump": "i",
      "offset": [
        1154,
        1682
      ],
      "op": "JUMP",
      "path": "11"
    },
    "452": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "453": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4E4"
    },
    "456": {
      "fn": "HegicBot.track",
      "jump": "i",
      "offset": [
        1154,
        1682
      ],
      "op": "JUMP",
      "path": "11"
    },
    "457": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "458": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "460": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "461": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x151"
    },
    "464": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "465": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "466": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x172F"
    },
    "469": {
      "fn": "HegicBot.track",
      "jump": "i",
      "offset": [
        1154,
        1682
      ],
      "op": "JUMP",
      "path": "11"
    },
    "470": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "471": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "472": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "DUP1",
      "path": "11"
    },
    "473": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "474": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E2"
    },
    "477": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "478": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "480": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "DUP1",
      "path": "11"
    },
    "481": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "REVERT",
      "path": "11"
    },
    "482": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "483": {
      "op": "POP"
    },
    "484": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F6"
    },
    "487": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F1"
    },
    "490": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "491": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "493": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11AD"
    },
    "496": {
      "fn": "HegicBot.sendDust",
      "jump": "i",
      "offset": [
        4504,
        4677
      ],
      "op": "JUMP",
      "path": "11"
    },
    "497": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "498": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x698"
    },
    "501": {
      "fn": "HegicBot.sendDust",
      "jump": "i",
      "offset": [
        4504,
        4677
      ],
      "op": "JUMP",
      "path": "11"
    },
    "502": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "503": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "STOP",
      "path": "11"
    },
    "504": {
      "offset": [
        725,
        753
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "505": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "506": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "DUP1",
      "path": "11"
    },
    "507": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "508": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x204"
    },
    "511": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "512": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "514": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "DUP1",
      "path": "11"
    },
    "515": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "REVERT",
      "path": "11"
    },
    "516": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "517": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "POP",
      "path": "11"
    },
    "518": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C9"
    },
    "521": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6D2"
    },
    "524": {
      "fn": "HegicBot.sendDust",
      "jump": "i",
      "offset": [
        725,
        753
      ],
      "op": "JUMP",
      "path": "11"
    },
    "525": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "526": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "527": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "DUP1",
      "path": "11"
    },
    "528": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "529": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x219"
    },
    "532": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "533": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "535": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "DUP1",
      "path": "11"
    },
    "536": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "REVERT",
      "path": "11"
    },
    "537": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "538": {
      "op": "POP"
    },
    "539": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F6"
    },
    "542": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x228"
    },
    "545": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "546": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "548": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1191"
    },
    "551": {
      "fn": "HegicBot.setKeeper",
      "jump": "i",
      "offset": [
        4074,
        4207
      ],
      "op": "JUMP",
      "path": "11"
    },
    "552": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "553": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6D8"
    },
    "556": {
      "fn": "HegicBot.setKeeper",
      "jump": "i",
      "offset": [
        4074,
        4207
      ],
      "op": "JUMP",
      "path": "11"
    },
    "557": {
      "offset": [
        760,
        783
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "558": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "559": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "DUP1",
      "path": "11"
    },
    "560": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "561": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x239"
    },
    "564": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "565": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "567": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "DUP1",
      "path": "11"
    },
    "568": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "REVERT",
      "path": "11"
    },
    "569": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "570": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "POP",
      "path": "11"
    },
    "571": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16F"
    },
    "574": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x758"
    },
    "577": {
      "fn": "HegicBot.setKeeper",
      "jump": "i",
      "offset": [
        760,
        783
      ],
      "op": "JUMP",
      "path": "11"
    },
    "578": {
      "offset": [
        905,
        958
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "579": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "580": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "DUP1",
      "path": "11"
    },
    "581": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "582": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24E"
    },
    "585": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "586": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "588": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "DUP1",
      "path": "11"
    },
    "589": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "REVERT",
      "path": "11"
    },
    "590": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "591": {
      "op": "POP"
    },
    "592": {
      "offset": [
        905,
        958
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x262"
    },
    "595": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x25D"
    },
    "598": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "599": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "601": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1350"
    },
    "604": {
      "fn": "HegicBot.setKeeper",
      "jump": "i",
      "offset": [
        905,
        958
      ],
      "op": "JUMP",
      "path": "11"
    },
    "605": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "606": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x767"
    },
    "609": {
      "fn": "HegicBot.setKeeper",
      "jump": "i",
      "offset": [
        905,
        958
      ],
      "op": "JUMP",
      "path": "11"
    },
    "610": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "611": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "613": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "614": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x151"
    },
    "617": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "618": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "619": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "620": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "621": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1443"
    },
    "624": {
      "fn": "HegicBot.setKeeper",
      "jump": "i",
      "offset": [
        905,
        958
      ],
      "op": "JUMP",
      "path": "11"
    },
    "625": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "626": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "627": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "DUP1",
      "path": "11"
    },
    "628": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "629": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27D"
    },
    "632": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "633": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "635": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "DUP1",
      "path": "11"
    },
    "636": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "REVERT",
      "path": "11"
    },
    "637": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "638": {
      "op": "POP"
    },
    "639": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x144"
    },
    "642": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x28C"
    },
    "645": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "646": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "648": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1350"
    },
    "651": {
      "fn": "HegicBot.exercisable",
      "jump": "i",
      "offset": [
        2106,
        2953
      ],
      "op": "JUMP",
      "path": "11"
    },
    "652": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "653": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x792"
    },
    "656": {
      "fn": "HegicBot.exercisable",
      "jump": "i",
      "offset": [
        2106,
        2953
      ],
      "op": "JUMP",
      "path": "11"
    },
    "657": {
      "offset": [
        395,
        475
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "658": {
      "fn": "HegicBot.exercisable",
      "offset": [
        395,
        475
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "659": {
      "fn": "HegicBot.exercisable",
      "offset": [
        395,
        475
      ],
      "op": "DUP1",
      "path": "9"
    },
    "660": {
      "fn": "HegicBot.exercisable",
      "offset": [
        395,
        475
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "661": {
      "fn": "HegicBot.exercisable",
      "offset": [
        395,
        475
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29D"
    },
    "664": {
      "fn": "HegicBot.exercisable",
      "offset": [
        395,
        475
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "665": {
      "fn": "HegicBot.exercisable",
      "offset": [
        395,
        475
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "667": {
      "fn": "HegicBot.exercisable",
      "offset": [
        395,
        475
      ],
      "op": "DUP1",
      "path": "9"
    },
    "668": {
      "fn": "HegicBot.exercisable",
      "offset": [
        395,
        475
      ],
      "op": "REVERT",
      "path": "9"
    },
    "669": {
      "fn": "HegicBot.exercisable",
      "offset": [
        395,
        475
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "670": {
      "fn": "HegicBot.exercisable",
      "offset": [
        395,
        475
      ],
      "op": "POP",
      "path": "9"
    },
    "671": {
      "fn": "HegicBot.exercisable",
      "offset": [
        395,
        475
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16F"
    },
    "674": {
      "fn": "HegicBot.exercisable",
      "offset": [
        395,
        475
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9A4"
    },
    "677": {
      "fn": "HegicBot.exercisable",
      "jump": "i",
      "offset": [
        395,
        475
      ],
      "op": "JUMP",
      "path": "9"
    },
    "678": {
      "offset": [
        830,
        851
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "679": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "680": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "DUP1",
      "path": "11"
    },
    "681": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "682": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B2"
    },
    "685": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "686": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "688": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "DUP1",
      "path": "11"
    },
    "689": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "REVERT",
      "path": "11"
    },
    "690": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "691": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "POP",
      "path": "11"
    },
    "692": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16F"
    },
    "695": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9BC"
    },
    "698": {
      "fn": "HegicBot.exercisable",
      "jump": "i",
      "offset": [
        830,
        851
      ],
      "op": "JUMP",
      "path": "11"
    },
    "699": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "700": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "701": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "DUP1",
      "path": "11"
    },
    "702": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "703": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C7"
    },
    "706": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "707": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "709": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "DUP1",
      "path": "11"
    },
    "710": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "REVERT",
      "path": "11"
    },
    "711": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "712": {
      "op": "POP"
    },
    "713": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DB"
    },
    "716": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D6"
    },
    "719": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "720": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "722": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1350"
    },
    "725": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        2959,
        3871
      ],
      "op": "JUMP",
      "path": "11"
    },
    "726": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "727": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9CB"
    },
    "730": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        2959,
        3871
      ],
      "op": "JUMP",
      "path": "11"
    },
    "731": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "732": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "734": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "735": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x151"
    },
    "738": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "739": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "740": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "741": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x142A"
    },
    "744": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        2959,
        3871
      ],
      "op": "JUMP",
      "path": "11"
    },
    "745": {
      "offset": [
        789,
        824
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "746": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "747": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "DUP1",
      "path": "11"
    },
    "748": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "749": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F5"
    },
    "752": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "753": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "755": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "DUP1",
      "path": "11"
    },
    "756": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "REVERT",
      "path": "11"
    },
    "757": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "758": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "POP",
      "path": "11"
    },
    "759": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16F"
    },
    "762": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCAA"
    },
    "765": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        789,
        824
      ],
      "op": "JUMP",
      "path": "11"
    },
    "766": {
      "offset": [
        689,
        719
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "767": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "768": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "DUP1",
      "path": "11"
    },
    "769": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "770": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x30A"
    },
    "773": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "774": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "776": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "DUP1",
      "path": "11"
    },
    "777": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "REVERT",
      "path": "11"
    },
    "778": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "779": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "POP",
      "path": "11"
    },
    "780": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C9"
    },
    "783": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCB9"
    },
    "786": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        689,
        719
      ],
      "op": "JUMP",
      "path": "11"
    },
    "787": {
      "offset": [
        180,
        210
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "788": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "789": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "DUP1",
      "path": "10"
    },
    "790": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "791": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x31F"
    },
    "794": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "795": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "797": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "DUP1",
      "path": "10"
    },
    "798": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "REVERT",
      "path": "10"
    },
    "799": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "800": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "POP",
      "path": "10"
    },
    "801": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16F"
    },
    "804": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCBF"
    },
    "807": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        180,
        210
      ],
      "op": "JUMP",
      "path": "10"
    },
    "808": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "809": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "810": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "DUP1",
      "path": "11"
    },
    "811": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "812": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x334"
    },
    "815": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "816": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "818": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "DUP1",
      "path": "11"
    },
    "819": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "REVERT",
      "path": "11"
    },
    "820": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "821": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "POP",
      "path": "11"
    },
    "822": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F6"
    },
    "825": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCCE"
    },
    "828": {
      "fn": "HegicBot.acceptGovernor",
      "jump": "i",
      "offset": [
        4376,
        4474
      ],
      "op": "JUMP",
      "path": "11"
    },
    "829": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "830": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "831": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "DUP1",
      "path": "11"
    },
    "832": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "833": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x349"
    },
    "836": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "837": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "839": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "DUP1",
      "path": "11"
    },
    "840": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "REVERT",
      "path": "11"
    },
    "841": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "842": {
      "op": "POP"
    },
    "843": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F6"
    },
    "846": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x358"
    },
    "849": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "850": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "852": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1350"
    },
    "855": {
      "fn": "HegicBot.setWorkFee",
      "jump": "i",
      "offset": [
        3877,
        4068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "856": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "857": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD02"
    },
    "860": {
      "fn": "HegicBot.setWorkFee",
      "jump": "i",
      "offset": [
        3877,
        4068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "861": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "862": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "863": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "DUP1",
      "path": "11"
    },
    "864": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "865": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x369"
    },
    "868": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "869": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "871": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "DUP1",
      "path": "11"
    },
    "872": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "REVERT",
      "path": "11"
    },
    "873": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "874": {
      "op": "POP"
    },
    "875": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F6"
    },
    "878": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x378"
    },
    "881": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "882": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "884": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1191"
    },
    "887": {
      "fn": "HegicBot.setPendingGovernor",
      "jump": "i",
      "offset": [
        4231,
        4370
      ],
      "op": "JUMP",
      "path": "11"
    },
    "888": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "889": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD7C"
    },
    "892": {
      "fn": "HegicBot.setPendingGovernor",
      "jump": "i",
      "offset": [
        4231,
        4370
      ],
      "op": "JUMP",
      "path": "11"
    },
    "893": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "894": {
      "fn": "HegicBot.untrack",
      "offset": [
        1756,
        1760
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "896": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1804
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x387"
    },
    "899": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1804
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10DA"
    },
    "902": {
      "fn": "HegicBot.untrack",
      "jump": "i",
      "offset": [
        1772,
        1804
      ],
      "op": "JUMP",
      "path": "11"
    },
    "903": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1804
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "904": {
      "op": "POP"
    },
    "905": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "907": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "DUP3",
      "path": "11"
    },
    "908": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "DUP2",
      "path": "11"
    },
    "909": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "910": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1820
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "912": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "914": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "915": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "DUP2",
      "path": "11"
    },
    "916": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "917": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "919": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "920": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "DUP3",
      "path": "11"
    },
    "921": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "922": {
      "fn": "HegicBot.untrack",
      "offset": [
        1807,
        1836
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "923": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "DUP3",
      "path": "11"
    },
    "924": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "925": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "927": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "DUP2",
      "path": "11"
    },
    "928": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "ADD",
      "path": "11"
    },
    "929": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "DUP5",
      "path": "11"
    },
    "930": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "931": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "DUP2",
      "path": "11"
    },
    "932": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "939": {
      "op": "SHL"
    },
    "940": {
      "op": "SUB"
    },
    "941": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "AND",
      "path": "11"
    },
    "942": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "DUP1",
      "path": "11"
    },
    "943": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "DUP3",
      "path": "11"
    },
    "944": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "945": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "947": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "DUP4",
      "path": "11"
    },
    "948": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "ADD",
      "path": "11"
    },
    "949": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "950": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "951": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "DUP3",
      "path": "11"
    },
    "952": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "ADD",
      "path": "11"
    },
    "953": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "954": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "955": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "956": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "957": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "959": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "960": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "961": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "ADD",
      "path": "11"
    },
    "962": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "963": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "964": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "DUP2",
      "path": "11"
    },
    "965": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "ADD",
      "path": "11"
    },
    "966": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "967": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "968": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "969": {
      "fn": "HegicBot.untrack",
      "offset": [
        1772,
        1836
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "970": {
      "fn": "HegicBot.untrack",
      "offset": [
        1876,
        1886
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 0
    },
    "971": {
      "branch": 53,
      "fn": "HegicBot.untrack",
      "offset": [
        1854,
        1886
      ],
      "op": "EQ",
      "path": "11"
    },
    "972": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3F0"
    },
    "975": {
      "branch": 53,
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "976": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "978": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "979": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "983": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "985": {
      "op": "SHL"
    },
    "986": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "DUP2",
      "path": "11"
    },
    "987": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "988": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "990": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "ADD",
      "path": "11"
    },
    "991": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E7"
    },
    "994": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "995": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x170F"
    },
    "998": {
      "fn": "HegicBot.untrack",
      "jump": "i",
      "offset": [
        1846,
        1897
      ],
      "op": "JUMP",
      "path": "11"
    },
    "999": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1000": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1002": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1003": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1004": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1005": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "SUB",
      "path": "11"
    },
    "1006": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1007": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1008": {
      "fn": "HegicBot.untrack",
      "offset": [
        1846,
        1897
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1009": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1914
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 1,
      "value": "0x6"
    },
    "1011": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1914
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1012": {
      "fn": "HegicBot.untrack",
      "offset": [
        1959,
        1979
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1014": {
      "fn": "HegicBot.untrack",
      "offset": [
        1959,
        1979
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1015": {
      "fn": "HegicBot.untrack",
      "offset": [
        1959,
        1979
      ],
      "op": "ADD",
      "path": "11"
    },
    "1016": {
      "fn": "HegicBot.untrack",
      "offset": [
        1959,
        1979
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1017": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1019": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1020": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1027": {
      "op": "SHL"
    },
    "1028": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1029": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1036": {
      "op": "SHL"
    },
    "1037": {
      "op": "SUB"
    },
    "1038": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1914
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1039": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1914
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1040": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1914
      ],
      "op": "AND",
      "path": "11"
    },
    "1041": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1914
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1042": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1931
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x42842E0E"
    },
    "1047": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1931
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1048": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x427"
    },
    "1051": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1052": {
      "fn": "HegicBot.untrack",
      "offset": [
        1940,
        1944
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "1053": {
      "fn": "HegicBot.untrack",
      "offset": [
        1940,
        1944
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1054": {
      "fn": "HegicBot.untrack",
      "offset": [
        1947,
        1957
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1055": {
      "fn": "HegicBot.untrack",
      "offset": [
        1947,
        1957
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1056": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1058": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "ADD",
      "path": "11"
    },
    "1059": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1406"
    },
    "1062": {
      "fn": "HegicBot.untrack",
      "jump": "i",
      "offset": [
        1908,
        1980
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1063": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1064": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1066": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1068": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1069": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1070": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1071": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "SUB",
      "path": "11"
    },
    "1072": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1073": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1075": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1076": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1077": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "1078": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1079": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1080": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1081": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x441"
    },
    "1084": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1085": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1087": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1088": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1089": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1090": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "POP",
      "path": "11"
    },
    "1091": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "GAS",
      "path": "11"
    },
    "1092": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "CALL",
      "path": "11"
    },
    "1093": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1094": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1095": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1096": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x455"
    },
    "1099": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1100": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1101": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1103": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1104": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1105": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1106": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1108": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1109": {
      "fn": "HegicBot.untrack",
      "offset": [
        1908,
        1980
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1110": {
      "op": "POP"
    },
    "1111": {
      "op": "POP"
    },
    "1112": {
      "op": "POP"
    },
    "1113": {
      "fn": "HegicBot.untrack",
      "offset": [
        1997,
        2026
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 2,
      "value": "0x0"
    },
    "1115": {
      "fn": "HegicBot.untrack",
      "offset": [
        1997,
        2026
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1116": {
      "fn": "HegicBot.untrack",
      "offset": [
        1997,
        2026
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1117": {
      "fn": "HegicBot.untrack",
      "offset": [
        1997,
        2026
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1118": {
      "fn": "HegicBot.untrack",
      "offset": [
        1997,
        2010
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1120": {
      "fn": "HegicBot.untrack",
      "offset": [
        1997,
        2026
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1122": {
      "fn": "HegicBot.untrack",
      "offset": [
        1997,
        2026
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1123": {
      "fn": "HegicBot.untrack",
      "offset": [
        1997,
        2026
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1125": {
      "fn": "HegicBot.untrack",
      "offset": [
        1997,
        2026
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1126": {
      "fn": "HegicBot.untrack",
      "offset": [
        1997,
        2026
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1127": {
      "fn": "HegicBot.untrack",
      "offset": [
        1997,
        2026
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1128": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1129": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1136": {
      "op": "SHL"
    },
    "1137": {
      "op": "SUB"
    },
    "1138": {
      "op": "NOT"
    },
    "1139": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "AND",
      "path": "11"
    },
    "1140": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1141": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1142": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1144": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1145": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "ADD",
      "path": "11"
    },
    "1146": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1147": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1148": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1149": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1151": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "ADD",
      "path": "11"
    },
    "1152": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1153": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1154": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1155": {
      "fn": "HegicBot.untrack",
      "offset": [
        1990,
        2026
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1156": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "MLOAD",
      "path": "11",
      "statement": 3
    },
    "1157": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x68C53A7D31ABBC500522AFE9689FD451DF49957269EB7A9ABFA11B60B60627C6"
    },
    "1190": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1191": {
      "op": "POP"
    },
    "1192": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4B2"
    },
    "1195": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1196": {
      "fn": "HegicBot.untrack",
      "offset": [
        2011,
        2025
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1197": {
      "fn": "HegicBot.untrack",
      "offset": [
        2011,
        2025
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1198": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x172F"
    },
    "1201": {
      "fn": "HegicBot.untrack",
      "jump": "i",
      "offset": [
        2041,
        2071
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1202": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1203": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1205": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1206": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1207": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1208": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "SUB",
      "path": "11"
    },
    "1209": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1210": {
      "fn": "HegicBot.untrack",
      "offset": [
        2041,
        2071
      ],
      "op": "LOG1",
      "path": "11"
    },
    "1211": {
      "fn": "HegicBot.untrack",
      "offset": [
        2089,
        2093
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 4,
      "value": "0x1"
    },
    "1213": {
      "fn": "HegicBot.untrack",
      "offset": [
        2082,
        2093
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1214": {
      "fn": "HegicBot.untrack",
      "offset": [
        2082,
        2093
      ],
      "op": "POP",
      "path": "11"
    },
    "1215": {
      "fn": "HegicBot.untrack",
      "offset": [
        2082,
        2093
      ],
      "op": "POP",
      "path": "11"
    },
    "1216": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1217": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1218": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1219": {
      "fn": "HegicBot.untrack",
      "offset": [
        1688,
        2100
      ],
      "op": "POP",
      "path": "11"
    },
    "1220": {
      "fn": "HegicBot.untrack",
      "jump": "o",
      "offset": [
        1688,
        2100
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1221": {
      "offset": [
        151,
        174
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1222": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1224": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1231": {
      "op": "SHL"
    },
    "1232": {
      "op": "SUB"
    },
    "1233": {
      "offset": [
        151,
        174
      ],
      "op": "AND",
      "path": "10"
    },
    "1234": {
      "fn": "HegicBot.untrack",
      "offset": [
        151,
        174
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1235": {
      "fn": "HegicBot.untrack",
      "jump": "o",
      "offset": [
        151,
        174
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1236": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1237": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1246": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1247": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "POP",
      "path": "3"
    },
    "1248": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "POP",
      "path": "3"
    },
    "1249": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "POP",
      "path": "3"
    },
    "1250": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        530,
        692
      ],
      "op": "POP",
      "path": "3"
    },
    "1251": {
      "fn": "ERC721Holder.onERC721Received",
      "jump": "o",
      "offset": [
        530,
        692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1252": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1253": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1282
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 5,
      "value": "0x6"
    },
    "1255": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1282
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1256": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1258": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1259": {
      "op": "PUSH4",
      "value": "0x860FC78B"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1266": {
      "op": "SHL"
    },
    "1267": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1268": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1269": {
      "fn": "HegicBot.track",
      "offset": [
        1234,
        1256
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1271": {
      "fn": "HegicBot.track",
      "offset": [
        1234,
        1256
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1278": {
      "op": "SHL"
    },
    "1279": {
      "op": "SUB"
    },
    "1280": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1282
      ],
      "op": "AND",
      "path": "11"
    },
    "1281": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1282
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1282": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1295
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x860FC78B"
    },
    "1287": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1295
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1288": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x515"
    },
    "1291": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1292": {
      "fn": "HegicBot.track",
      "offset": [
        1296,
        1303
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1293": {
      "fn": "HegicBot.track",
      "offset": [
        1296,
        1303
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1294": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1296": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "ADD",
      "path": "11"
    },
    "1297": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x172F"
    },
    "1300": {
      "fn": "HegicBot.track",
      "jump": "i",
      "offset": [
        1276,
        1304
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1301": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1302": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1304": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1306": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1307": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1308": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1309": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "SUB",
      "path": "11"
    },
    "1310": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1311": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1312": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1313": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "1314": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1315": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1316": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1317": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x52D"
    },
    "1320": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1321": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1323": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1324": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1325": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1326": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "POP",
      "path": "11"
    },
    "1327": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "GAS",
      "path": "11"
    },
    "1328": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "1329": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1330": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1331": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1332": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x541"
    },
    "1335": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1336": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1337": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1339": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1340": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1341": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1342": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1344": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1345": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1346": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "POP",
      "path": "11"
    },
    "1347": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "POP",
      "path": "11"
    },
    "1348": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "POP",
      "path": "11"
    },
    "1349": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "POP",
      "path": "11"
    },
    "1350": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1352": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1353": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1354": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1356": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "NOT",
      "path": "11"
    },
    "1357": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1359": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1360": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "ADD",
      "path": "11"
    },
    "1361": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "AND",
      "path": "11"
    },
    "1362": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1363": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "ADD",
      "path": "11"
    },
    "1364": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1365": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1367": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1368": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "POP",
      "path": "11"
    },
    "1369": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1370": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "ADD",
      "path": "11"
    },
    "1371": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1372": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x565"
    },
    "1375": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1376": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1377": {
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12A5"
    },
    "1380": {
      "fn": "HegicBot.track",
      "jump": "i",
      "offset": [
        1276,
        1304
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1381": {
      "branch": 54,
      "fn": "HegicBot.track",
      "offset": [
        1276,
        1304
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1382": {
      "fn": "HegicBot.track",
      "offset": [
        1268,
        1324
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x581"
    },
    "1385": {
      "branch": 54,
      "fn": "HegicBot.track",
      "offset": [
        1268,
        1324
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1386": {
      "fn": "HegicBot.track",
      "offset": [
        1268,
        1324
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1388": {
      "fn": "HegicBot.track",
      "offset": [
        1268,
        1324
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1389": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1395": {
      "op": "SHL"
    },
    "1396": {
      "fn": "HegicBot.track",
      "offset": [
        1268,
        1324
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1397": {
      "fn": "HegicBot.track",
      "offset": [
        1268,
        1324
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1398": {
      "fn": "HegicBot.track",
      "offset": [
        1268,
        1324
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1400": {
      "fn": "HegicBot.track",
      "offset": [
        1268,
        1324
      ],
      "op": "ADD",
      "path": "11"
    },
    "1401": {
      "fn": "HegicBot.track",
      "offset": [
        1268,
        1324
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E7"
    },
    "1404": {
      "fn": "HegicBot.track",
      "offset": [
        1268,
        1324
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1405": {
      "fn": "HegicBot.track",
      "offset": [
        1268,
        1324
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1567"
    },
    "1408": {
      "fn": "HegicBot.track",
      "jump": "i",
      "offset": [
        1268,
        1324
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1409": {
      "fn": "HegicBot.track",
      "offset": [
        1268,
        1324
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1410": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1341
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 6,
      "value": "0x6"
    },
    "1412": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1341
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1413": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1415": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1416": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1423": {
      "op": "SHL"
    },
    "1424": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1425": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1432": {
      "op": "SHL"
    },
    "1433": {
      "op": "SUB"
    },
    "1434": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1435": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1341
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1436": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1341
      ],
      "op": "AND",
      "path": "11"
    },
    "1437": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1438": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1358
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x42842E0E"
    },
    "1443": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1358
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1444": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5B5"
    },
    "1447": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1448": {
      "fn": "HegicBot.track",
      "offset": [
        1359,
        1369
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1449": {
      "fn": "HegicBot.track",
      "offset": [
        1359,
        1369
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1450": {
      "fn": "HegicBot.track",
      "offset": [
        1379,
        1383
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "1451": {
      "fn": "HegicBot.track",
      "offset": [
        1379,
        1383
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1452": {
      "fn": "HegicBot.track",
      "offset": [
        1386,
        1393
      ],
      "op": "DUP9",
      "path": "11"
    },
    "1453": {
      "fn": "HegicBot.track",
      "offset": [
        1386,
        1393
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1454": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1456": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "ADD",
      "path": "11"
    },
    "1457": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1406"
    },
    "1460": {
      "fn": "HegicBot.track",
      "jump": "i",
      "offset": [
        1335,
        1394
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1461": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1462": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1464": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1466": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1467": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1468": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1469": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "SUB",
      "path": "11"
    },
    "1470": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1471": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1473": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1474": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1475": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "1476": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1477": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1478": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1479": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5CF"
    },
    "1482": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1483": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1485": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1486": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1487": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1488": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "POP",
      "path": "11"
    },
    "1489": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "GAS",
      "path": "11"
    },
    "1490": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "CALL",
      "path": "11"
    },
    "1491": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1492": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1493": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1494": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5E3"
    },
    "1497": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1498": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1499": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1501": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1502": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1503": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1504": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1506": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1507": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1508": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "POP",
      "path": "11"
    },
    "1509": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "POP",
      "path": "11"
    },
    "1510": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "POP",
      "path": "11"
    },
    "1511": {
      "fn": "HegicBot.track",
      "offset": [
        1335,
        1394
      ],
      "op": "POP",
      "path": "11"
    },
    "1512": {
      "fn": "HegicBot.track",
      "offset": [
        1405,
        1433
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 7,
      "value": "0x5F1"
    },
    "1515": {
      "fn": "HegicBot.track",
      "offset": [
        1405,
        1421
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "1517": {
      "fn": "HegicBot.track",
      "offset": [
        1405,
        1431
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDB2"
    },
    "1520": {
      "fn": "HegicBot.track",
      "jump": "i",
      "offset": [
        1405,
        1433
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1521": {
      "fn": "HegicBot.track",
      "offset": [
        1405,
        1433
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1522": {
      "fn": "HegicBot.track",
      "offset": [
        1460,
        1486
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 8,
      "value": "0x5FB"
    },
    "1525": {
      "fn": "HegicBot.track",
      "offset": [
        1460,
        1476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "1527": {
      "fn": "HegicBot.track",
      "offset": [
        1460,
        1484
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDBB"
    },
    "1530": {
      "fn": "HegicBot.track",
      "jump": "i",
      "offset": [
        1460,
        1486
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1531": {
      "fn": "HegicBot.track",
      "offset": [
        1460,
        1486
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1532": {
      "fn": "HegicBot.track",
      "offset": [
        1443,
        1486
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1533": {
      "fn": "HegicBot.track",
      "offset": [
        1443,
        1486
      ],
      "op": "POP",
      "path": "11"
    },
    "1534": {
      "fn": "HegicBot.track",
      "offset": [
        1496,
        1528
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x605"
    },
    "1537": {
      "fn": "HegicBot.track",
      "offset": [
        1496,
        1528
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10DA"
    },
    "1540": {
      "fn": "HegicBot.track",
      "jump": "i",
      "offset": [
        1496,
        1528
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1541": {
      "fn": "HegicBot.track",
      "offset": [
        1496,
        1528
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1542": {
      "op": "POP"
    },
    "1543": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1545": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1546": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1547": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1549": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1550": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "ADD",
      "path": "11"
    },
    "1551": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1552": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1553": {
      "fn": "HegicBot.track",
      "offset": [
        1544,
        1554
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1554": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1555": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1556": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1558": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1559": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1560": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "ADD",
      "path": "11"
    },
    "1561": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1562": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1563": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1564": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1565": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1566": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "ADD",
      "path": "11"
    },
    "1567": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1568": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1569": {
      "fn": "HegicBot.track",
      "offset": [
        1531,
        1577
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1572": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1616
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 9
    },
    "1573": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1616
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1574": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1616
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1575": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1600
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1577": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1616
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1578": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1616
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1579": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1616
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1580": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1616
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1581": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1616
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1582": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1616
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1583": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1616
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1584": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1585": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1586": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1587": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1594": {
      "op": "SHL"
    },
    "1595": {
      "op": "SUB"
    },
    "1596": {
      "op": "NOT"
    },
    "1597": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "AND",
      "path": "11"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1604": {
      "op": "SHL"
    },
    "1605": {
      "op": "SUB"
    },
    "1606": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1607": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1608": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "AND",
      "path": "11"
    },
    "1609": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "OR",
      "path": "11"
    },
    "1610": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1611": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1612": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1613": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1617": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "ADD",
      "path": "11"
    },
    "1618": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1619": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1620": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1621": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1623": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1624": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1625": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "ADD",
      "path": "11"
    },
    "1626": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1631
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1627": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "SWAP1",
      "path": "11",
      "statement": 10
    },
    "1628": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1629": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x24AE79748ECE8AE3861C36FB0DE7EF3E1C9774FF9C69F5054618B762E95CC5F4"
    },
    "1662": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1663": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x689"
    },
    "1666": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1667": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1616
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1668": {
      "fn": "HegicBot.track",
      "offset": [
        1587,
        1616
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1669": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x172F"
    },
    "1672": {
      "fn": "HegicBot.track",
      "jump": "i",
      "offset": [
        1647,
        1675
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1673": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1674": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1676": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1677": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1678": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1679": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "SUB",
      "path": "11"
    },
    "1680": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1681": {
      "fn": "HegicBot.track",
      "offset": [
        1647,
        1675
      ],
      "op": "LOG1",
      "path": "11"
    },
    "1682": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "POP",
      "path": "11"
    },
    "1683": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1684": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1685": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "POP",
      "path": "11"
    },
    "1686": {
      "fn": "HegicBot.track",
      "offset": [
        1154,
        1682
      ],
      "op": "POP",
      "path": "11"
    },
    "1687": {
      "fn": "HegicBot.track",
      "jump": "o",
      "offset": [
        1154,
        1682
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1688": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1689": {
      "offset": [
        881,
        889
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1691": {
      "fn": "HegicBot.sendDust",
      "offset": [
        881,
        889
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1698": {
      "op": "SHL"
    },
    "1699": {
      "op": "SUB"
    },
    "1700": {
      "offset": [
        881,
        889
      ],
      "op": "AND",
      "path": "10"
    },
    "1701": {
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1702": {
      "offset": [
        867,
        889
      ],
      "op": "EQ",
      "path": "10"
    },
    "1703": {
      "offset": [
        859,
        919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6C2"
    },
    "1706": {
      "offset": [
        859,
        919
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1707": {
      "fn": "HegicBot.sendDust",
      "offset": [
        859,
        919
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1709": {
      "fn": "HegicBot.sendDust",
      "offset": [
        859,
        919
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1716": {
      "op": "SHL"
    },
    "1717": {
      "offset": [
        859,
        919
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1718": {
      "fn": "HegicBot.sendDust",
      "offset": [
        859,
        919
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1719": {
      "fn": "HegicBot.sendDust",
      "offset": [
        859,
        919
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1721": {
      "fn": "HegicBot.sendDust",
      "offset": [
        859,
        919
      ],
      "op": "ADD",
      "path": "10"
    },
    "1722": {
      "fn": "HegicBot.sendDust",
      "offset": [
        859,
        919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E7"
    },
    "1725": {
      "fn": "HegicBot.sendDust",
      "offset": [
        859,
        919
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1726": {
      "fn": "HegicBot.sendDust",
      "offset": [
        859,
        919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15D1"
    },
    "1729": {
      "fn": "HegicBot.sendDust",
      "jump": "i",
      "offset": [
        859,
        919
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1730": {
      "fn": "HegicBot.sendDust",
      "offset": [
        859,
        919
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1731": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4639,
        4670
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 11,
      "value": "0x6CD"
    },
    "1734": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4649,
        4652
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1735": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4654,
        4660
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1736": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4662,
        4669
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1737": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4639,
        4648
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDBF"
    },
    "1740": {
      "fn": "HegicBot.sendDust",
      "jump": "i",
      "offset": [
        4639,
        4670
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1741": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4639,
        4670
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1742": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "POP",
      "path": "11"
    },
    "1743": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "POP",
      "path": "11"
    },
    "1744": {
      "fn": "HegicBot.sendDust",
      "offset": [
        4504,
        4677
      ],
      "op": "POP",
      "path": "11"
    },
    "1745": {
      "fn": "HegicBot.sendDust",
      "jump": "o",
      "offset": [
        4504,
        4677
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1746": {
      "offset": [
        725,
        753
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1747": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1749": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1750": {
      "fn": "HegicBot.sendDust",
      "offset": [
        725,
        753
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1751": {
      "fn": "HegicBot.sendDust",
      "jump": "o",
      "offset": [
        725,
        753
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1752": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1753": {
      "offset": [
        881,
        889
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1755": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        881,
        889
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1762": {
      "op": "SHL"
    },
    "1763": {
      "op": "SUB"
    },
    "1764": {
      "offset": [
        881,
        889
      ],
      "op": "AND",
      "path": "10"
    },
    "1765": {
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1766": {
      "offset": [
        867,
        889
      ],
      "op": "EQ",
      "path": "10"
    },
    "1767": {
      "offset": [
        859,
        919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x702"
    },
    "1770": {
      "offset": [
        859,
        919
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1771": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        859,
        919
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1773": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        859,
        919
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1774": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1780": {
      "op": "SHL"
    },
    "1781": {
      "offset": [
        859,
        919
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1782": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        859,
        919
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1783": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        859,
        919
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1785": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        859,
        919
      ],
      "op": "ADD",
      "path": "10"
    },
    "1786": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        859,
        919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E7"
    },
    "1789": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        859,
        919
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1790": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        859,
        919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15D1"
    },
    "1793": {
      "fn": "HegicBot.setKeeper",
      "jump": "i",
      "offset": [
        859,
        919
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1794": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        859,
        919
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1795": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4151,
        4157
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 12,
      "value": "0x8"
    },
    "1797": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4151,
        4167
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1798": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4151,
        4167
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1805": {
      "op": "SHL"
    },
    "1806": {
      "op": "SUB"
    },
    "1807": {
      "op": "NOT"
    },
    "1808": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4151,
        4167
      ],
      "op": "AND",
      "path": "11"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1815": {
      "op": "SHL"
    },
    "1816": {
      "op": "SUB"
    },
    "1817": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4151,
        4167
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1818": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4151,
        4167
      ],
      "op": "AND",
      "path": "11"
    },
    "1819": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4151,
        4167
      ],
      "op": "OR",
      "path": "11"
    },
    "1820": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4151,
        4167
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1821": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4151,
        4167
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1822": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 13,
      "value": "0x40"
    },
    "1824": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1825": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xDC3DBA1D64DD67C0DC8B12621EDD0C6CA4303A9073C3A8FCAC38115E73D67B6B"
    },
    "1858": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1859": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x74D"
    },
    "1862": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1863": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4151,
        4167
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1864": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4151,
        4167
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1865": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13F2"
    },
    "1868": {
      "fn": "HegicBot.setKeeper",
      "jump": "i",
      "offset": [
        4182,
        4200
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1869": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1870": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1872": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1873": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1874": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1875": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "SUB",
      "path": "11"
    },
    "1876": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1877": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4182,
        4200
      ],
      "op": "LOG1",
      "path": "11"
    },
    "1878": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        4074,
        4207
      ],
      "op": "POP",
      "path": "11"
    },
    "1879": {
      "fn": "HegicBot.setKeeper",
      "jump": "o",
      "offset": [
        4074,
        4207
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1880": {
      "offset": [
        760,
        783
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1881": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "1883": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1890": {
      "op": "SHL"
    },
    "1891": {
      "op": "SUB"
    },
    "1892": {
      "offset": [
        760,
        783
      ],
      "op": "AND",
      "path": "11"
    },
    "1893": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        760,
        783
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1894": {
      "fn": "HegicBot.setKeeper",
      "jump": "o",
      "offset": [
        760,
        783
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1895": {
      "offset": [
        905,
        958
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1896": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1898": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1900": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1901": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1903": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1904": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1905": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1906": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1908": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1909": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1910": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1911": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1912": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1914": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1915": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "ADD",
      "path": "11"
    },
    "1916": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1917": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1919": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1920": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1921": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "ADD",
      "path": "11"
    },
    "1922": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1929": {
      "op": "SHL"
    },
    "1930": {
      "op": "SUB"
    },
    "1931": {
      "offset": [
        905,
        958
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1932": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1933": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "AND",
      "path": "11"
    },
    "1934": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1935": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1936": {
      "fn": "HegicBot.setKeeper",
      "offset": [
        905,
        958
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1937": {
      "fn": "HegicBot.setKeeper",
      "jump": "o",
      "offset": [
        905,
        958
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1938": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1939": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2183,
        2187
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1941": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2231
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x79C"
    },
    "1944": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2231
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10DA"
    },
    "1947": {
      "fn": "HegicBot.exercisable",
      "jump": "i",
      "offset": [
        2199,
        2231
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1948": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2231
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1949": {
      "op": "POP"
    },
    "1950": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1952": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1953": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1954": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1955": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2247
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1957": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1959": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1960": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1961": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1962": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1964": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1965": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1966": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1967": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2234,
        2263
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1968": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1969": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1970": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1972": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1973": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "ADD",
      "path": "11"
    },
    "1974": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1975": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1976": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1977": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1984": {
      "op": "SHL"
    },
    "1985": {
      "op": "SUB"
    },
    "1986": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "AND",
      "path": "11"
    },
    "1987": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1988": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1989": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1991": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1992": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "ADD",
      "path": "11"
    },
    "1993": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1994": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1995": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1996": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "ADD",
      "path": "11"
    },
    "1997": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1998": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1999": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2000": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2001": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2003": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "ADD",
      "path": "11"
    },
    "2004": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2005": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2006": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2007": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "ADD",
      "path": "11"
    },
    "2008": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2009": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2010": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2011": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2199,
        2263
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2012": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2273,
        2293
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7E3"
    },
    "2015": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2273,
        2293
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1104"
    },
    "2018": {
      "fn": "HegicBot.exercisable",
      "jump": "i",
      "offset": [
        2273,
        2293
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2019": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2273,
        2293
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2020": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2302
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "2022": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2302
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2023": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2329,
        2349
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2025": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2329,
        2349
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2026": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2329,
        2349
      ],
      "op": "ADD",
      "path": "11"
    },
    "2027": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2329,
        2349
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2028": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2030": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2031": {
      "op": "PUSH4",
      "value": "0x71240D9D"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2038": {
      "op": "SHL"
    },
    "2039": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2040": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2047": {
      "op": "SHL"
    },
    "2048": {
      "op": "SUB"
    },
    "2049": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2302
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2050": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2302
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2051": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2302
      ],
      "op": "AND",
      "path": "11"
    },
    "2052": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2302
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2053": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2328
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE2481B3A"
    },
    "2058": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2328
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2059": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x816"
    },
    "2062": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2063": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2065": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "ADD",
      "path": "11"
    },
    "2066": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x172F"
    },
    "2069": {
      "fn": "HegicBot.exercisable",
      "jump": "i",
      "offset": [
        2296,
        2350
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2070": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2071": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "2074": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2076": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2077": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2078": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2079": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "SUB",
      "path": "11"
    },
    "2080": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2081": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2082": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2083": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "2084": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2085": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2086": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2087": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x82F"
    },
    "2090": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2091": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2093": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2094": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2095": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2096": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "POP",
      "path": "11"
    },
    "2097": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "GAS",
      "path": "11"
    },
    "2098": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "2099": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2100": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2101": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2102": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x843"
    },
    "2105": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2106": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2107": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2109": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2110": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2111": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2112": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2114": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2115": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2116": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "POP",
      "path": "11"
    },
    "2117": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "POP",
      "path": "11"
    },
    "2118": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "POP",
      "path": "11"
    },
    "2119": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "POP",
      "path": "11"
    },
    "2120": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2122": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2123": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2124": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2126": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "NOT",
      "path": "11"
    },
    "2127": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2129": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2130": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "ADD",
      "path": "11"
    },
    "2131": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "AND",
      "path": "11"
    },
    "2132": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2133": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "ADD",
      "path": "11"
    },
    "2134": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2135": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2137": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2138": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "POP",
      "path": "11"
    },
    "2139": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2140": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "ADD",
      "path": "11"
    },
    "2141": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2142": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x867"
    },
    "2145": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2146": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2147": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12C5"
    },
    "2150": {
      "fn": "HegicBot.exercisable",
      "jump": "i",
      "offset": [
        2296,
        2350
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2151": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2296,
        2350
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2152": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2273,
        2350
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2153": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2273,
        2350
      ],
      "op": "POP",
      "path": "11"
    },
    "2154": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2385,
        2400
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "2155": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2365,
        2371
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2156": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2365,
        2382
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "2158": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2365,
        2382
      ],
      "op": "ADD",
      "path": "11"
    },
    "2159": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2365,
        2382
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2160": {
      "branch": 55,
      "fn": "HegicBot.exercisable",
      "offset": [
        2365,
        2400
      ],
      "op": "LT",
      "path": "11"
    },
    "2161": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2365,
        2432
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2162": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2365,
        2432
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x888"
    },
    "2165": {
      "branch": 55,
      "fn": "HegicBot.exercisable",
      "offset": [
        2365,
        2432
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2166": {
      "op": "POP"
    },
    "2167": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2420,
        2432
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2169": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2404,
        2416
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2170": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2404,
        2416
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2171": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2404,
        2432
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2173": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2404,
        2432
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2174": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2404,
        2432
      ],
      "op": "GT",
      "path": "11"
    },
    "2175": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2404,
        2432
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2176": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2404,
        2432
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x885"
    },
    "2179": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2404,
        2432
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2180": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2404,
        2432
      ],
      "op": "INVALID",
      "path": "11"
    },
    "2181": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2404,
        2432
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2182": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2404,
        2432
      ],
      "op": "EQ",
      "path": "11"
    },
    "2183": {
      "branch": 56,
      "fn": "HegicBot.exercisable",
      "offset": [
        2404,
        2432
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2184": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2365,
        2432
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2185": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2361,
        2471
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2186": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2361,
        2471
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x898"
    },
    "2189": {
      "branch": 56,
      "fn": "HegicBot.exercisable",
      "offset": [
        2361,
        2471
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2190": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2455,
        2460
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 14,
      "value": "0x0"
    },
    "2192": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2448,
        2460
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2193": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2448,
        2460
      ],
      "op": "POP",
      "path": "11"
    },
    "2194": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2448,
        2460
      ],
      "op": "POP",
      "path": "11"
    },
    "2195": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2448,
        2460
      ],
      "op": "POP",
      "path": "11"
    },
    "2196": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2448,
        2460
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C0"
    },
    "2199": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2448,
        2460
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2200": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2361,
        2471
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2201": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2485,
        2503
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2202": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2485,
        2503
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2209": {
      "op": "SHL"
    },
    "2210": {
      "op": "SUB"
    },
    "2211": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2485,
        2517
      ],
      "op": "AND",
      "path": "11"
    },
    "2212": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2507,
        2517
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2213": {
      "branch": 57,
      "fn": "HegicBot.exercisable",
      "offset": [
        2485,
        2517
      ],
      "op": "EQ",
      "path": "11"
    },
    "2214": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2481,
        2555
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2215": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2481,
        2555
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8B5"
    },
    "2218": {
      "branch": 57,
      "fn": "HegicBot.exercisable",
      "offset": [
        2481,
        2555
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2219": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2540,
        2544
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 15,
      "value": "0x1"
    },
    "2221": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2533,
        2544
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2222": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2533,
        2544
      ],
      "op": "POP",
      "path": "11"
    },
    "2223": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2533,
        2544
      ],
      "op": "POP",
      "path": "11"
    },
    "2224": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2533,
        2544
      ],
      "op": "POP",
      "path": "11"
    },
    "2225": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2533,
        2544
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C0"
    },
    "2228": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2533,
        2544
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2229": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2481,
        2555
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2230": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2609
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "2232": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2609
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2233": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2235": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2236": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2237": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2244": {
      "op": "SHL"
    },
    "2245": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2246": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2247": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2248": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2249": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2568,
        2586
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2251": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2568,
        2586
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2258": {
      "op": "SHL"
    },
    "2259": {
      "op": "SUB"
    },
    "2260": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2609
      ],
      "op": "AND",
      "path": "11"
    },
    "2261": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2609
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2262": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2625
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFEAF968C"
    },
    "2267": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2625
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2268": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2270": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2271": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2272": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "ADD",
      "path": "11"
    },
    "2273": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2274": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "2276": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2277": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2278": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2279": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2280": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2281": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "SUB",
      "path": "11"
    },
    "2282": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "ADD",
      "path": "11"
    },
    "2283": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2284": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2609
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2285": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2286": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "2287": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2288": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2289": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2290": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8FA"
    },
    "2293": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2294": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2296": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2297": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2298": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2299": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "POP",
      "path": "11"
    },
    "2300": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "GAS",
      "path": "11"
    },
    "2301": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "2302": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2303": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2304": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2305": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x90E"
    },
    "2308": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2309": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2310": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2312": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2313": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2314": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2315": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2317": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2318": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2319": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "POP",
      "path": "11"
    },
    "2320": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "POP",
      "path": "11"
    },
    "2321": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "POP",
      "path": "11"
    },
    "2322": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "POP",
      "path": "11"
    },
    "2323": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2325": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2326": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2327": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2329": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "NOT",
      "path": "11"
    },
    "2330": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2332": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2333": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "ADD",
      "path": "11"
    },
    "2334": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "AND",
      "path": "11"
    },
    "2335": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2336": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "ADD",
      "path": "11"
    },
    "2337": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2338": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2340": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2341": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "POP",
      "path": "11"
    },
    "2342": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2343": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "ADD",
      "path": "11"
    },
    "2344": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2345": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x932"
    },
    "2348": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2349": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2350": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13A1"
    },
    "2353": {
      "fn": "HegicBot.exercisable",
      "jump": "i",
      "offset": [
        2596,
        2627
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2354": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2596,
        2627
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2355": {
      "op": "POP"
    },
    "2356": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2565,
        2627
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2357": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2565,
        2627
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2358": {
      "op": "POP"
    },
    "2359": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2565,
        2627
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2360": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2565,
        2627
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2361": {
      "op": "POP"
    },
    "2362": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2716,
        2731
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2364": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2716,
        2731
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2365": {
      "op": "POP"
    },
    "2366": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x944"
    },
    "2369": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2370": {
      "op": "POP"
    },
    "2371": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2372": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2373": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2701
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2374": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2712
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "2376": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2712
      ],
      "op": "ADD",
      "path": "11"
    },
    "2377": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2712
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2378": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2380": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2381": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "GT",
      "path": "11"
    },
    "2382": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2383": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x954"
    },
    "2386": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2387": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "INVALID",
      "path": "11"
    },
    "2388": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2389": {
      "branch": 58,
      "fn": "HegicBot.exercisable",
      "offset": [
        2695,
        2731
      ],
      "op": "EQ",
      "path": "11"
    },
    "2390": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2691,
        2924
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2391": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2691,
        2924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x96D"
    },
    "2394": {
      "branch": 58,
      "fn": "HegicBot.exercisable",
      "offset": [
        2691,
        2924
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2395": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2770,
        2782
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 16
    },
    "2396": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2770,
        2794
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2398": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2770,
        2794
      ],
      "op": "ADD",
      "path": "11"
    },
    "2399": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2770,
        2794
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2400": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2754,
        2766
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2401": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2754,
        2794
      ],
      "op": "LT",
      "path": "11"
    },
    "2402": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2754,
        2794
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2403": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2747,
        2794
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2404": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2747,
        2794
      ],
      "op": "POP",
      "path": "11"
    },
    "2405": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2747,
        2794
      ],
      "op": "POP",
      "path": "11"
    },
    "2406": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2747,
        2794
      ],
      "op": "POP",
      "path": "11"
    },
    "2407": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2747,
        2794
      ],
      "op": "POP",
      "path": "11"
    },
    "2408": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2747,
        2794
      ],
      "op": "POP",
      "path": "11"
    },
    "2409": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2747,
        2794
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C0"
    },
    "2412": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2747,
        2794
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2413": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2691,
        2924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2414": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2836,
        2850
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2416": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2821
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2417": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "2419": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2832
      ],
      "op": "ADD",
      "path": "11"
    },
    "2420": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2832
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2421": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2850
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2423": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2850
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2424": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2850
      ],
      "op": "GT",
      "path": "11"
    },
    "2425": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2850
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2426": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2850
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x97F"
    },
    "2429": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2850
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2430": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2850
      ],
      "op": "INVALID",
      "path": "11"
    },
    "2431": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2850
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2432": {
      "branch": 59,
      "fn": "HegicBot.exercisable",
      "offset": [
        2815,
        2850
      ],
      "op": "EQ",
      "path": "11"
    },
    "2433": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2811,
        2924
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2434": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2811,
        2924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x998"
    },
    "2437": {
      "branch": 59,
      "fn": "HegicBot.exercisable",
      "offset": [
        2811,
        2924
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2438": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2889,
        2901
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 17
    },
    "2439": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2889,
        2913
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2441": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2889,
        2913
      ],
      "op": "ADD",
      "path": "11"
    },
    "2442": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2889,
        2913
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2443": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2873,
        2885
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2444": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2873,
        2913
      ],
      "op": "GT",
      "path": "11"
    },
    "2445": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2873,
        2913
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2446": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2866,
        2913
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2447": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2866,
        2913
      ],
      "op": "POP",
      "path": "11"
    },
    "2448": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2866,
        2913
      ],
      "op": "POP",
      "path": "11"
    },
    "2449": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2866,
        2913
      ],
      "op": "POP",
      "path": "11"
    },
    "2450": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2866,
        2913
      ],
      "op": "POP",
      "path": "11"
    },
    "2451": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2866,
        2913
      ],
      "op": "POP",
      "path": "11"
    },
    "2452": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2866,
        2913
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C0"
    },
    "2455": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2866,
        2913
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2456": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2811,
        2924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2457": {
      "op": "POP"
    },
    "2458": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2941,
        2946
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 18,
      "value": "0x0"
    },
    "2460": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2941,
        2946
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "2461": {
      "fn": "HegicBot.exercisable",
      "offset": [
        2106,
        2953
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2462": {
      "op": "POP"
    },
    "2463": {
      "op": "POP"
    },
    "2464": {
      "op": "POP"
    },
    "2465": {
      "op": "POP"
    },
    "2466": {
      "op": "POP"
    },
    "2467": {
      "fn": "HegicBot.exercisable",
      "jump": "o",
      "offset": [
        2106,
        2953
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2468": {
      "offset": [
        395,
        475
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2469": {
      "offset": [
        433,
        475
      ],
      "op": "PUSH20",
      "path": "9",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "2490": {
      "offset": [
        395,
        475
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2491": {
      "fn": "HegicBot.exercisable",
      "jump": "o",
      "offset": [
        395,
        475
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2492": {
      "offset": [
        830,
        851
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2493": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "2495": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2502": {
      "op": "SHL"
    },
    "2503": {
      "op": "SUB"
    },
    "2504": {
      "offset": [
        830,
        851
      ],
      "op": "AND",
      "path": "11"
    },
    "2505": {
      "fn": "HegicBot.exercisable",
      "offset": [
        830,
        851
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2506": {
      "fn": "HegicBot.exercisable",
      "jump": "o",
      "offset": [
        830,
        851
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2507": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2508": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 19,
      "value": "0x40"
    },
    "2510": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2511": {
      "op": "PUSH4",
      "value": "0x9915FEEF"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2518": {
      "op": "SHL"
    },
    "2519": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2520": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2521": {
      "fn": "HegicBot.exercise",
      "offset": [
        3028,
        3035
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2523": {
      "fn": "HegicBot.exercise",
      "offset": [
        3028,
        3035
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2524": {
      "fn": "HegicBot.exercise",
      "offset": [
        3028,
        3035
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2525": {
      "fn": "HegicBot.exercise",
      "offset": [
        3028,
        3035
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2526": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3068
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "2527": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3068
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2528": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3080
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x9915FEEF"
    },
    "2533": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3080
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2534": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9F3"
    },
    "2537": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2538": {
      "fn": "HegicBot.exercise",
      "offset": [
        3081,
        3095
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2539": {
      "fn": "HegicBot.exercise",
      "offset": [
        3081,
        3095
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2540": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2542": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "ADD",
      "path": "11"
    },
    "2543": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x172F"
    },
    "2546": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        3064,
        3096
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2547": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2548": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2550": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2552": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2553": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2554": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2555": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "SUB",
      "path": "11"
    },
    "2556": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2557": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2558": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2559": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "2560": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2561": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2562": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2563": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA0B"
    },
    "2566": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2567": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2569": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2570": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2571": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2572": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "POP",
      "path": "11"
    },
    "2573": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "GAS",
      "path": "11"
    },
    "2574": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "2575": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2576": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2577": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2578": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA1F"
    },
    "2581": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2582": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2583": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2585": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2586": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2587": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2588": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2590": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2591": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2592": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "POP",
      "path": "11"
    },
    "2593": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "POP",
      "path": "11"
    },
    "2594": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "POP",
      "path": "11"
    },
    "2595": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "POP",
      "path": "11"
    },
    "2596": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2598": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2599": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2600": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2602": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "NOT",
      "path": "11"
    },
    "2603": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2605": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2606": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "ADD",
      "path": "11"
    },
    "2607": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "AND",
      "path": "11"
    },
    "2608": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2609": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "ADD",
      "path": "11"
    },
    "2610": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2611": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2613": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2614": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "POP",
      "path": "11"
    },
    "2615": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2616": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "ADD",
      "path": "11"
    },
    "2617": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2618": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA43"
    },
    "2621": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2622": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2623": {
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12A5"
    },
    "2626": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        3064,
        3096
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2627": {
      "branch": 60,
      "fn": "HegicBot.exercise",
      "offset": [
        3064,
        3096
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2628": {
      "fn": "HegicBot.exercise",
      "offset": [
        3056,
        3131
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA5F"
    },
    "2631": {
      "branch": 60,
      "fn": "HegicBot.exercise",
      "offset": [
        3056,
        3131
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2632": {
      "fn": "HegicBot.exercise",
      "offset": [
        3056,
        3131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2634": {
      "fn": "HegicBot.exercise",
      "offset": [
        3056,
        3131
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2635": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2641": {
      "op": "SHL"
    },
    "2642": {
      "fn": "HegicBot.exercise",
      "offset": [
        3056,
        3131
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2643": {
      "fn": "HegicBot.exercise",
      "offset": [
        3056,
        3131
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2644": {
      "fn": "HegicBot.exercise",
      "offset": [
        3056,
        3131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2646": {
      "fn": "HegicBot.exercise",
      "offset": [
        3056,
        3131
      ],
      "op": "ADD",
      "path": "11"
    },
    "2647": {
      "fn": "HegicBot.exercise",
      "offset": [
        3056,
        3131
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E7"
    },
    "2650": {
      "fn": "HegicBot.exercise",
      "offset": [
        3056,
        3131
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2651": {
      "fn": "HegicBot.exercise",
      "offset": [
        3056,
        3131
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16D8"
    },
    "2654": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        3056,
        3131
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2655": {
      "fn": "HegicBot.exercise",
      "offset": [
        3056,
        3131
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2656": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3174
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA67"
    },
    "2659": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3174
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10DA"
    },
    "2662": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        3142,
        3174
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2663": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3174
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2664": {
      "op": "POP"
    },
    "2665": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2667": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2668": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2669": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2670": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3190
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "2672": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2674": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2675": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2676": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2677": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2679": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2680": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2681": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2682": {
      "fn": "HegicBot.exercise",
      "offset": [
        3177,
        3206
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2683": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2684": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2685": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "2687": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2688": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "ADD",
      "path": "11"
    },
    "2689": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2690": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2691": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2692": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2699": {
      "op": "SHL"
    },
    "2700": {
      "op": "SUB"
    },
    "2701": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2702": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2703": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "AND",
      "path": "11"
    },
    "2704": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2705": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2706": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2708": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2709": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "ADD",
      "path": "11"
    },
    "2710": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2711": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2712": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2713": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "ADD",
      "path": "11"
    },
    "2714": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2715": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2716": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2717": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2719": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2720": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2721": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "ADD",
      "path": "11"
    },
    "2722": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2723": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2724": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2725": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "ADD",
      "path": "11"
    },
    "2726": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2727": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3223
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 20,
      "value": "0x6"
    },
    "2729": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3223
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2730": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2731": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2732": {
      "op": "PUSH4",
      "value": "0x7A979293"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2739": {
      "op": "SHL"
    },
    "2740": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2741": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2742": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2743": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2744": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3223
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2745": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3223
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2746": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3223
      ],
      "op": "AND",
      "path": "11"
    },
    "2747": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3223
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2748": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3238
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF52F2526"
    },
    "2753": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3238
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2754": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xACE"
    },
    "2757": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2758": {
      "fn": "HegicBot.exercise",
      "offset": [
        3142,
        3206
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2759": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2761": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "ADD",
      "path": "11"
    },
    "2762": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x172F"
    },
    "2765": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        3217,
        3260
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2766": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2767": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2769": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2771": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2772": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2773": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2774": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "SUB",
      "path": "11"
    },
    "2775": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2776": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2778": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2779": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2780": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "2781": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2782": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2783": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2784": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAE8"
    },
    "2787": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2788": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2790": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2791": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2792": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2793": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "POP",
      "path": "11"
    },
    "2794": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "GAS",
      "path": "11"
    },
    "2795": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "CALL",
      "path": "11"
    },
    "2796": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2797": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2798": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2799": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAFC"
    },
    "2802": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2803": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2804": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2806": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2807": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2808": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2809": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2811": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2812": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2813": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "POP",
      "path": "11"
    },
    "2814": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "POP",
      "path": "11"
    },
    "2815": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "POP",
      "path": "11"
    },
    "2816": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "POP",
      "path": "11"
    },
    "2817": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2819": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2820": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2821": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2823": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "NOT",
      "path": "11"
    },
    "2824": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2826": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2827": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "ADD",
      "path": "11"
    },
    "2828": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "AND",
      "path": "11"
    },
    "2829": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2830": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "ADD",
      "path": "11"
    },
    "2831": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2832": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2834": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2835": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "POP",
      "path": "11"
    },
    "2836": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2837": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "ADD",
      "path": "11"
    },
    "2838": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2839": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB20"
    },
    "2842": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2843": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2844": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1368"
    },
    "2847": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        3217,
        3260
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2848": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2849": {
      "fn": "HegicBot.exercise",
      "offset": [
        3217,
        3260
      ],
      "op": "POP",
      "path": "11"
    },
    "2850": {
      "fn": "HegicBot.exercise",
      "offset": [
        3271,
        3290
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2852": {
      "fn": "HegicBot.exercise",
      "offset": [
        3293,
        3314
      ],
      "op": "SELFBALANCE",
      "path": "11"
    },
    "2853": {
      "fn": "HegicBot.exercise",
      "offset": [
        3271,
        3314
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2854": {
      "fn": "HegicBot.exercise",
      "offset": [
        3271,
        3314
      ],
      "op": "POP",
      "path": "11"
    },
    "2855": {
      "fn": "HegicBot.exercise",
      "offset": [
        3324,
        3340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2857": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3380
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB49"
    },
    "2860": {
      "fn": "HegicBot.exercise",
      "offset": [
        3372,
        3379
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2862": {
      "fn": "HegicBot.exercise",
      "offset": [
        3372,
        3379
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2863": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3367
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB43"
    },
    "2866": {
      "fn": "HegicBot.exercise",
      "offset": [
        3359,
        3366
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "2868": {
      "fn": "HegicBot.exercise",
      "offset": [
        3359,
        3366
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2869": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3354
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2870": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3358
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF30"
    },
    "2873": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3358
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2874": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3367
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2875": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3367
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2876": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3367
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "2881": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3367
      ],
      "op": "AND",
      "path": "11"
    },
    "2882": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        3343,
        3367
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2883": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3367
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2884": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3371
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2885": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3371
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF73"
    },
    "2888": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        3343,
        3380
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2889": {
      "fn": "HegicBot.exercise",
      "offset": [
        3343,
        3380
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2890": {
      "fn": "HegicBot.exercise",
      "offset": [
        3324,
        3380
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2891": {
      "fn": "HegicBot.exercise",
      "offset": [
        3324,
        3380
      ],
      "op": "POP",
      "path": "11"
    },
    "2892": {
      "fn": "HegicBot.exercise",
      "offset": [
        3409,
        3410
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 21,
      "value": "0x0"
    },
    "2894": {
      "fn": "HegicBot.exercise",
      "offset": [
        3398,
        3406
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2895": {
      "branch": 61,
      "fn": "HegicBot.exercise",
      "offset": [
        3398,
        3410
      ],
      "op": "GT",
      "path": "11"
    },
    "2896": {
      "fn": "HegicBot.exercise",
      "offset": [
        3390,
        3424
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB6B"
    },
    "2899": {
      "branch": 61,
      "fn": "HegicBot.exercise",
      "offset": [
        3390,
        3424
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2900": {
      "fn": "HegicBot.exercise",
      "offset": [
        3390,
        3424
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2902": {
      "fn": "HegicBot.exercise",
      "offset": [
        3390,
        3424
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2903": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2909": {
      "op": "SHL"
    },
    "2910": {
      "fn": "HegicBot.exercise",
      "offset": [
        3390,
        3424
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2911": {
      "fn": "HegicBot.exercise",
      "offset": [
        3390,
        3424
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2912": {
      "fn": "HegicBot.exercise",
      "offset": [
        3390,
        3424
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2914": {
      "fn": "HegicBot.exercise",
      "offset": [
        3390,
        3424
      ],
      "op": "ADD",
      "path": "11"
    },
    "2915": {
      "fn": "HegicBot.exercise",
      "offset": [
        3390,
        3424
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E7"
    },
    "2918": {
      "fn": "HegicBot.exercise",
      "offset": [
        3390,
        3424
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2919": {
      "fn": "HegicBot.exercise",
      "offset": [
        3390,
        3424
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1608"
    },
    "2922": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        3390,
        3424
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2923": {
      "fn": "HegicBot.exercise",
      "offset": [
        3390,
        3424
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2924": {
      "fn": "HegicBot.exercise",
      "offset": [
        3443,
        3451
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 22,
      "value": "0x0"
    },
    "2926": {
      "fn": "HegicBot.exercise",
      "offset": [
        3443,
        3451
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2927": {
      "fn": "HegicBot.exercise",
      "offset": [
        3443,
        3451
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2928": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2930": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2937": {
      "op": "SHL"
    },
    "2938": {
      "op": "SUB"
    },
    "2939": {
      "fn": "HegicBot.exercise",
      "offset": [
        3443,
        3451
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2940": {
      "fn": "HegicBot.exercise",
      "offset": [
        3443,
        3451
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2941": {
      "fn": "HegicBot.exercise",
      "offset": [
        3443,
        3451
      ],
      "op": "AND",
      "path": "11"
    },
    "2942": {
      "fn": "HegicBot.exercise",
      "offset": [
        3443,
        3451
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2943": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2944": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2945": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8FC"
    },
    "2948": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "MUL",
      "path": "11"
    },
    "2949": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2950": {
      "fn": "HegicBot.exercise",
      "offset": [
        3462,
        3470
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2951": {
      "fn": "HegicBot.exercise",
      "offset": [
        3462,
        3470
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2952": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2953": {
      "fn": "HegicBot.exercise",
      "offset": [
        3443,
        3451
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2954": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2955": {
      "fn": "HegicBot.exercise",
      "offset": [
        3462,
        3470
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2956": {
      "fn": "HegicBot.exercise",
      "offset": [
        3443,
        3451
      ],
      "op": "DUP9",
      "path": "11"
    },
    "2957": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "DUP9",
      "path": "11"
    },
    "2958": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "CALL",
      "path": "11"
    },
    "2959": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2960": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "POP",
      "path": "11"
    },
    "2961": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "POP",
      "path": "11"
    },
    "2962": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "POP",
      "path": "11"
    },
    "2963": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "POP",
      "path": "11"
    },
    "2964": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2965": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2966": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2967": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBA4"
    },
    "2970": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2971": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2972": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2974": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2975": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2976": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2977": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2979": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2980": {
      "fn": "HegicBot.exercise",
      "offset": [
        3435,
        3471
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2981": {
      "op": "POP"
    },
    "2982": {
      "fn": "HegicBot.exercise",
      "offset": [
        3551,
        3557
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "2984": {
      "fn": "HegicBot.exercise",
      "offset": [
        3551,
        3557
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2985": {
      "fn": "HegicBot.exercise",
      "offset": [
        3502,
        3523
      ],
      "op": "SELFBALANCE",
      "path": "11"
    },
    "2986": {
      "fn": "HegicBot.exercise",
      "offset": [
        3502,
        3523
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2993": {
      "op": "SHL"
    },
    "2994": {
      "op": "SUB"
    },
    "2995": {
      "fn": "HegicBot.exercise",
      "offset": [
        3551,
        3557
      ],
      "op": "AND",
      "path": "11"
    },
    "2996": {
      "fn": "HegicBot.exercise",
      "offset": [
        3537,
        3547
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2997": {
      "branch": 62,
      "fn": "HegicBot.exercise",
      "offset": [
        3537,
        3557
      ],
      "op": "EQ",
      "path": "11"
    },
    "2998": {
      "fn": "HegicBot.exercise",
      "offset": [
        3533,
        3697
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2999": {
      "fn": "HegicBot.exercise",
      "offset": [
        3533,
        3697
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBFA"
    },
    "3002": {
      "branch": 62,
      "fn": "HegicBot.exercise",
      "offset": [
        3533,
        3697
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3003": {
      "fn": "HegicBot.exercise",
      "offset": [
        3581,
        3587
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 23,
      "value": "0x8"
    },
    "3005": {
      "fn": "HegicBot.exercise",
      "offset": [
        3581,
        3587
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3006": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3008": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3015": {
      "op": "SHL"
    },
    "3016": {
      "op": "SUB"
    },
    "3017": {
      "fn": "HegicBot.exercise",
      "offset": [
        3581,
        3587
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3018": {
      "fn": "HegicBot.exercise",
      "offset": [
        3581,
        3587
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3019": {
      "fn": "HegicBot.exercise",
      "offset": [
        3581,
        3587
      ],
      "op": "AND",
      "path": "11"
    },
    "3020": {
      "fn": "HegicBot.exercise",
      "offset": [
        3581,
        3587
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3021": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3022": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3023": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8FC"
    },
    "3026": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "MUL",
      "path": "11"
    },
    "3027": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3028": {
      "fn": "HegicBot.exercise",
      "offset": [
        3598,
        3607
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3029": {
      "fn": "HegicBot.exercise",
      "offset": [
        3598,
        3607
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3030": {
      "fn": "HegicBot.exercise",
      "offset": [
        3581,
        3587
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3032": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3033": {
      "fn": "HegicBot.exercise",
      "offset": [
        3581,
        3587
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3034": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3035": {
      "fn": "HegicBot.exercise",
      "offset": [
        3598,
        3607
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3036": {
      "fn": "HegicBot.exercise",
      "offset": [
        3581,
        3587
      ],
      "op": "DUP9",
      "path": "11"
    },
    "3037": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "DUP9",
      "path": "11"
    },
    "3038": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "CALL",
      "path": "11"
    },
    "3039": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3040": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "POP",
      "path": "11"
    },
    "3041": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "POP",
      "path": "11"
    },
    "3042": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "POP",
      "path": "11"
    },
    "3043": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "POP",
      "path": "11"
    },
    "3044": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3045": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3046": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3047": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBF4"
    },
    "3050": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3051": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3052": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3054": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3055": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "3056": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3057": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3059": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3060": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3061": {
      "fn": "HegicBot.exercise",
      "offset": [
        3573,
        3608
      ],
      "op": "POP",
      "path": "11"
    },
    "3062": {
      "fn": "HegicBot.exercise",
      "offset": [
        3533,
        3697
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC35"
    },
    "3065": {
      "fn": "HegicBot.exercise",
      "offset": [
        3533,
        3697
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3066": {
      "fn": "HegicBot.exercise",
      "offset": [
        3533,
        3697
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3067": {
      "fn": "HegicBot.exercise",
      "offset": [
        3647,
        3665
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 24
    },
    "3068": {
      "fn": "HegicBot.exercise",
      "offset": [
        3647,
        3665
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3069": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3071": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3078": {
      "op": "SHL"
    },
    "3079": {
      "op": "SUB"
    },
    "3080": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3675
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3081": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3675
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3082": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3675
      ],
      "op": "AND",
      "path": "11"
    },
    "3083": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3675
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3084": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3085": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3086": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8FC"
    },
    "3089": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "MUL",
      "path": "11"
    },
    "3090": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3091": {
      "fn": "HegicBot.exercise",
      "offset": [
        3676,
        3685
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3092": {
      "fn": "HegicBot.exercise",
      "offset": [
        3676,
        3685
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3093": {
      "fn": "HegicBot.exercise",
      "offset": [
        3647,
        3665
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3095": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3096": {
      "fn": "HegicBot.exercise",
      "offset": [
        3647,
        3665
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3097": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3098": {
      "fn": "HegicBot.exercise",
      "offset": [
        3676,
        3685
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3099": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3675
      ],
      "op": "DUP9",
      "path": "11"
    },
    "3100": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "DUP9",
      "path": "11"
    },
    "3101": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "CALL",
      "path": "11"
    },
    "3102": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3103": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "POP",
      "path": "11"
    },
    "3104": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "POP",
      "path": "11"
    },
    "3105": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "POP",
      "path": "11"
    },
    "3106": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "POP",
      "path": "11"
    },
    "3107": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3108": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3109": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3110": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC33"
    },
    "3113": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3114": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3115": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3117": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3118": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "3119": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3120": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3122": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3123": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3124": {
      "fn": "HegicBot.exercise",
      "offset": [
        3639,
        3686
      ],
      "op": "POP",
      "path": "11"
    },
    "3125": {
      "fn": "HegicBot.exercise",
      "offset": [
        3533,
        3697
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3126": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3743
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 25,
      "value": "0x0"
    },
    "3128": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3743
      ],
      "op": "DUP8",
      "path": "11"
    },
    "3129": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3743
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3130": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3743
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3131": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3727
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "3133": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3743
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3135": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3743
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3136": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3743
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3137": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3743
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3138": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3743
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3140": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3743
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3141": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3743
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3142": {
      "fn": "HegicBot.exercise",
      "offset": [
        3714,
        3743
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3143": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3144": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3151": {
      "op": "SHL"
    },
    "3152": {
      "op": "SUB"
    },
    "3153": {
      "op": "NOT"
    },
    "3154": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "AND",
      "path": "11"
    },
    "3155": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3156": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3157": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3159": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3160": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "ADD",
      "path": "11"
    },
    "3161": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3162": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3163": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3164": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3166": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "ADD",
      "path": "11"
    },
    "3167": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3168": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3169": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3170": {
      "fn": "HegicBot.exercise",
      "offset": [
        3707,
        3743
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3171": {
      "fn": "HegicBot.exercise",
      "offset": [
        3781,
        3801
      ],
      "op": "DUP6",
      "path": "11",
      "statement": 26
    },
    "3172": {
      "fn": "HegicBot.exercise",
      "offset": [
        3781,
        3801
      ],
      "op": "ADD",
      "path": "11"
    },
    "3173": {
      "fn": "HegicBot.exercise",
      "offset": [
        3781,
        3801
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3174": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3175": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3176": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x357E4621AAB1F5C18E53573F7E5C6FE3A6B2C90A4650813C730E5C761D3F2BF1"
    },
    "3209": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3210": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC94"
    },
    "3213": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3214": {
      "fn": "HegicBot.exercise",
      "offset": [
        3803,
        3814
      ],
      "op": "DUP7",
      "path": "11"
    },
    "3215": {
      "fn": "HegicBot.exercise",
      "offset": [
        3803,
        3814
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3216": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1738"
    },
    "3219": {
      "fn": "HegicBot.exercise",
      "jump": "i",
      "offset": [
        3759,
        3815
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3220": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3221": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3223": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3224": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3225": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3226": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "SUB",
      "path": "11"
    },
    "3227": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3228": {
      "fn": "HegicBot.exercise",
      "offset": [
        3759,
        3815
      ],
      "op": "LOG1",
      "path": "11"
    },
    "3229": {
      "fn": "HegicBot.exercise",
      "offset": [
        3834,
        3852
      ],
      "op": "SWAP3",
      "path": "11",
      "statement": 27
    },
    "3230": {
      "fn": "HegicBot.exercise",
      "offset": [
        3834,
        3852
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3231": {
      "fn": "HegicBot.exercise",
      "offset": [
        3834,
        3852
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3232": {
      "op": "POP"
    },
    "3233": {
      "fn": "HegicBot.exercise",
      "offset": [
        3854,
        3863
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3234": {
      "fn": "HegicBot.exercise",
      "offset": [
        3854,
        3863
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3235": {
      "op": "POP"
    },
    "3236": {
      "op": "POP"
    },
    "3237": {
      "op": "POP"
    },
    "3238": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3239": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "POP",
      "path": "11"
    },
    "3240": {
      "fn": "HegicBot.exercise",
      "offset": [
        2959,
        3871
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3241": {
      "fn": "HegicBot.exercise",
      "jump": "o",
      "offset": [
        2959,
        3871
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3242": {
      "offset": [
        789,
        824
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3243": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3245": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3252": {
      "op": "SHL"
    },
    "3253": {
      "op": "SUB"
    },
    "3254": {
      "offset": [
        789,
        824
      ],
      "op": "AND",
      "path": "11"
    },
    "3255": {
      "fn": "HegicBot.exercise",
      "offset": [
        789,
        824
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3256": {
      "fn": "HegicBot.exercise",
      "jump": "o",
      "offset": [
        789,
        824
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3257": {
      "offset": [
        689,
        719
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3258": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3260": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3261": {
      "fn": "HegicBot.exercise",
      "offset": [
        689,
        719
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3262": {
      "fn": "HegicBot.exercise",
      "jump": "o",
      "offset": [
        689,
        719
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3263": {
      "offset": [
        180,
        210
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3264": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3266": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3273": {
      "op": "SHL"
    },
    "3274": {
      "op": "SUB"
    },
    "3275": {
      "offset": [
        180,
        210
      ],
      "op": "AND",
      "path": "10"
    },
    "3276": {
      "fn": "HegicBot.exercise",
      "offset": [
        180,
        210
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3277": {
      "fn": "HegicBot.exercise",
      "jump": "o",
      "offset": [
        180,
        210
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3278": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4376,
        4474
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3279": {
      "offset": [
        1004,
        1019
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3281": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        1004,
        1019
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3288": {
      "op": "SHL"
    },
    "3289": {
      "op": "SUB"
    },
    "3290": {
      "offset": [
        1004,
        1019
      ],
      "op": "AND",
      "path": "10"
    },
    "3291": {
      "offset": [
        990,
        1000
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3292": {
      "offset": [
        990,
        1019
      ],
      "op": "EQ",
      "path": "10"
    },
    "3293": {
      "offset": [
        982,
        1057
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCF8"
    },
    "3296": {
      "offset": [
        982,
        1057
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3297": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        982,
        1057
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3299": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        982,
        1057
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3300": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3306": {
      "op": "SHL"
    },
    "3307": {
      "offset": [
        982,
        1057
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3308": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        982,
        1057
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3309": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        982,
        1057
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3311": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        982,
        1057
      ],
      "op": "ADD",
      "path": "10"
    },
    "3312": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        982,
        1057
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E7"
    },
    "3315": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        982,
        1057
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3316": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        982,
        1057
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1526"
    },
    "3319": {
      "fn": "HegicBot.acceptGovernor",
      "jump": "i",
      "offset": [
        982,
        1057
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3320": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        982,
        1057
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3321": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4450,
        4467
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 28,
      "value": "0xD00"
    },
    "3324": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4450,
        4465
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFB5"
    },
    "3327": {
      "fn": "HegicBot.acceptGovernor",
      "jump": "i",
      "offset": [
        4450,
        4467
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3328": {
      "fn": "HegicBot.acceptGovernor",
      "offset": [
        4450,
        4467
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3329": {
      "fn": "HegicBot.acceptGovernor",
      "jump": "o",
      "offset": [
        4376,
        4474
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3330": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3877,
        4068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3331": {
      "offset": [
        881,
        889
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3333": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        881,
        889
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3340": {
      "op": "SHL"
    },
    "3341": {
      "op": "SUB"
    },
    "3342": {
      "offset": [
        881,
        889
      ],
      "op": "AND",
      "path": "10"
    },
    "3343": {
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3344": {
      "offset": [
        867,
        889
      ],
      "op": "EQ",
      "path": "10"
    },
    "3345": {
      "offset": [
        859,
        919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD2C"
    },
    "3348": {
      "offset": [
        859,
        919
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3349": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        859,
        919
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3351": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        859,
        919
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3358": {
      "op": "SHL"
    },
    "3359": {
      "offset": [
        859,
        919
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3360": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        859,
        919
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3361": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        859,
        919
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3363": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        859,
        919
      ],
      "op": "ADD",
      "path": "10"
    },
    "3364": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        859,
        919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E7"
    },
    "3367": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        859,
        919
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3368": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        859,
        919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15D1"
    },
    "3371": {
      "fn": "HegicBot.setWorkFee",
      "jump": "i",
      "offset": [
        859,
        919
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3372": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        859,
        919
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3373": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3975,
        3976
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 29,
      "value": "0x0"
    },
    "3375": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3964,
        3972
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3376": {
      "branch": 63,
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3964,
        3976
      ],
      "op": "GT",
      "path": "11"
    },
    "3377": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3964,
        3997
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3378": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3964,
        3997
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3379": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3964,
        3997
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD3E"
    },
    "3382": {
      "branch": 63,
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3964,
        3997
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3383": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3964,
        3997
      ],
      "op": "POP",
      "path": "11"
    },
    "3384": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3992,
        3997
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2710"
    },
    "3387": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3980,
        3988
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3388": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3980,
        3997
      ],
      "op": "GT",
      "path": "11"
    },
    "3389": {
      "branch": 64,
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3980,
        3997
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3390": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3964,
        3997
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3391": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3956,
        3998
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD47"
    },
    "3394": {
      "branch": 64,
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3956,
        3998
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3395": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3956,
        3998
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3397": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3956,
        3998
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3398": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3956,
        3998
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3399": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        3956,
        3998
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3400": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4008,
        4015
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 30,
      "value": "0x5"
    },
    "3402": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4008,
        4026
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3403": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4008,
        4026
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3404": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4008,
        4026
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3405": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4041,
        4061
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 31,
      "value": "0x40"
    },
    "3407": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4041,
        4061
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3408": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4041,
        4061
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xED621CA660E6E87126DDF80CFE0083EAA5BE46F2999C915CF8787E420A2C8D1F"
    },
    "3441": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4041,
        4061
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3442": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4041,
        4061
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x74D"
    },
    "3445": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4041,
        4061
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3446": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4018,
        4026
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3447": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4018,
        4026
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3448": {
      "fn": "HegicBot.setWorkFee",
      "offset": [
        4041,
        4061
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x172F"
    },
    "3451": {
      "fn": "HegicBot.setWorkFee",
      "jump": "i",
      "offset": [
        4041,
        4061
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3452": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3453": {
      "offset": [
        881,
        889
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3455": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        881,
        889
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3462": {
      "op": "SHL"
    },
    "3463": {
      "op": "SUB"
    },
    "3464": {
      "offset": [
        881,
        889
      ],
      "op": "AND",
      "path": "10"
    },
    "3465": {
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3466": {
      "offset": [
        867,
        889
      ],
      "op": "EQ",
      "path": "10"
    },
    "3467": {
      "offset": [
        859,
        919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDA6"
    },
    "3470": {
      "offset": [
        859,
        919
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3471": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        859,
        919
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3473": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        859,
        919
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3474": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3480": {
      "op": "SHL"
    },
    "3481": {
      "offset": [
        859,
        919
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3482": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        859,
        919
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3483": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        859,
        919
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3485": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        859,
        919
      ],
      "op": "ADD",
      "path": "10"
    },
    "3486": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        859,
        919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E7"
    },
    "3489": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        859,
        919
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3490": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        859,
        919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15D1"
    },
    "3493": {
      "fn": "HegicBot.setPendingGovernor",
      "jump": "i",
      "offset": [
        859,
        919
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3494": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        859,
        919
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3495": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4326,
        4363
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 32,
      "value": "0xDAF"
    },
    "3498": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4346,
        4362
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3499": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4326,
        4345
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1005"
    },
    "3502": {
      "fn": "HegicBot.setPendingGovernor",
      "jump": "i",
      "offset": [
        4326,
        4363
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3503": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4326,
        4363
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3504": {
      "fn": "HegicBot.setPendingGovernor",
      "offset": [
        4231,
        4370
      ],
      "op": "POP",
      "path": "11"
    },
    "3505": {
      "fn": "HegicBot.setPendingGovernor",
      "jump": "o",
      "offset": [
        4231,
        4370
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3506": {
      "fn": "Counters.increment",
      "offset": [
        1216,
        1394
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3507": {
      "fn": "Counters.increment",
      "offset": [
        1368,
        1387
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 33
    },
    "3508": {
      "fn": "Counters.increment",
      "offset": [
        1368,
        1387
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3509": {
      "fn": "Counters.increment",
      "offset": [
        1386,
        1387
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3511": {
      "fn": "Counters.increment",
      "offset": [
        1368,
        1387
      ],
      "op": "ADD",
      "path": "7"
    },
    "3512": {
      "fn": "Counters.increment",
      "offset": [
        1368,
        1387
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3513": {
      "fn": "Counters.increment",
      "offset": [
        1368,
        1387
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3514": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        1216,
        1394
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3515": {
      "fn": "Counters.current",
      "offset": [
        1098,
        1210
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3516": {
      "fn": "Counters.current",
      "offset": [
        1189,
        1203
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 34
    },
    "3517": {
      "fn": "Counters.current",
      "offset": [
        1189,
        1203
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3518": {
      "fn": "Counters.current",
      "jump": "o",
      "offset": [
        1098,
        1210
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3519": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        977,
        1482
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3526": {
      "op": "SHL"
    },
    "3527": {
      "op": "SUB"
    },
    "3528": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1099,
        1116
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 35
    },
    "3529": {
      "branch": 65,
      "fn": "CollectableDust._sendDust",
      "offset": [
        1099,
        1116
      ],
      "op": "AND",
      "path": "9"
    },
    "3530": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1091,
        1169
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDE5"
    },
    "3533": {
      "branch": 65,
      "fn": "CollectableDust._sendDust",
      "offset": [
        1091,
        1169
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3534": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1091,
        1169
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3536": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1091,
        1169
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3537": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3543": {
      "op": "SHL"
    },
    "3544": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1091,
        1169
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3545": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1091,
        1169
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3546": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1091,
        1169
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3548": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1091,
        1169
      ],
      "op": "ADD",
      "path": "9"
    },
    "3549": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1091,
        1169
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3E7"
    },
    "3552": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1091,
        1169
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3553": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1091,
        1169
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1688"
    },
    "3556": {
      "fn": "CollectableDust._sendDust",
      "jump": "i",
      "offset": [
        1091,
        1169
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3557": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1091,
        1169
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3558": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1188,
        1219
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 36,
      "value": "0xDF0"
    },
    "3561": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1188,
        1202
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "3563": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1212,
        1218
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3564": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1188,
        1211
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1076"
    },
    "3567": {
      "fn": "CollectableDust._sendDust",
      "jump": "i",
      "offset": [
        1188,
        1219
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3568": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1188,
        1219
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3569": {
      "branch": 66,
      "fn": "CollectableDust._sendDust",
      "offset": [
        1187,
        1219
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3570": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1179,
        1271
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE0D"
    },
    "3573": {
      "branch": 66,
      "fn": "CollectableDust._sendDust",
      "offset": [
        1179,
        1271
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3574": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1179,
        1271
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3576": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1179,
        1271
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3577": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3583": {
      "op": "SHL"
    },
    "3584": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1179,
        1271
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3585": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1179,
        1271
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3586": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1179,
        1271
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3588": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1179,
        1271
      ],
      "op": "ADD",
      "path": "9"
    },
    "3589": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1179,
        1271
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3E7"
    },
    "3592": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1179,
        1271
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3593": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1179,
        1271
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14D7"
    },
    "3596": {
      "fn": "CollectableDust._sendDust",
      "jump": "i",
      "offset": [
        1179,
        1271
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3597": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1179,
        1271
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3604": {
      "op": "SHL"
    },
    "3605": {
      "op": "SUB"
    },
    "3606": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1285,
        1306
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3607": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1285,
        1306
      ],
      "op": "AND",
      "path": "9"
    },
    "3608": {
      "offset": [
        433,
        475
      ],
      "op": "PUSH20",
      "path": "9",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "3629": {
      "branch": 67,
      "fn": "CollectableDust._sendDust",
      "offset": [
        1285,
        1306
      ],
      "op": "EQ",
      "path": "9"
    },
    "3630": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1281,
        1431
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3631": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1281,
        1431
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE6E"
    },
    "3634": {
      "branch": 67,
      "fn": "CollectableDust._sendDust",
      "offset": [
        1281,
        1431
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3635": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 37,
      "value": "0x40"
    },
    "3637": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3644": {
      "op": "SHL"
    },
    "3645": {
      "op": "SUB"
    },
    "3646": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1343
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3647": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1343
      ],
      "op": "AND",
      "path": "9"
    },
    "3648": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1343
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3649": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3650": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3651": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8FC"
    },
    "3654": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "MUL",
      "path": "9"
    },
    "3655": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3656": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1344,
        1351
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3657": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1344,
        1351
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3658": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3660": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3661": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3662": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3663": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1344,
        1351
      ],
      "op": "DUP6",
      "path": "9"
    },
    "3664": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1343
      ],
      "op": "DUP9",
      "path": "9"
    },
    "3665": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "DUP9",
      "path": "9"
    },
    "3666": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "CALL",
      "path": "9"
    },
    "3667": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "3668": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "POP",
      "path": "9"
    },
    "3669": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "POP",
      "path": "9"
    },
    "3670": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "POP",
      "path": "9"
    },
    "3671": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "POP",
      "path": "9"
    },
    "3672": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3673": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3674": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3675": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE68"
    },
    "3678": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3679": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "3680": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3682": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3683": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "3684": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "3685": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3687": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3688": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3689": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1322,
        1352
      ],
      "op": "POP",
      "path": "9"
    },
    "3690": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1281,
        1431
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEF0"
    },
    "3693": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1281,
        1431
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3694": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1281,
        1431
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3695": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 38,
      "value": "0x40"
    },
    "3697": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3698": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3705": {
      "op": "SHL"
    },
    "3706": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3707": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3714": {
      "op": "SHL"
    },
    "3715": {
      "op": "SUB"
    },
    "3716": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1406
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3717": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1406
      ],
      "op": "AND",
      "path": "9"
    },
    "3718": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1406
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3719": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1406
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA9059CBB"
    },
    "3724": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1406
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3725": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE9C"
    },
    "3728": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3729": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1407,
        1410
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3730": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1407,
        1410
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3731": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1412,
        1419
      ],
      "op": "DUP6",
      "path": "9"
    },
    "3732": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1412,
        1419
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3733": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3735": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "ADD",
      "path": "9"
    },
    "3736": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x142A"
    },
    "3739": {
      "fn": "CollectableDust._sendDust",
      "jump": "i",
      "offset": [
        1383,
        1420
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3740": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3741": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3743": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3745": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3746": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3747": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3748": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "SUB",
      "path": "9"
    },
    "3749": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3750": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3752": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP8",
      "path": "9"
    },
    "3753": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3754": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "3755": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3756": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3757": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3758": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEB6"
    },
    "3761": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3762": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3764": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3765": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3766": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3767": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "POP",
      "path": "9"
    },
    "3768": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "GAS",
      "path": "9"
    },
    "3769": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "CALL",
      "path": "9"
    },
    "3770": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3771": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3772": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3773": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xECA"
    },
    "3776": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3777": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "3778": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3780": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3781": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "3782": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "3783": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3785": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3786": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3787": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "POP",
      "path": "9"
    },
    "3788": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "POP",
      "path": "9"
    },
    "3789": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "POP",
      "path": "9"
    },
    "3790": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "POP",
      "path": "9"
    },
    "3791": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3793": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3794": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "3795": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "3797": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "NOT",
      "path": "9"
    },
    "3798": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "3800": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3801": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "ADD",
      "path": "9"
    },
    "3802": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "AND",
      "path": "9"
    },
    "3803": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3804": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "ADD",
      "path": "9"
    },
    "3805": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3806": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3808": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3809": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "POP",
      "path": "9"
    },
    "3810": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3811": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "ADD",
      "path": "9"
    },
    "3812": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3813": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEEE"
    },
    "3816": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3817": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3818": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12A5"
    },
    "3821": {
      "fn": "CollectableDust._sendDust",
      "jump": "i",
      "offset": [
        1383,
        1420
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3822": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3823": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1383,
        1420
      ],
      "op": "POP",
      "path": "9"
    },
    "3824": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1281,
        1431
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3825": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "PUSH32",
      "path": "9",
      "statement": 39,
      "value": "0x1E34C1AEE8E83C2DCC14C21BB4BFEEA7F46C0C998CB797AC7CC4D7A18F5C656B"
    },
    "3858": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1454,
        1457
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3859": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1459,
        1465
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3860": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1467,
        1474
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3861": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3863": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3864": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF23"
    },
    "3867": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "3868": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3869": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3870": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3871": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1406"
    },
    "3874": {
      "fn": "CollectableDust._sendDust",
      "jump": "i",
      "offset": [
        1445,
        1475
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3875": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3876": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3878": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3879": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3880": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3881": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "SUB",
      "path": "9"
    },
    "3882": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3883": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        1445,
        1475
      ],
      "op": "LOG1",
      "path": "9"
    },
    "3884": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        977,
        1482
      ],
      "op": "POP",
      "path": "9"
    },
    "3885": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        977,
        1482
      ],
      "op": "POP",
      "path": "9"
    },
    "3886": {
      "fn": "CollectableDust._sendDust",
      "offset": [
        977,
        1482
      ],
      "op": "POP",
      "path": "9"
    },
    "3887": {
      "fn": "CollectableDust._sendDust",
      "jump": "o",
      "offset": [
        977,
        1482
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3888": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3889": {
      "fn": "SafeMath.mul",
      "offset": [
        2238,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3891": {
      "branch": 69,
      "fn": "SafeMath.mul",
      "offset": [
        2479,
        2485
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3892": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3F"
    },
    "3895": {
      "branch": 69,
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3896": {
      "op": "POP"
    },
    "3897": {
      "fn": "SafeMath.mul",
      "offset": [
        2508,
        2509
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 40,
      "value": "0x0"
    },
    "3899": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6D"
    },
    "3902": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3903": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3904": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3905": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3906": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "MUL",
      "path": "1"
    },
    "3907": {
      "fn": "SafeMath.mul",
      "offset": [
        2546,
        2547
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3908": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3909": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3910": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3911": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 41,
      "value": "0xF4C"
    },
    "3914": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3915": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "INVALID",
      "path": "1"
    },
    "3916": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3917": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "DIV",
      "path": "1"
    },
    "3918": {
      "branch": 70,
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2575
      ],
      "op": "EQ",
      "path": "1"
    },
    "3919": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6A"
    },
    "3922": {
      "branch": 70,
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3923": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3925": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3926": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3932": {
      "op": "SHL"
    },
    "3933": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3934": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3935": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3937": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "1"
    },
    "3938": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E7"
    },
    "3941": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3942": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1590"
    },
    "3945": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3946": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3947": {
      "fn": "SafeMath.mul",
      "offset": [
        2631,
        2632
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 42
    },
    "3948": {
      "op": "POP"
    },
    "3949": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3950": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3951": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3952": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "POP",
      "path": "1"
    },
    "3953": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "POP",
      "path": "1"
    },
    "3954": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3955": {
      "fn": "SafeMath.div",
      "offset": [
        3101,
        3231
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3956": {
      "fn": "SafeMath.div",
      "offset": [
        3159,
        3166
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3958": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 43,
      "value": "0xF6A"
    },
    "3961": {
      "fn": "SafeMath.div",
      "offset": [
        3189,
        3190
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3962": {
      "fn": "SafeMath.div",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3963": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3965": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3966": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3967": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3969": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "1"
    },
    "3970": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3972": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3973": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3974": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "3976": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3977": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3978": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3980": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "1"
    },
    "3981": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "4014": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4015": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4016": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "POP",
      "path": "1"
    },
    "4017": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3188
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x108B"
    },
    "4020": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3185,
        3224
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4021": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        671,
        821
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4022": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        728,
        743
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 44,
      "value": "0x1"
    },
    "4024": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        728,
        743
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4025": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        728,
        743
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4026": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        728,
        743
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4028": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        717,
        743
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4029": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        717,
        743
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4036": {
      "op": "SHL"
    },
    "4037": {
      "op": "SUB"
    },
    "4038": {
      "op": "NOT"
    },
    "4039": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        717,
        743
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4040": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        717,
        743
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4041": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        717,
        743
      ],
      "op": "AND",
      "path": "10"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4048": {
      "op": "SHL"
    },
    "4049": {
      "op": "SUB"
    },
    "4050": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        728,
        743
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4051": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        728,
        743
      ],
      "op": "AND",
      "path": "10"
    },
    "4052": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        717,
        743
      ],
      "op": "OR",
      "path": "10"
    },
    "4053": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        717,
        743
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4054": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        717,
        743
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4055": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        753,
        781
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 45
    },
    "4056": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        753,
        781
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4057": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        753,
        781
      ],
      "op": "AND",
      "path": "10"
    },
    "4058": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        753,
        781
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4059": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        753,
        781
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4060": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        753,
        781
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4061": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        796,
        814
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 46,
      "value": "0x40"
    },
    "4063": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        796,
        814
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4064": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        796,
        814
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x7880F0FCC848E1F26E461654B100A69F8D0641E29AA29F6596C6AFADBB36B5EA"
    },
    "4097": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        796,
        814
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4098": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        728,
        743
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4099": {
      "fn": "Governable._acceptGovernor",
      "offset": [
        796,
        814
      ],
      "op": "LOG1",
      "path": "10"
    },
    "4100": {
      "fn": "Governable._acceptGovernor",
      "jump": "o",
      "offset": [
        671,
        821
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4101": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        391,
        665
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4108": {
      "op": "SHL"
    },
    "4109": {
      "op": "SUB"
    },
    "4110": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        473,
        503
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 47
    },
    "4111": {
      "branch": 68,
      "fn": "Governable._setPendingGovernor",
      "offset": [
        473,
        503
      ],
      "op": "AND",
      "path": "10"
    },
    "4112": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        465,
        563
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x102B"
    },
    "4115": {
      "branch": 68,
      "fn": "Governable._setPendingGovernor",
      "offset": [
        465,
        563
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4116": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        465,
        563
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4118": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        465,
        563
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4125": {
      "op": "SHL"
    },
    "4126": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        465,
        563
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4127": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        465,
        563
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4128": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        465,
        563
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4130": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        465,
        563
      ],
      "op": "ADD",
      "path": "10"
    },
    "4131": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        465,
        563
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E7"
    },
    "4134": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        465,
        563
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4135": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        465,
        563
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x162B"
    },
    "4138": {
      "fn": "Governable._setPendingGovernor",
      "jump": "i",
      "offset": [
        465,
        563
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4139": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        465,
        563
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4140": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        573,
        588
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 48,
      "value": "0x1"
    },
    "4142": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        573,
        607
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4143": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        573,
        607
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4150": {
      "op": "SHL"
    },
    "4151": {
      "op": "SUB"
    },
    "4152": {
      "op": "NOT"
    },
    "4153": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        573,
        607
      ],
      "op": "AND",
      "path": "10"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4160": {
      "op": "SHL"
    },
    "4161": {
      "op": "SUB"
    },
    "4162": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        573,
        607
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4163": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        573,
        607
      ],
      "op": "AND",
      "path": "10"
    },
    "4164": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        573,
        607
      ],
      "op": "OR",
      "path": "10"
    },
    "4165": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        573,
        607
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4166": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        573,
        607
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4167": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        622,
        658
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 49,
      "value": "0x40"
    },
    "4169": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        622,
        658
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4170": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        622,
        658
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x56BDDFA0CEE9697CEBDDF9ACD7F23DC6583663B05E007B877056D05017994DEF"
    },
    "4203": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        622,
        658
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4204": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        622,
        658
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x74D"
    },
    "4207": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        622,
        658
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4208": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        573,
        607
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4209": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        573,
        607
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4210": {
      "fn": "Governable._setPendingGovernor",
      "offset": [
        622,
        658
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13F2"
    },
    "4213": {
      "fn": "Governable._setPendingGovernor",
      "jump": "i",
      "offset": [
        622,
        658
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4214": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5401,
        5557
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4215": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5481,
        5485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4217": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5504,
        5550
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 50,
      "value": "0xF6A"
    },
    "4220": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5514,
        5517
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4227": {
      "op": "SHL"
    },
    "4228": {
      "op": "SUB"
    },
    "4229": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5534,
        5548
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4230": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5534,
        5548
      ],
      "op": "AND",
      "path": "8"
    },
    "4231": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5504,
        5513
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10C2"
    },
    "4234": {
      "fn": "EnumerableSet.contains",
      "jump": "i",
      "offset": [
        5504,
        5550
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4235": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4236": {
      "fn": "SafeMath.div",
      "offset": [
        3799,
        3806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4238": {
      "fn": "SafeMath.div",
      "offset": [
        3833,
        3845
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 51
    },
    "4239": {
      "branch": 71,
      "fn": "SafeMath.div",
      "offset": [
        3826,
        3831
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4240": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10AC"
    },
    "4243": {
      "branch": 71,
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4244": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4246": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4253": {
      "op": "SHL"
    },
    "4254": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4255": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4256": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4258": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "1"
    },
    "4259": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E7"
    },
    "4262": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4263": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4264": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1484"
    },
    "4267": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4268": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4269": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "1"
    },
    "4270": {
      "fn": "SafeMath.div",
      "offset": [
        3856,
        3865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4272": {
      "fn": "SafeMath.div",
      "offset": [
        3872,
        3873
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4273": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3869
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4274": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4275": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10B8"
    },
    "4278": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4279": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "INVALID",
      "path": "1"
    },
    "4280": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4281": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DIV",
      "path": "1"
    },
    "4282": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "4283": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "4284": {
      "op": "POP"
    },
    "4285": {
      "op": "POP"
    },
    "4286": {
      "op": "POP"
    },
    "4287": {
      "op": "POP"
    },
    "4288": {
      "op": "POP"
    },
    "4289": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4290": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3776,
        3903
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4291": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3849,
        3853
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4293": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 52
    },
    "4294": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4295": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4296": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "4298": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4299": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4300": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4301": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "ADD",
      "path": "8"
    },
    "4302": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4304": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4305": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4307": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4308": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4309": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4310": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3896
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4311": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3896
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4312": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3896
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4313": {
      "fn": "EnumerableSet._contains",
      "jump": "o",
      "offset": [
        3776,
        3903
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4314": {
      "op": "JUMPDEST"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4317": {
      "op": "MLOAD"
    },
    "4318": {
      "op": "DUP1"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4321": {
      "op": "ADD"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4324": {
      "op": "MSTORE"
    },
    "4325": {
      "op": "DUP1"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4334": {
      "op": "SHL"
    },
    "4335": {
      "op": "SUB"
    },
    "4336": {
      "op": "AND"
    },
    "4337": {
      "op": "DUP2"
    },
    "4338": {
      "op": "MSTORE"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4341": {
      "op": "ADD"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4344": {
      "op": "DUP2"
    },
    "4345": {
      "op": "MSTORE"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4348": {
      "op": "ADD"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4351": {
      "op": "DUP2"
    },
    "4352": {
      "op": "MSTORE"
    },
    "4353": {
      "op": "POP"
    },
    "4354": {
      "op": "SWAP1"
    },
    "4355": {
      "jump": "o",
      "op": "JUMP"
    },
    "4356": {
      "op": "JUMPDEST"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4359": {
      "op": "DUP1"
    },
    "4360": {
      "op": "MLOAD"
    },
    "4361": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4364": {
      "op": "DUP2"
    },
    "4365": {
      "op": "ADD"
    },
    "4366": {
      "op": "SWAP1"
    },
    "4367": {
      "op": "SWAP2"
    },
    "4368": {
      "op": "MSTORE"
    },
    "4369": {
      "op": "DUP1"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4372": {
      "op": "DUP2"
    },
    "4373": {
      "op": "MSTORE"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4376": {
      "op": "ADD"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4385": {
      "op": "SHL"
    },
    "4386": {
      "op": "SUB"
    },
    "4387": {
      "op": "AND"
    },
    "4388": {
      "op": "DUP2"
    },
    "4389": {
      "op": "MSTORE"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4392": {
      "op": "ADD"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4395": {
      "op": "DUP2"
    },
    "4396": {
      "op": "MSTORE"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4399": {
      "op": "ADD"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4402": {
      "op": "DUP2"
    },
    "4403": {
      "op": "MSTORE"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4406": {
      "op": "ADD"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4409": {
      "op": "DUP2"
    },
    "4410": {
      "op": "MSTORE"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4413": {
      "op": "ADD"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4416": {
      "op": "DUP2"
    },
    "4417": {
      "op": "MSTORE"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4420": {
      "op": "ADD"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4423": {
      "op": "DUP2"
    },
    "4424": {
      "op": "MSTORE"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4427": {
      "op": "ADD"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4432": {
      "op": "DUP2"
    },
    "4433": {
      "op": "GT"
    },
    "4434": {
      "op": "ISZERO"
    },
    "4435": {
      "op": "PUSH2",
      "value": "0x1158"
    },
    "4438": {
      "op": "JUMPI"
    },
    "4439": {
      "op": "INVALID"
    },
    "4440": {
      "op": "JUMPDEST"
    },
    "4441": {
      "op": "SWAP1"
    },
    "4442": {
      "op": "MSTORE"
    },
    "4443": {
      "op": "SWAP1"
    },
    "4444": {
      "jump": "o",
      "op": "JUMP"
    },
    "4445": {
      "op": "JUMPDEST"
    },
    "4446": {
      "op": "DUP1"
    },
    "4447": {
      "op": "MLOAD"
    },
    "4448": {
      "op": "PUSH2",
      "value": "0xF6D"
    },
    "4451": {
      "op": "DUP2"
    },
    "4452": {
      "op": "PUSH2",
      "value": "0x176D"
    },
    "4455": {
      "jump": "i",
      "op": "JUMP"
    },
    "4456": {
      "op": "JUMPDEST"
    },
    "4457": {
      "op": "DUP1"
    },
    "4458": {
      "op": "MLOAD"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4461": {
      "op": "DUP2"
    },
    "4462": {
      "op": "LT"
    },
    "4463": {
      "op": "PUSH2",
      "value": "0xF6D"
    },
    "4466": {
      "op": "JUMPI"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4469": {
      "op": "DUP1"
    },
    "4470": {
      "op": "REVERT"
    },
    "4471": {
      "op": "JUMPDEST"
    },
    "4472": {
      "op": "DUP1"
    },
    "4473": {
      "op": "MLOAD"
    },
    "4474": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "4485": {
      "op": "DUP2"
    },
    "4486": {
      "op": "AND"
    },
    "4487": {
      "op": "DUP2"
    },
    "4488": {
      "op": "EQ"
    },
    "4489": {
      "op": "PUSH2",
      "value": "0xF6D"
    },
    "4492": {
      "op": "JUMPI"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4495": {
      "op": "DUP1"
    },
    "4496": {
      "op": "REVERT"
    },
    "4497": {
      "op": "JUMPDEST"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4502": {
      "op": "DUP3"
    },
    "4503": {
      "op": "DUP5"
    },
    "4504": {
      "op": "SUB"
    },
    "4505": {
      "op": "SLT"
    },
    "4506": {
      "op": "ISZERO"
    },
    "4507": {
      "op": "PUSH2",
      "value": "0x11A2"
    },
    "4510": {
      "op": "JUMPI"
    },
    "4511": {
      "op": "DUP1"
    },
    "4512": {
      "op": "DUP2"
    },
    "4513": {
      "op": "REVERT"
    },
    "4514": {
      "op": "JUMPDEST"
    },
    "4515": {
      "op": "DUP2"
    },
    "4516": {
      "op": "CALLDATALOAD"
    },
    "4517": {
      "op": "PUSH2",
      "value": "0xF6A"
    },
    "4520": {
      "op": "DUP2"
    },
    "4521": {
      "op": "PUSH2",
      "value": "0x176D"
    },
    "4524": {
      "jump": "i",
      "op": "JUMP"
    },
    "4525": {
      "op": "JUMPDEST"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4528": {
      "op": "DUP1"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4533": {
      "op": "DUP5"
    },
    "4534": {
      "op": "DUP7"
    },
    "4535": {
      "op": "SUB"
    },
    "4536": {
      "op": "SLT"
    },
    "4537": {
      "op": "ISZERO"
    },
    "4538": {
      "op": "PUSH2",
      "value": "0x11C1"
    },
    "4541": {
      "op": "JUMPI"
    },
    "4542": {
      "op": "DUP2"
    },
    "4543": {
      "op": "DUP3"
    },
    "4544": {
      "op": "REVERT"
    },
    "4545": {
      "op": "JUMPDEST"
    },
    "4546": {
      "op": "DUP4"
    },
    "4547": {
      "op": "CALLDATALOAD"
    },
    "4548": {
      "op": "PUSH2",
      "value": "0x11CC"
    },
    "4551": {
      "op": "DUP2"
    },
    "4552": {
      "op": "PUSH2",
      "value": "0x176D"
    },
    "4555": {
      "jump": "i",
      "op": "JUMP"
    },
    "4556": {
      "op": "JUMPDEST"
    },
    "4557": {
      "op": "SWAP3"
    },
    "4558": {
      "op": "POP"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4561": {
      "op": "DUP5"
    },
    "4562": {
      "op": "ADD"
    },
    "4563": {
      "op": "CALLDATALOAD"
    },
    "4564": {
      "op": "PUSH2",
      "value": "0x11DC"
    },
    "4567": {
      "op": "DUP2"
    },
    "4568": {
      "op": "PUSH2",
      "value": "0x176D"
    },
    "4571": {
      "jump": "i",
      "op": "JUMP"
    },
    "4572": {
      "op": "JUMPDEST"
    },
    "4573": {
      "op": "SWAP3"
    },
    "4574": {
      "op": "SWAP6"
    },
    "4575": {
      "op": "SWAP3"
    },
    "4576": {
      "op": "SWAP5"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "op": "POP"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4582": {
      "op": "SWAP2"
    },
    "4583": {
      "op": "SWAP1"
    },
    "4584": {
      "op": "SWAP2"
    },
    "4585": {
      "op": "ADD"
    },
    "4586": {
      "op": "CALLDATALOAD"
    },
    "4587": {
      "op": "SWAP1"
    },
    "4588": {
      "jump": "o",
      "op": "JUMP"
    },
    "4589": {
      "op": "JUMPDEST"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4592": {
      "op": "DUP1"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4595": {
      "op": "DUP1"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4598": {
      "op": "DUP6"
    },
    "4599": {
      "op": "DUP8"
    },
    "4600": {
      "op": "SUB"
    },
    "4601": {
      "op": "SLT"
    },
    "4602": {
      "op": "ISZERO"
    },
    "4603": {
      "op": "PUSH2",
      "value": "0x1202"
    },
    "4606": {
      "op": "JUMPI"
    },
    "4607": {
      "op": "DUP1"
    },
    "4608": {
      "op": "DUP2"
    },
    "4609": {
      "op": "REVERT"
    },
    "4610": {
      "op": "JUMPDEST"
    },
    "4611": {
      "op": "DUP5"
    },
    "4612": {
      "op": "CALLDATALOAD"
    },
    "4613": {
      "op": "PUSH2",
      "value": "0x120D"
    },
    "4616": {
      "op": "DUP2"
    },
    "4617": {
      "op": "PUSH2",
      "value": "0x176D"
    },
    "4620": {
      "jump": "i",
      "op": "JUMP"
    },
    "4621": {
      "op": "JUMPDEST"
    },
    "4622": {
      "op": "SWAP4"
    },
    "4623": {
      "op": "POP"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4626": {
      "op": "DUP6"
    },
    "4627": {
      "op": "DUP2"
    },
    "4628": {
      "op": "ADD"
    },
    "4629": {
      "op": "CALLDATALOAD"
    },
    "4630": {
      "op": "PUSH2",
      "value": "0x121E"
    },
    "4633": {
      "op": "DUP2"
    },
    "4634": {
      "op": "PUSH2",
      "value": "0x176D"
    },
    "4637": {
      "jump": "i",
      "op": "JUMP"
    },
    "4638": {
      "op": "JUMPDEST"
    },
    "4639": {
      "op": "SWAP4"
    },
    "4640": {
      "op": "POP"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4643": {
      "op": "DUP7"
    },
    "4644": {
      "op": "ADD"
    },
    "4645": {
      "op": "CALLDATALOAD"
    },
    "4646": {
      "op": "SWAP3"
    },
    "4647": {
      "op": "POP"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4650": {
      "op": "DUP7"
    },
    "4651": {
      "op": "ADD"
    },
    "4652": {
      "op": "CALLDATALOAD"
    },
    "4653": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4662": {
      "op": "DUP1"
    },
    "4663": {
      "op": "DUP3"
    },
    "4664": {
      "op": "GT"
    },
    "4665": {
      "op": "ISZERO"
    },
    "4666": {
      "op": "PUSH2",
      "value": "0x1241"
    },
    "4669": {
      "op": "JUMPI"
    },
    "4670": {
      "op": "DUP4"
    },
    "4671": {
      "op": "DUP5"
    },
    "4672": {
      "op": "REVERT"
    },
    "4673": {
      "op": "JUMPDEST"
    },
    "4674": {
      "op": "DUP2"
    },
    "4675": {
      "op": "DUP9"
    },
    "4676": {
      "op": "ADD"
    },
    "4677": {
      "op": "SWAP2"
    },
    "4678": {
      "op": "POP"
    },
    "4679": {
      "op": "DUP9"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4682": {
      "op": "DUP4"
    },
    "4683": {
      "op": "ADD"
    },
    "4684": {
      "op": "SLT"
    },
    "4685": {
      "op": "PUSH2",
      "value": "0x1254"
    },
    "4688": {
      "op": "JUMPI"
    },
    "4689": {
      "op": "DUP4"
    },
    "4690": {
      "op": "DUP5"
    },
    "4691": {
      "op": "REVERT"
    },
    "4692": {
      "op": "JUMPDEST"
    },
    "4693": {
      "op": "DUP2"
    },
    "4694": {
      "op": "CALLDATALOAD"
    },
    "4695": {
      "op": "DUP2"
    },
    "4696": {
      "op": "DUP2"
    },
    "4697": {
      "op": "GT"
    },
    "4698": {
      "op": "ISZERO"
    },
    "4699": {
      "op": "PUSH2",
      "value": "0x1262"
    },
    "4702": {
      "op": "JUMPI"
    },
    "4703": {
      "op": "DUP5"
    },
    "4704": {
      "op": "DUP6"
    },
    "4705": {
      "op": "REVERT"
    },
    "4706": {
      "op": "JUMPDEST"
    },
    "4707": {
      "op": "PUSH2",
      "value": "0x1274"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4712": {
      "op": "DUP3"
    },
    "4713": {
      "op": "ADD"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4716": {
      "op": "NOT"
    },
    "4717": {
      "op": "AND"
    },
    "4718": {
      "op": "DUP6"
    },
    "4719": {
      "op": "ADD"
    },
    "4720": {
      "op": "PUSH2",
      "value": "0x1746"
    },
    "4723": {
      "jump": "i",
      "op": "JUMP"
    },
    "4724": {
      "op": "JUMPDEST"
    },
    "4725": {
      "op": "SWAP2"
    },
    "4726": {
      "op": "POP"
    },
    "4727": {
      "op": "DUP1"
    },
    "4728": {
      "op": "DUP3"
    },
    "4729": {
      "op": "MSTORE"
    },
    "4730": {
      "op": "DUP10"
    },
    "4731": {
      "op": "DUP5"
    },
    "4732": {
      "op": "DUP3"
    },
    "4733": {
      "op": "DUP6"
    },
    "4734": {
      "op": "ADD"
    },
    "4735": {
      "op": "ADD"
    },
    "4736": {
      "op": "GT"
    },
    "4737": {
      "op": "ISZERO"
    },
    "4738": {
      "op": "PUSH2",
      "value": "0x1289"
    },
    "4741": {
      "op": "JUMPI"
    },
    "4742": {
      "op": "DUP5"
    },
    "4743": {
      "op": "DUP6"
    },
    "4744": {
      "op": "REVERT"
    },
    "4745": {
      "op": "JUMPDEST"
    },
    "4746": {
      "op": "DUP1"
    },
    "4747": {
      "op": "DUP5"
    },
    "4748": {
      "op": "DUP5"
    },
    "4749": {
      "op": "ADD"
    },
    "4750": {
      "op": "DUP6"
    },
    "4751": {
      "op": "DUP5"
    },
    "4752": {
      "op": "ADD"
    },
    "4753": {
      "op": "CALLDATACOPY"
    },
    "4754": {
      "op": "DUP2"
    },
    "4755": {
      "op": "ADD"
    },
    "4756": {
      "op": "SWAP1"
    },
    "4757": {
      "op": "SWAP3"
    },
    "4758": {
      "op": "ADD"
    },
    "4759": {
      "op": "SWAP3"
    },
    "4760": {
      "op": "SWAP1"
    },
    "4761": {
      "op": "SWAP3"
    },
    "4762": {
      "op": "MSTORE"
    },
    "4763": {
      "op": "SWAP4"
    },
    "4764": {
      "op": "SWAP7"
    },
    "4765": {
      "op": "SWAP3"
    },
    "4766": {
      "op": "SWAP6"
    },
    "4767": {
      "op": "POP"
    },
    "4768": {
      "op": "SWAP1"
    },
    "4769": {
      "op": "SWAP4"
    },
    "4770": {
      "op": "POP"
    },
    "4771": {
      "op": "POP"
    },
    "4772": {
      "jump": "o",
      "op": "JUMP"
    },
    "4773": {
      "op": "JUMPDEST"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4778": {
      "op": "DUP3"
    },
    "4779": {
      "op": "DUP5"
    },
    "4780": {
      "op": "SUB"
    },
    "4781": {
      "op": "SLT"
    },
    "4782": {
      "op": "ISZERO"
    },
    "4783": {
      "op": "PUSH2",
      "value": "0x12B6"
    },
    "4786": {
      "op": "JUMPI"
    },
    "4787": {
      "op": "DUP1"
    },
    "4788": {
      "op": "DUP2"
    },
    "4789": {
      "op": "REVERT"
    },
    "4790": {
      "op": "JUMPDEST"
    },
    "4791": {
      "op": "DUP2"
    },
    "4792": {
      "op": "MLOAD"
    },
    "4793": {
      "op": "DUP1"
    },
    "4794": {
      "op": "ISZERO"
    },
    "4795": {
      "op": "ISZERO"
    },
    "4796": {
      "op": "DUP2"
    },
    "4797": {
      "op": "EQ"
    },
    "4798": {
      "op": "PUSH2",
      "value": "0xF6A"
    },
    "4801": {
      "op": "JUMPI"
    },
    "4802": {
      "op": "DUP2"
    },
    "4803": {
      "op": "DUP3"
    },
    "4804": {
      "op": "REVERT"
    },
    "4805": {
      "op": "JUMPDEST"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4808": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4811": {
      "op": "DUP1"
    },
    "4812": {
      "op": "DUP4"
    },
    "4813": {
      "op": "DUP6"
    },
    "4814": {
      "op": "SUB"
    },
    "4815": {
      "op": "SLT"
    },
    "4816": {
      "op": "ISZERO"
    },
    "4817": {
      "op": "PUSH2",
      "value": "0x12D8"
    },
    "4820": {
      "op": "JUMPI"
    },
    "4821": {
      "op": "DUP2"
    },
    "4822": {
      "op": "DUP3"
    },
    "4823": {
      "op": "REVERT"
    },
    "4824": {
      "op": "JUMPDEST"
    },
    "4825": {
      "op": "PUSH2",
      "value": "0x12E1"
    },
    "4828": {
      "op": "DUP2"
    },
    "4829": {
      "op": "PUSH2",
      "value": "0x1746"
    },
    "4832": {
      "jump": "i",
      "op": "JUMP"
    },
    "4833": {
      "op": "JUMPDEST"
    },
    "4834": {
      "op": "SWAP1"
    },
    "4835": {
      "op": "POP"
    },
    "4836": {
      "op": "DUP3"
    },
    "4837": {
      "op": "MLOAD"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4840": {
      "op": "DUP2"
    },
    "4841": {
      "op": "LT"
    },
    "4842": {
      "op": "PUSH2",
      "value": "0x12F1"
    },
    "4845": {
      "op": "JUMPI"
    },
    "4846": {
      "op": "DUP3"
    },
    "4847": {
      "op": "DUP4"
    },
    "4848": {
      "op": "REVERT"
    },
    "4849": {
      "op": "JUMPDEST"
    },
    "4850": {
      "op": "DUP2"
    },
    "4851": {
      "op": "MSTORE"
    },
    "4852": {
      "op": "PUSH2",
      "value": "0x1300"
    },
    "4855": {
      "op": "DUP5"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4858": {
      "op": "DUP6"
    },
    "4859": {
      "op": "ADD"
    },
    "4860": {
      "op": "PUSH2",
      "value": "0x115D"
    },
    "4863": {
      "jump": "i",
      "op": "JUMP"
    },
    "4864": {
      "op": "JUMPDEST"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4867": {
      "op": "DUP3"
    },
    "4868": {
      "op": "ADD"
    },
    "4869": {
      "op": "MSTORE"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4872": {
      "op": "DUP4"
    },
    "4873": {
      "op": "ADD"
    },
    "4874": {
      "op": "MLOAD"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4877": {
      "op": "DUP3"
    },
    "4878": {
      "op": "ADD"
    },
    "4879": {
      "op": "MSTORE"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4882": {
      "op": "DUP4"
    },
    "4883": {
      "op": "ADD"
    },
    "4884": {
      "op": "MLOAD"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4887": {
      "op": "DUP3"
    },
    "4888": {
      "op": "ADD"
    },
    "4889": {
      "op": "MSTORE"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4892": {
      "op": "DUP4"
    },
    "4893": {
      "op": "ADD"
    },
    "4894": {
      "op": "MLOAD"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4897": {
      "op": "DUP3"
    },
    "4898": {
      "op": "ADD"
    },
    "4899": {
      "op": "MSTORE"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4902": {
      "op": "DUP4"
    },
    "4903": {
      "op": "ADD"
    },
    "4904": {
      "op": "MLOAD"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4907": {
      "op": "DUP3"
    },
    "4908": {
      "op": "ADD"
    },
    "4909": {
      "op": "MSTORE"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4912": {
      "op": "DUP4"
    },
    "4913": {
      "op": "ADD"
    },
    "4914": {
      "op": "MLOAD"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4917": {
      "op": "DUP3"
    },
    "4918": {
      "op": "ADD"
    },
    "4919": {
      "op": "MSTORE"
    },
    "4920": {
      "op": "PUSH2",
      "value": "0x1344"
    },
    "4923": {
      "op": "DUP5"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4926": {
      "op": "DUP6"
    },
    "4927": {
      "op": "ADD"
    },
    "4928": {
      "op": "PUSH2",
      "value": "0x1168"
    },
    "4931": {
      "jump": "i",
      "op": "JUMP"
    },
    "4932": {
      "op": "JUMPDEST"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4935": {
      "op": "DUP3"
    },
    "4936": {
      "op": "ADD"
    },
    "4937": {
      "op": "MSTORE"
    },
    "4938": {
      "op": "SWAP4"
    },
    "4939": {
      "op": "SWAP3"
    },
    "4940": {
      "op": "POP"
    },
    "4941": {
      "op": "POP"
    },
    "4942": {
      "op": "POP"
    },
    "4943": {
      "jump": "o",
      "op": "JUMP"
    },
    "4944": {
      "op": "JUMPDEST"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4949": {
      "op": "DUP3"
    },
    "4950": {
      "op": "DUP5"
    },
    "4951": {
      "op": "SUB"
    },
    "4952": {
      "op": "SLT"
    },
    "4953": {
      "op": "ISZERO"
    },
    "4954": {
      "op": "PUSH2",
      "value": "0x1361"
    },
    "4957": {
      "op": "JUMPI"
    },
    "4958": {
      "op": "DUP1"
    },
    "4959": {
      "op": "DUP2"
    },
    "4960": {
      "op": "REVERT"
    },
    "4961": {
      "op": "JUMPDEST"
    },
    "4962": {
      "op": "POP"
    },
    "4963": {
      "op": "CALLDATALOAD"
    },
    "4964": {
      "op": "SWAP2"
    },
    "4965": {
      "op": "SWAP1"
    },
    "4966": {
      "op": "POP"
    },
    "4967": {
      "jump": "o",
      "op": "JUMP"
    },
    "4968": {
      "op": "JUMPDEST"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4973": {
      "op": "DUP3"
    },
    "4974": {
      "op": "DUP5"
    },
    "4975": {
      "op": "SUB"
    },
    "4976": {
      "op": "SLT"
    },
    "4977": {
      "op": "ISZERO"
    },
    "4978": {
      "op": "PUSH2",
      "value": "0x1379"
    },
    "4981": {
      "op": "JUMPI"
    },
    "4982": {
      "op": "DUP1"
    },
    "4983": {
      "op": "DUP2"
    },
    "4984": {
      "op": "REVERT"
    },
    "4985": {
      "op": "JUMPDEST"
    },
    "4986": {
      "op": "POP"
    },
    "4987": {
      "op": "MLOAD"
    },
    "4988": {
      "op": "SWAP2"
    },
    "4989": {
      "op": "SWAP1"
    },
    "4990": {
      "op": "POP"
    },
    "4991": {
      "jump": "o",
      "op": "JUMP"
    },
    "4992": {
      "op": "JUMPDEST"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4995": {
      "op": "DUP1"
    },
    "4996": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4998": {
      "op": "DUP4"
    },
    "4999": {
      "op": "DUP6"
    },
    "5000": {
      "op": "SUB"
    },
    "5001": {
      "op": "SLT"
    },
    "5002": {
      "op": "ISZERO"
    },
    "5003": {
      "op": "PUSH2",
      "value": "0x1392"
    },
    "5006": {
      "op": "JUMPI"
    },
    "5007": {
      "op": "DUP2"
    },
    "5008": {
      "op": "DUP3"
    },
    "5009": {
      "op": "REVERT"
    },
    "5010": {
      "op": "JUMPDEST"
    },
    "5011": {
      "op": "POP"
    },
    "5012": {
      "op": "POP"
    },
    "5013": {
      "op": "DUP1"
    },
    "5014": {
      "op": "CALLDATALOAD"
    },
    "5015": {
      "op": "SWAP3"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5018": {
      "op": "SWAP1"
    },
    "5019": {
      "op": "SWAP2"
    },
    "5020": {
      "op": "ADD"
    },
    "5021": {
      "op": "CALLDATALOAD"
    },
    "5022": {
      "op": "SWAP2"
    },
    "5023": {
      "op": "POP"
    },
    "5024": {
      "jump": "o",
      "op": "JUMP"
    },
    "5025": {
      "op": "JUMPDEST"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5028": {
      "op": "DUP1"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5031": {
      "op": "DUP1"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5036": {
      "op": "DUP7"
    },
    "5037": {
      "op": "DUP9"
    },
    "5038": {
      "op": "SUB"
    },
    "5039": {
      "op": "SLT"
    },
    "5040": {
      "op": "ISZERO"
    },
    "5041": {
      "op": "PUSH2",
      "value": "0x13B8"
    },
    "5044": {
      "op": "JUMPI"
    },
    "5045": {
      "op": "DUP1"
    },
    "5046": {
      "op": "DUP2"
    },
    "5047": {
      "op": "REVERT"
    },
    "5048": {
      "op": "JUMPDEST"
    },
    "5049": {
      "op": "PUSH2",
      "value": "0x13C2"
    },
    "5052": {
      "op": "DUP8"
    },
    "5053": {
      "op": "DUP8"
    },
    "5054": {
      "op": "PUSH2",
      "value": "0x1177"
    },
    "5057": {
      "jump": "i",
      "op": "JUMP"
    },
    "5058": {
      "op": "JUMPDEST"
    },
    "5059": {
      "op": "SWAP5"
    },
    "5060": {
      "op": "POP"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5063": {
      "op": "DUP7"
    },
    "5064": {
      "op": "ADD"
    },
    "5065": {
      "op": "MLOAD"
    },
    "5066": {
      "op": "SWAP4"
    },
    "5067": {
      "op": "POP"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5070": {
      "op": "DUP7"
    },
    "5071": {
      "op": "ADD"
    },
    "5072": {
      "op": "MLOAD"
    },
    "5073": {
      "op": "SWAP3"
    },
    "5074": {
      "op": "POP"
    },
    "5075": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5077": {
      "op": "DUP7"
    },
    "5078": {
      "op": "ADD"
    },
    "5079": {
      "op": "MLOAD"
    },
    "5080": {
      "op": "SWAP2"
    },
    "5081": {
      "op": "POP"
    },
    "5082": {
      "op": "PUSH2",
      "value": "0x13E6"
    },
    "5085": {
      "op": "DUP8"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5088": {
      "op": "DUP9"
    },
    "5089": {
      "op": "ADD"
    },
    "5090": {
      "op": "PUSH2",
      "value": "0x1177"
    },
    "5093": {
      "jump": "i",
      "op": "JUMP"
    },
    "5094": {
      "op": "JUMPDEST"
    },
    "5095": {
      "op": "SWAP1"
    },
    "5096": {
      "op": "POP"
    },
    "5097": {
      "op": "SWAP3"
    },
    "5098": {
      "op": "SWAP6"
    },
    "5099": {
      "op": "POP"
    },
    "5100": {
      "op": "SWAP3"
    },
    "5101": {
      "op": "SWAP6"
    },
    "5102": {
      "op": "SWAP1"
    },
    "5103": {
      "op": "SWAP4"
    },
    "5104": {
      "op": "POP"
    },
    "5105": {
      "jump": "o",
      "op": "JUMP"
    },
    "5106": {
      "op": "JUMPDEST"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5113": {
      "op": "SHL"
    },
    "5114": {
      "op": "SUB"
    },
    "5115": {
      "op": "SWAP2"
    },
    "5116": {
      "op": "SWAP1"
    },
    "5117": {
      "op": "SWAP2"
    },
    "5118": {
      "op": "AND"
    },
    "5119": {
      "op": "DUP2"
    },
    "5120": {
      "op": "MSTORE"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5123": {
      "op": "ADD"
    },
    "5124": {
      "op": "SWAP1"
    },
    "5125": {
      "jump": "o",
      "op": "JUMP"
    },
    "5126": {
      "op": "JUMPDEST"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5133": {
      "op": "SHL"
    },
    "5134": {
      "op": "SUB"
    },
    "5135": {
      "op": "SWAP4"
    },
    "5136": {
      "op": "DUP5"
    },
    "5137": {
      "op": "AND"
    },
    "5138": {
      "op": "DUP2"
    },
    "5139": {
      "op": "MSTORE"
    },
    "5140": {
      "op": "SWAP2"
    },
    "5141": {
      "op": "SWAP1"
    },
    "5142": {
      "op": "SWAP3"
    },
    "5143": {
      "op": "AND"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5146": {
      "op": "DUP3"
    },
    "5147": {
      "op": "ADD"
    },
    "5148": {
      "op": "MSTORE"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5151": {
      "op": "DUP2"
    },
    "5152": {
      "op": "ADD"
    },
    "5153": {
      "op": "SWAP2"
    },
    "5154": {
      "op": "SWAP1"
    },
    "5155": {
      "op": "SWAP2"
    },
    "5156": {
      "op": "MSTORE"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5159": {
      "op": "ADD"
    },
    "5160": {
      "op": "SWAP1"
    },
    "5161": {
      "jump": "o",
      "op": "JUMP"
    },
    "5162": {
      "op": "JUMPDEST"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5169": {
      "op": "SHL"
    },
    "5170": {
      "op": "SUB"
    },
    "5171": {
      "op": "SWAP3"
    },
    "5172": {
      "op": "SWAP1"
    },
    "5173": {
      "op": "SWAP3"
    },
    "5174": {
      "op": "AND"
    },
    "5175": {
      "op": "DUP3"
    },
    "5176": {
      "op": "MSTORE"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5179": {
      "op": "DUP3"
    },
    "5180": {
      "op": "ADD"
    },
    "5181": {
      "op": "MSTORE"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5184": {
      "op": "ADD"
    },
    "5185": {
      "op": "SWAP1"
    },
    "5186": {
      "jump": "o",
      "op": "JUMP"
    },
    "5187": {
      "op": "JUMPDEST"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5194": {
      "op": "SHL"
    },
    "5195": {
      "op": "SUB"
    },
    "5196": {
      "op": "SWAP4"
    },
    "5197": {
      "op": "SWAP1"
    },
    "5198": {
      "op": "SWAP4"
    },
    "5199": {
      "op": "AND"
    },
    "5200": {
      "op": "DUP4"
    },
    "5201": {
      "op": "MSTORE"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5204": {
      "op": "DUP4"
    },
    "5205": {
      "op": "ADD"
    },
    "5206": {
      "op": "SWAP2"
    },
    "5207": {
      "op": "SWAP1"
    },
    "5208": {
      "op": "SWAP2"
    },
    "5209": {
      "op": "MSTORE"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5212": {
      "op": "DUP3"
    },
    "5213": {
      "op": "ADD"
    },
    "5214": {
      "op": "MSTORE"
    },
    "5215": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5217": {
      "op": "ADD"
    },
    "5218": {
      "op": "SWAP1"
    },
    "5219": {
      "jump": "o",
      "op": "JUMP"
    },
    "5220": {
      "op": "JUMPDEST"
    },
    "5221": {
      "op": "SWAP1"
    },
    "5222": {
      "op": "ISZERO"
    },
    "5223": {
      "op": "ISZERO"
    },
    "5224": {
      "op": "DUP2"
    },
    "5225": {
      "op": "MSTORE"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5228": {
      "op": "ADD"
    },
    "5229": {
      "op": "SWAP1"
    },
    "5230": {
      "jump": "o",
      "op": "JUMP"
    },
    "5231": {
      "op": "JUMPDEST"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5238": {
      "op": "SHL"
    },
    "5239": {
      "op": "SUB"
    },
    "5240": {
      "op": "NOT"
    },
    "5241": {
      "op": "SWAP2"
    },
    "5242": {
      "op": "SWAP1"
    },
    "5243": {
      "op": "SWAP2"
    },
    "5244": {
      "op": "AND"
    },
    "5245": {
      "op": "DUP2"
    },
    "5246": {
      "op": "MSTORE"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5249": {
      "op": "ADD"
    },
    "5250": {
      "op": "SWAP1"
    },
    "5251": {
      "jump": "o",
      "op": "JUMP"
    },
    "5252": {
      "op": "JUMPDEST"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5257": {
      "op": "DUP1"
    },
    "5258": {
      "op": "DUP4"
    },
    "5259": {
      "op": "MSTORE"
    },
    "5260": {
      "op": "DUP4"
    },
    "5261": {
      "op": "MLOAD"
    },
    "5262": {
      "op": "DUP1"
    },
    "5263": {
      "op": "DUP3"
    },
    "5264": {
      "op": "DUP6"
    },
    "5265": {
      "op": "ADD"
    },
    "5266": {
      "op": "MSTORE"
    },
    "5267": {
      "op": "DUP3"
    },
    "5268": {
      "op": "JUMPDEST"
    },
    "5269": {
      "op": "DUP2"
    },
    "5270": {
      "op": "DUP2"
    },
    "5271": {
      "op": "LT"
    },
    "5272": {
      "op": "ISZERO"
    },
    "5273": {
      "op": "PUSH2",
      "value": "0x14B0"
    },
    "5276": {
      "op": "JUMPI"
    },
    "5277": {
      "op": "DUP6"
    },
    "5278": {
      "op": "DUP2"
    },
    "5279": {
      "op": "ADD"
    },
    "5280": {
      "op": "DUP4"
    },
    "5281": {
      "op": "ADD"
    },
    "5282": {
      "op": "MLOAD"
    },
    "5283": {
      "op": "DUP6"
    },
    "5284": {
      "op": "DUP3"
    },
    "5285": {
      "op": "ADD"
    },
    "5286": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5288": {
      "op": "ADD"
    },
    "5289": {
      "op": "MSTORE"
    },
    "5290": {
      "op": "DUP3"
    },
    "5291": {
      "op": "ADD"
    },
    "5292": {
      "op": "PUSH2",
      "value": "0x1494"
    },
    "5295": {
      "op": "JUMP"
    },
    "5296": {
      "op": "JUMPDEST"
    },
    "5297": {
      "op": "DUP2"
    },
    "5298": {
      "op": "DUP2"
    },
    "5299": {
      "op": "GT"
    },
    "5300": {
      "op": "ISZERO"
    },
    "5301": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "5304": {
      "op": "JUMPI"
    },
    "5305": {
      "op": "DUP4"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5308": {
      "op": "DUP4"
    },
    "5309": {
      "op": "DUP8"
    },
    "5310": {
      "op": "ADD"
    },
    "5311": {
      "op": "ADD"
    },
    "5312": {
      "op": "MSTORE"
    },
    "5313": {
      "op": "JUMPDEST"
    },
    "5314": {
      "op": "POP"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5317": {
      "op": "ADD"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5320": {
      "op": "NOT"
    },
    "5321": {
      "op": "AND"
    },
    "5322": {
      "op": "SWAP3"
    },
    "5323": {
      "op": "SWAP1"
    },
    "5324": {
      "op": "SWAP3"
    },
    "5325": {
      "op": "ADD"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5328": {
      "op": "ADD"
    },
    "5329": {
      "op": "SWAP4"
    },
    "5330": {
      "op": "SWAP3"
    },
    "5331": {
      "op": "POP"
    },
    "5332": {
      "op": "POP"
    },
    "5333": {
      "op": "POP"
    },
    "5334": {
      "jump": "o",
      "op": "JUMP"
    },
    "5335": {
      "op": "JUMPDEST"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5338": {
      "op": "DUP1"
    },
    "5339": {
      "op": "DUP3"
    },
    "5340": {
      "op": "MSTORE"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "5343": {
      "op": "SWAP1"
    },
    "5344": {
      "op": "DUP3"
    },
    "5345": {
      "op": "ADD"
    },
    "5346": {
      "op": "MSTORE"
    },
    "5347": {
      "op": "PUSH32",
      "value": "0x636F6C6C65637461626C652D647573743A3A746F6B656E2D69732D706172742D"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5382": {
      "op": "DUP3"
    },
    "5383": {
      "op": "ADD"
    },
    "5384": {
      "op": "MSTORE"
    },
    "5385": {
      "op": "PUSH15",
      "value": "0x1BD98B5D1A194B5C1C9BDD1BD8DBDB"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "5403": {
      "op": "SHL"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5406": {
      "op": "DUP3"
    },
    "5407": {
      "op": "ADD"
    },
    "5408": {
      "op": "MSTORE"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5411": {
      "op": "ADD"
    },
    "5412": {
      "op": "SWAP1"
    },
    "5413": {
      "jump": "o",
      "op": "JUMP"
    },
    "5414": {
      "op": "JUMPDEST"
    },
    "5415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5417": {
      "op": "DUP1"
    },
    "5418": {
      "op": "DUP3"
    },
    "5419": {
      "op": "MSTORE"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5422": {
      "op": "SWAP1"
    },
    "5423": {
      "op": "DUP3"
    },
    "5424": {
      "op": "ADD"
    },
    "5425": {
      "op": "MSTORE"
    },
    "5426": {
      "op": "PUSH32",
      "value": "0x676F7665726E61626C653A3A6F6E6C792D70656E64696E672D676F7665726E6F"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5461": {
      "op": "DUP3"
    },
    "5462": {
      "op": "ADD"
    },
    "5463": {
      "op": "MSTORE"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "5466": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "5468": {
      "op": "SHL"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5471": {
      "op": "DUP3"
    },
    "5472": {
      "op": "ADD"
    },
    "5473": {
      "op": "MSTORE"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5476": {
      "op": "ADD"
    },
    "5477": {
      "op": "SWAP1"
    },
    "5478": {
      "jump": "o",
      "op": "JUMP"
    },
    "5479": {
      "op": "JUMPDEST"
    },
    "5480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5482": {
      "op": "DUP1"
    },
    "5483": {
      "op": "DUP3"
    },
    "5484": {
      "op": "MSTORE"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "5487": {
      "op": "SWAP1"
    },
    "5488": {
      "op": "DUP3"
    },
    "5489": {
      "op": "ADD"
    },
    "5490": {
      "op": "MSTORE"
    },
    "5491": {
      "op": "PUSH15",
      "value": "0x1D1BDAD95B9259081A5B9D985B1A59"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "5509": {
      "op": "SHL"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5512": {
      "op": "DUP3"
    },
    "5513": {
      "op": "ADD"
    },
    "5514": {
      "op": "MSTORE"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5517": {
      "op": "ADD"
    },
    "5518": {
      "op": "SWAP1"
    },
    "5519": {
      "jump": "o",
      "op": "JUMP"
    },
    "5520": {
      "op": "JUMPDEST"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5523": {
      "op": "DUP1"
    },
    "5524": {
      "op": "DUP3"
    },
    "5525": {
      "op": "MSTORE"
    },
    "5526": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5528": {
      "op": "SWAP1"
    },
    "5529": {
      "op": "DUP3"
    },
    "5530": {
      "op": "ADD"
    },
    "5531": {
      "op": "MSTORE"
    },
    "5532": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5567": {
      "op": "DUP3"
    },
    "5568": {
      "op": "ADD"
    },
    "5569": {
      "op": "MSTORE"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0x77"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5574": {
      "op": "SHL"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5577": {
      "op": "DUP3"
    },
    "5578": {
      "op": "ADD"
    },
    "5579": {
      "op": "MSTORE"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5582": {
      "op": "ADD"
    },
    "5583": {
      "op": "SWAP1"
    },
    "5584": {
      "jump": "o",
      "op": "JUMP"
    },
    "5585": {
      "op": "JUMPDEST"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5588": {
      "op": "DUP1"
    },
    "5589": {
      "op": "DUP3"
    },
    "5590": {
      "op": "MSTORE"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5593": {
      "op": "SWAP1"
    },
    "5594": {
      "op": "DUP3"
    },
    "5595": {
      "op": "ADD"
    },
    "5596": {
      "op": "MSTORE"
    },
    "5597": {
      "op": "PUSH32",
      "value": "0x676F7665726E61626C653A3A6F6E6C792D676F7665726E6F7200000000000000"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5632": {
      "op": "DUP3"
    },
    "5633": {
      "op": "ADD"
    },
    "5634": {
      "op": "MSTORE"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5637": {
      "op": "ADD"
    },
    "5638": {
      "op": "SWAP1"
    },
    "5639": {
      "jump": "o",
      "op": "JUMP"
    },
    "5640": {
      "op": "JUMPDEST"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5643": {
      "op": "DUP1"
    },
    "5644": {
      "op": "DUP3"
    },
    "5645": {
      "op": "MSTORE"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "5648": {
      "op": "SWAP1"
    },
    "5649": {
      "op": "DUP3"
    },
    "5650": {
      "op": "ADD"
    },
    "5651": {
      "op": "MSTORE"
    },
    "5652": {
      "op": "PUSH9",
      "value": "0x70726F6669743D3D3"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0xBC"
    },
    "5664": {
      "op": "SHL"
    },
    "5665": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5667": {
      "op": "DUP3"
    },
    "5668": {
      "op": "ADD"
    },
    "5669": {
      "op": "MSTORE"
    },
    "5670": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5672": {
      "op": "ADD"
    },
    "5673": {
      "op": "SWAP1"
    },
    "5674": {
      "jump": "o",
      "op": "JUMP"
    },
    "5675": {
      "op": "JUMPDEST"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5678": {
      "op": "DUP1"
    },
    "5679": {
      "op": "DUP3"
    },
    "5680": {
      "op": "MSTORE"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "5683": {
      "op": "SWAP1"
    },
    "5684": {
      "op": "DUP3"
    },
    "5685": {
      "op": "ADD"
    },
    "5686": {
      "op": "MSTORE"
    },
    "5687": {
      "op": "PUSH32",
      "value": "0x676F7665726E61626C653A3A70656E64696E672D676F7665726E6F722D73686F"
    },
    "5720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5722": {
      "op": "DUP3"
    },
    "5723": {
      "op": "ADD"
    },
    "5724": {
      "op": "MSTORE"
    },
    "5725": {
      "op": "PUSH32",
      "value": "0x756C642D6E6F742D62652D7A65726F2D61646472657373000000000000000000"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5760": {
      "op": "DUP3"
    },
    "5761": {
      "op": "ADD"
    },
    "5762": {
      "op": "MSTORE"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5765": {
      "op": "ADD"
    },
    "5766": {
      "op": "SWAP1"
    },
    "5767": {
      "jump": "o",
      "op": "JUMP"
    },
    "5768": {
      "op": "JUMPDEST"
    },
    "5769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5771": {
      "op": "DUP1"
    },
    "5772": {
      "op": "DUP3"
    },
    "5773": {
      "op": "MSTORE"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "5776": {
      "op": "SWAP1"
    },
    "5777": {
      "op": "DUP3"
    },
    "5778": {
      "op": "ADD"
    },
    "5779": {
      "op": "MSTORE"
    },
    "5780": {
      "op": "PUSH32",
      "value": "0x636F6C6C65637461626C652D647573743A3A63616E742D73656E642D64757374"
    },
    "5813": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5815": {
      "op": "DUP3"
    },
    "5816": {
      "op": "ADD"
    },
    "5817": {
      "op": "MSTORE"
    },
    "5818": {
      "op": "PUSH16",
      "value": "0x2D746F2D7A65726F2D61646472657373"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5837": {
      "op": "SHL"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5840": {
      "op": "DUP3"
    },
    "5841": {
      "op": "ADD"
    },
    "5842": {
      "op": "MSTORE"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5845": {
      "op": "ADD"
    },
    "5846": {
      "op": "SWAP1"
    },
    "5847": {
      "jump": "o",
      "op": "JUMP"
    },
    "5848": {
      "op": "JUMPDEST"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5851": {
      "op": "DUP1"
    },
    "5852": {
      "op": "DUP3"
    },
    "5853": {
      "op": "MSTORE"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "5856": {
      "op": "SWAP1"
    },
    "5857": {
      "op": "DUP3"
    },
    "5858": {
      "op": "ADD"
    },
    "5859": {
      "op": "MSTORE"
    },
    "5860": {
      "op": "PUSH32",
      "value": "0x747261636B6564546F6B656E4964206E6F74206578657263697361626C650000"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5895": {
      "op": "DUP3"
    },
    "5896": {
      "op": "ADD"
    },
    "5897": {
      "op": "MSTORE"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5900": {
      "op": "ADD"
    },
    "5901": {
      "op": "SWAP1"
    },
    "5902": {
      "jump": "o",
      "op": "JUMP"
    },
    "5903": {
      "op": "JUMPDEST"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5906": {
      "op": "DUP1"
    },
    "5907": {
      "op": "DUP3"
    },
    "5908": {
      "op": "MSTORE"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "5911": {
      "op": "SWAP1"
    },
    "5912": {
      "op": "DUP3"
    },
    "5913": {
      "op": "ADD"
    },
    "5914": {
      "op": "MSTORE"
    },
    "5915": {
      "op": "PUSH6",
      "value": "0x10B7BBB732B9"
    },
    "5922": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "5924": {
      "op": "SHL"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5927": {
      "op": "DUP3"
    },
    "5928": {
      "op": "ADD"
    },
    "5929": {
      "op": "MSTORE"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5932": {
      "op": "ADD"
    },
    "5933": {
      "op": "SWAP1"
    },
    "5934": {
      "jump": "o",
      "op": "JUMP"
    },
    "5935": {
      "op": "JUMPDEST"
    },
    "5936": {
      "op": "SWAP1"
    },
    "5937": {
      "op": "DUP2"
    },
    "5938": {
      "op": "MSTORE"
    },
    "5939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5941": {
      "op": "ADD"
    },
    "5942": {
      "op": "SWAP1"
    },
    "5943": {
      "jump": "o",
      "op": "JUMP"
    },
    "5944": {
      "op": "JUMPDEST"
    },
    "5945": {
      "op": "SWAP2"
    },
    "5946": {
      "op": "DUP3"
    },
    "5947": {
      "op": "MSTORE"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5950": {
      "op": "DUP3"
    },
    "5951": {
      "op": "ADD"
    },
    "5952": {
      "op": "MSTORE"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5955": {
      "op": "ADD"
    },
    "5956": {
      "op": "SWAP1"
    },
    "5957": {
      "jump": "o",
      "op": "JUMP"
    },
    "5958": {
      "op": "JUMPDEST"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5961": {
      "op": "MLOAD"
    },
    "5962": {
      "op": "DUP2"
    },
    "5963": {
      "op": "DUP2"
    },
    "5964": {
      "op": "ADD"
    },
    "5965": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5974": {
      "op": "DUP2"
    },
    "5975": {
      "op": "GT"
    },
    "5976": {
      "op": "DUP3"
    },
    "5977": {
      "op": "DUP3"
    },
    "5978": {
      "op": "LT"
    },
    "5979": {
      "op": "OR"
    },
    "5980": {
      "op": "ISZERO"
    },
    "5981": {
      "op": "PUSH2",
      "value": "0x1765"
    },
    "5984": {
      "op": "JUMPI"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5987": {
      "op": "DUP1"
    },
    "5988": {
      "op": "REVERT"
    },
    "5989": {
      "op": "JUMPDEST"
    },
    "5990": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5992": {
      "op": "MSTORE"
    },
    "5993": {
      "op": "SWAP2"
    },
    "5994": {
      "op": "SWAP1"
    },
    "5995": {
      "op": "POP"
    },
    "5996": {
      "jump": "o",
      "op": "JUMP"
    },
    "5997": {
      "op": "JUMPDEST"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6004": {
      "op": "SHL"
    },
    "6005": {
      "op": "SUB"
    },
    "6006": {
      "op": "DUP2"
    },
    "6007": {
      "op": "AND"
    },
    "6008": {
      "op": "DUP2"
    },
    "6009": {
      "op": "EQ"
    },
    "6010": {
      "op": "PUSH2",
      "value": "0xDAF"
    },
    "6013": {
      "op": "JUMPI"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6016": {
      "op": "DUP1"
    },
    "6017": {
      "op": "REVERT"
    }
  },
  "sha1": "e2ecfb65b4f043f163aba6e1cfa5262bf50e15bd",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelinV3/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV3/contracts/utils/Address.sol\";\nimport \"@openzeppelinV3/contracts/token/ERC721/ERC721Holder.sol\";\nimport \"@openzeppelinV3/contracts/utils/Counters.sol\";\n\nimport \"../interfaces/IHegicNFT.sol\";\nimport \"../interfaces/IHegicBot.sol\";\nimport \"../interfaces/IPriceProvider.sol\";\nimport \"./Governable.sol\";\nimport \"./CollectableDust.sol\";\n\ncontract HegicBot is IHegicBot, Governable, CollectableDust, ERC721Holder {\n    using Address for address;\n    using SafeMath for uint256;\n    using Counters for Counters.Counter;\n\n    uint256 public FEE_MAX = 10000;\n    uint256 public workFee = 100;\n\n    IHegicNFT public ethNft;\n    IPriceProvider public priceProvider;\n    address public keeper;\n\n    Counters.Counter private _trackedTokenIds;\n    mapping(uint256 => TrackedToken) public trackedTokens;\n\n    constructor(IHegicNFT _ethNft, IPriceProvider _priceProvider) public Governable(msg.sender) CollectableDust() {\n        ethNft = _ethNft;\n        priceProvider = _priceProvider;\n    }\n\n    function track(uint256 tokenId, uint256 priceTarget) external override returns (uint256 trackedTokenId) {\n        require(ethNft.isValidToken(tokenId), \"tokenId invalid\");\n\n        ethNft.safeTransferFrom(msg.sender, address(this), tokenId);\n\n        _trackedTokenIds.increment();\n        trackedTokenId = _trackedTokenIds.current();\n        TrackedToken memory trackedToken = TrackedToken(msg.sender, tokenId, priceTarget);\n        trackedTokens[trackedTokenId] = trackedToken;\n\n        emit TokenTracked(trackedTokenId);\n    }\n\n    function untrack(uint256 trackedTokenId) external override returns (bool) {\n        TrackedToken memory trackedToken = trackedTokens[trackedTokenId];\n        require(trackedToken.owner == msg.sender, \"!owner\");\n\n        ethNft.safeTransferFrom(address(this), msg.sender, trackedToken.tokenId);\n        delete trackedTokens[trackedTokenId];\n        emit TokenUntracked(trackedTokenId);\n\n        return true;\n    }\n\n    function exercisable(uint256 trackedTokenId) external view override returns (bool) {\n        TrackedToken memory trackedToken = trackedTokens[trackedTokenId];\n        Option memory option = ethNft.getUnderlyingOptionParams(trackedToken.tokenId);\n\n        if (option.expiration < block.timestamp || option.state != State.Active) {\n            return false;\n        }\n\n        if (trackedToken.owner == msg.sender) {\n            return true;\n        }\n\n        (, int256 latestPrice, , , ) = priceProvider.latestRoundData();\n        uint256 currentPrice = uint256(latestPrice);\n\n        if (option.optionType == OptionType.Call) {\n            return currentPrice >= trackedToken.priceTarget;\n        } else if (option.optionType == OptionType.Put) {\n            return currentPrice <= trackedToken.priceTarget;\n        }\n\n        return false;\n    }\n\n    function exercise(uint256 trackedTokenId) external override returns (address, uint256) {\n        require(this.exercisable(trackedTokenId), \"trackedTokenId not exercisable\");\n\n        TrackedToken memory trackedToken = trackedTokens[trackedTokenId];\n\n        ethNft.exerciseOption(trackedToken.tokenId);\n\n        uint256 grossProfit = address(this).balance;\n        uint256 ownerFee = grossProfit.mul(workFee).div(FEE_MAX);\n        require(ownerFee > 0, \"profit==0\");\n\n        payable(governor).transfer(ownerFee);\n\n        uint256 netProfit = address(this).balance;\n        if (msg.sender == keeper) {\n            payable(keeper).transfer(netProfit);\n        } else {\n            payable(trackedToken.owner).transfer(netProfit);\n        }\n\n        delete trackedTokens[trackedTokenId];\n\n        emit TrackedTokenExercised(trackedToken.tokenId, grossProfit);\n\n        return (trackedToken.owner, netProfit);\n    }\n\n    function setWorkFee(uint256 _workFee) external override onlyGovernor {\n        require(_workFee > 0 && _workFee <= 10000);\n        workFee = _workFee;\n        emit WorkFeeSet(_workFee);\n    }\n\n    function setKeeper(address _keeper) external override onlyGovernor {\n        keeper = _keeper;\n        emit KeeperSet(_keeper);\n    }\n\n    // Governable\n    function setPendingGovernor(address _pendingGovernor) external override onlyGovernor {\n        _setPendingGovernor(_pendingGovernor);\n    }\n\n    function acceptGovernor() external override onlyPendingGovernor {\n        _acceptGovernor();\n    }\n\n    // Collectable Dust\n    function sendDust(\n        address _to,\n        address _token,\n        uint256 _amount\n    ) external override onlyGovernor {\n        _sendDust(_to, _token, _amount);\n    }\n\n    receive() external payable {}\n}\n",
  "sourceMap": "504:4210:11:-:0;;;714:5;689:30;;750:3;725:28;;965:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1045:10;273:23:10;265:83;;;;-1:-1:-1;;;265:83:10;;;;;;;:::i;:::-;;;;;;;;;358:8;:20;;-1:-1:-1;;;;;;358:20:10;;;-1:-1:-1;;;;;358:20:10;;;;;;;1085:6:11::2;:16:::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;1111:13:::2;:30:::0;;;;::::2;::::0;::::2;;::::0;;504:4210;;369:481:-1;;;542:2;530:9;521:7;517:23;513:32;510:2;;;-1:-1;;548:12;510:2;107:6;101:13;119:51;164:5;119:51;:::i;:::-;729:2;802:22;;283:13;600:92;;-1:-1;301:56;283:13;301:56;:::i;:::-;737:97;;;;504:346;;;;;:::o;1250:416::-;1450:2;1464:47;;;1082:2;1435:18;;;1777:19;1118:34;1817:14;;;1098:55;-1:-1;;;1173:12;;;1166:39;1224:12;;;1421:245::o;2308:153::-;-1:-1;;;;;2242:54;;2385:53;;2375:2;;2452:1;;2442:12;2375:2;2369:92;:::o;:::-;504:4210:11;;;;;;",
  "sourcePath": "contracts/HegicBot.sol",
  "type": "contract"
}